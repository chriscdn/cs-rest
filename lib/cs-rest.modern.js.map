{"version":3,"file":"cs-rest.modern.js","sources":["../src/rpc-client/error-codes.ts","../src/rpc-client/index.ts","../src/handlers/service-abstract.ts","../src/handlers/auth.ts","../src/utils/subtypes-enum.ts","../src/utils/is-node.ts","../src/handlers/nodes.ts","../src/utils/workflow-initiator.ts","../src/handlers/workflow.ts","../src/handlers/rhcore.ts","../src/handlers/search.ts","../src/handlers/members.ts","../src/handlers/versions.ts","../src/handlers/webreports.ts","../src/Session.ts","../src/utils/axios-factory.ts","../src/index.ts"],"sourcesContent":["const ErrorCodes = {\n  PARSEERROR: {\n    code: -32700,\n    message: \"Parse error\",\n  },\n  INVALIDREQUEST: {\n    code: -32600,\n    message: \"Invalid Request\",\n  },\n  METHODNOTFOUND: {\n    code: -32601,\n    message: \"Method not found\",\n  },\n  INVALIDPARAMS: {\n    code: -32602,\n    message: \"Invalid params\",\n  },\n  INTERNALERROR: {\n    code: -32603,\n    message: \"Internal error\",\n  },\n} as const;\n\ntype ErrorMessage = {\n  message: string;\n  code: number;\n  data: Array<any> | Record<string, any>;\n};\n\nconst isObject = (x: unknown): x is Object =>\n  typeof x === \"object\" && x !== null;\n\nclass RPCError extends Error {\n  code: number;\n  data: Array<any> | Record<string, any>;\n\n  constructor(\n    message: string | ErrorMessage = ErrorCodes.INTERNALERROR.message,\n    data = null,\n    code: number = ErrorCodes.INTERNALERROR.code\n  ) {\n    if (isObject(message)) {\n      const messageObj = message as RPCError;\n\n      super(messageObj.message);\n\n      this.code = messageObj.code;\n      this.data = messageObj.data;\n    } else {\n      super(message as string);\n\n      this.code = code;\n      this.data = data;\n    }\n  }\n}\n\nexport { RPCError, ErrorCodes };\n","import { RPCError } from \"./error-codes\";\nimport Session from \"../Session\";\n\nconst sequence = {\n  index: 0,\n  get next(): number {\n    this.index = this.index + 1;\n    return this.index;\n  },\n};\n\ntype requestObjectType = {\n  jsonrpc: string;\n  method: string;\n  id: number;\n  params: Record<string, any> | Array<any>;\n};\n\nexport default class RPCClient {\n  session: Session;\n  relativePath: string;\n\n  protected _batchQueue: Array<requestObjectType>;\n\n  constructor(session: Session, relativePath: string) {\n    this.session = session;\n    this.relativePath = relativePath;\n    this.resetQueue();\n  }\n\n  protected requestObject(\n    method: string,\n    params: Record<string, any> | Array<any>,\n    id: number\n  ): requestObjectType {\n    return {\n      jsonrpc: \"2.0\",\n      method,\n      id,\n      params,\n    };\n  }\n\n  protected handleResponse(data) {\n    if (Object.prototype.hasOwnProperty.call(data, \"result\")) {\n      return data.result;\n    } else if (Object.prototype.hasOwnProperty.call(data, \"error\")) {\n      const err = data.error;\n      throw new RPCError(err.message, err.data, err.code);\n    } else {\n      throw Error(\"The server did not respond correctly.\");\n    }\n  }\n\n  // https://www.jsonrpc.org/specification#request_object\n  // params is allowed to be null!\n  // also on queue function below\n  async request(method: string, params: any, id: number = sequence.next) {\n    const response = await this.session.postBody(this.relativePath, {\n      rpc: this.requestObject(method, params, id),\n    });\n\n    return this.handleResponse(response.data);\n  }\n\n  private resetQueue(): void {\n    this._batchQueue = [];\n  }\n\n  queue(method: string, params: any, id: number = sequence.next): RPCClient {\n    this._batchQueue.push(this.requestObject(method, params, id));\n    return this;\n  }\n\n  async batch(throwOnError: boolean = false): Promise<any> {\n    const queue = this._batchQueue;\n    this.resetQueue();\n    const response = await this.session.postBody<any>(this.relativePath, {\n      rpc: queue,\n    });\n\n    return (response.data.data ?? []).map((item) => {\n      if (throwOnError) {\n        return this.handleResponse(item);\n      } else {\n        try {\n          return this.handleResponse(item);\n        } catch (e) {\n          return e;\n        }\n      }\n    });\n  }\n\n  rhnode(dataid, method, args = [], id = sequence.next) {\n    const params = {\n      dataid,\n      args,\n    };\n\n    return this.request(method, params, id);\n  }\n\n  rhnodeQueue(dataid, method, args = [], id = sequence.next) {\n    const params = {\n      dataid,\n      args,\n    };\n\n    return this.queue(method, params, id);\n  }\n}\n","import type Session from \"../Session\";\n\nclass ServiceAbstract {\n  protected _session: Session;\n\n  constructor(session: Session) {\n    this._session = session;\n  }\n\n  get session() {\n    return this._session;\n  }\n}\n\nexport default ServiceAbstract;\n","import ServiceAbstract from \"./service-abstract\";\n\nclass Auth extends ServiceAbstract {\n  auth() {\n    return this.session.get(\"/api/v1/auth/\");\n  }\n}\n\nexport default Auth;\n","/**\n * How many do we actually care about?\n */\n\nexport enum SubTypesEnum {\n  Alias = 1,\n  Category = 131,\n  Collection = 298,\n  CompoundDoc = 136,\n  Document = 144,\n  Folder = 0,\n  Generation = 2,\n  Project = 202,\n  ProjectVol = 201,\n  Release = 138,\n  Revision = 139,\n  ScriptNode = 32901,\n  Simplate = 31678,\n}\n\n// export enum SubTypesEnum {\n//   // TwoWayTee = 294,\n//   Accession = 834,\n//   ActiveFolder = 1298,\n//   Activeview = 30309,\n//   ActivityManager = 907,\n//   Alias = 1,\n//   Appearance = 480,\n//   AppearanceFolder = 483,\n//   AppearancesVolume = 481,\n//   ArchiveFolder = 31711,\n//   BackupManager = 290,\n//   BackupProcess = 291,\n//   BestBets = 274,\n//   Blog = 356,\n//   BlogEntry = 357,\n//   BoxFolder = 530,\n//   Category = 131,\n//   CategoryFolder = 132,\n//   Channel = 207,\n//   ChannelVol = 209,\n//   Classification = 199,\n//   ClassificationShortcut = 197,\n//   ClassificationTree = 196,\n//   ClassifiedItems = 194,\n//   Collection = 298,\n//   Column = 902,\n//   Comments = 345,\n//   CommentsReply = 348,\n//   CommentsVol = 346,\n//   CommExpertContainer = 3030338,\n//   CommExpertGroup = 3030339,\n//   CommStore = 3030329,\n//   CommTemplate = 3030002,\n//   CommTemplateFolder = 3030333,\n//   CommTemplateVol = 3030004,\n//   CommURLStore = 3030335,\n//   CommWorkspace = 3030334,\n//   CommXSLVolume = 3030205,\n//   CompoundDoc = 136,\n//   CompoundEMail = 557,\n//   ContentModuleFolder = 3030372,\n//   CSApplicationManifest = 32658,\n//   CSApplicationsVolume = 32657,\n//   CustomView = 146,\n//   CustomViewTemplate = 844,\n//   DataFlowManager = 270,\n//   DataSourceFolder = 276,\n//   DirWalker = 277,\n//   Discussion = 215,\n//   DispositionGroup = 602,\n//   Document = 144,\n//   DocumentLLNode = 1297,\n//   DocumentServer = 283,\n//   Dossier = 32912,\n//   DossierCabinet = 32916,\n//   DossierCabinetArchive = 31707,\n//   DossierTemplate = 32914,\n//   DossierTemplateFolder = 31709,\n//   DossierTemplatesVolume = 32917,\n//   DossierTemplateVolume = 32915,\n//   DossierVolume = 32913,\n//   DPSBinding = 31602,\n//   DPSFolder = 31601,\n//   DPSVolume = 31603,\n//   DTDLLNode = 335,\n//   DynamicView = 900,\n//   EMail = 749,\n//   EmailConversationItems = 2504,\n//   EnterpriseArchiveDocument = 753,\n//   Facet = 904,\n//   FacetFolder = 905,\n//   FacetTree = 903,\n//   FailedFolder = 1299,\n//   FixedSystemColumn = 906,\n//   Folder = 0,\n//   Form = 223,\n//   Generation = 2,\n//   GENERICCONTENTMODULE = 3030371,\n//   GlobalAppearance = 482,\n//   HoldContainer = 833,\n//   HTMLConversion = 282,\n//   HTMLFormView = 226,\n//   Importer = 293,\n//   Inbox = 731,\n//   IndexEngine = 368,\n//   IndexTracer = 147,\n//   IndexUpdate = 281,\n//   InternalOTDS = 924,\n//   ItemTemplateVol = 541,\n//   ItemTemplateVolFolder = 542,\n//   JournalVolume = 361,\n//   LibraryExtractor = 259,\n//   LibraryObj = 272,\n//   LLNodeEmailFolder = 751,\n//   LLNodeFAQ = 123475,\n//   LLNodeFAQEntry = 123476,\n//   LLNodeForum = 123469,\n//   LLNodeForumEntry = 123470,\n//   LLNodeURQuestion = 430,\n//   LLNodeURReply = 432,\n//   Locators = 422,\n//   Mailbox = 732,\n//   MailStore = 3030331,\n//   ManagedSpace = 31710,\n//   MediaType = 410,\n//   MediaTypesContainer = 414,\n//   MemcachedFolder = 919,\n//   MemcachedProcess = 920,\n//   Merge = 273,\n//   MicroPost = 1281,\n//   MicroPostVolume = 1282,\n//   MultiVolClassification = 372,\n//   MultiVolClassificationProxy = 374,\n//   MultiVolClassificationTree = 373,\n//   MyReservedItems = 870,\n//   MyWorkbenches = 532,\n//   NAVMENUVOL = 3030756,\n//   News = 208,\n//   OTCIndexObj = 257,\n//   Partition = 371,\n//   PartitionMap = 370,\n//   PersonalComm = 3030203,\n//   PersonalCommSystemVolume = 3030003,\n//   PersonalCommVol = 3030204,\n//   PersonalStagingFolder = 398,\n//   PersonalWebpage = 3030343,\n//   PhysicalItemBox = 424,\n//   PhysicalItemContainer = 412,\n//   PhysicalItemCopy = 419,\n//   PhysicalItem_non_Container = 411,\n//   PhysObjAdmin = 415,\n//   PhysObjBatchLabels = 418,\n//   PhysObjCirculation = 416,\n//   PhysObjReports = 417,\n//   Poll = 218,\n//   Process = 271,\n//   Profile = 195,\n//   Project = 202,\n//   ProjectTemplate = 543,\n//   ProjectVol = 201,\n//   Prospector = 384,\n//   ProspectorQueries = 380,\n//   ProspectorSnapshot = 387,\n//   Provenance = 829,\n//   Proxy = 260,\n//   PublishingFolder = 31712,\n//   PublishingFolderVolume = 31713,\n//   QAFolder = 441,\n//   QueryFile = 296,\n//   QuestionVolume = 431,\n//   RecentItems = 327,\n//   RecordType = 425,\n//   RecordTypesContainer = 428,\n//   RedForm = 32918,\n//   RedFormVolume = 32919,\n//   Release = 138,\n//   RemoteLLDataSource = 381,\n//   Reply = 134,\n//   Report = 299,\n//   Revision = 139,\n//   RIMSDisposition = 555,\n//   RIMSDispositionsContainer = 554,\n//   RIMSHoldMaintenance = 552,\n//   RIMSRsiContainer = 553,\n//   RMAdministration = 556,\n//   RMClassification = 551,\n//   RMFolder = 426,\n//   RMPart = 427,\n//   RMReportsContainer = 558,\n//   RMThesaurus = 559,\n//   ScanConfigurationVolume = 2505,\n//   ScheduledHoldCriteria = 835,\n//   ScriptNode = 32901,\n//   SearchBroker = 258,\n//   SearchEngine = 369,\n//   SearchManager = 269,\n//   SearchReport = 278,\n//   SearchResultsTemplate = 383,\n//   SearchTemplate = 292,\n//   Simplate = 31678,\n//   SkyPodLLVolume = 49547,\n//   SliceFolder = 275,\n//   SocialObject = 1280,\n//   SocialObjectVolume = 1283,\n//   SPCJOBDESCR = 797,\n//   SPCJOBDESCRFOLDER = 796,\n//   SPCVOLUME = 795,\n//   spdcommittee = 3030202,\n//   spdcommitteevol = 3030201,\n//   spdcommitteevolume = 3030001,\n//   spdemail = 3030130,\n//   Spider = 280,\n//   StorageManagement = 421,\n//   SubmitVersionNode = 231,\n//   Task = 206,\n//   TaskGroup = 205,\n//   TaskList = 204,\n//   TaskListVol = 210,\n//   TaskMilestone = 212,\n//   Template = 230,\n//   TemplateFolder = 268,\n//   TextDocument = 145,\n//   Topic = 130,\n//   Transfers = 423,\n//   TransportBox = 531,\n//   TransportItem = 526,\n//   TransportItemPart = 527,\n//   UrgentRequests = 3030330,\n//   URL = 140,\n//   VirtualFolder = 899,\n//   VolBlog = 123461,\n//   VolCategories = 133,\n//   VolClassification = 198,\n//   VolComments = 347,\n//   VolDAP = 987352,\n//   VolDeletedItems = 405,\n//   VolDirectory = 375,\n//   VolDiscussion = 143,\n//   VolDomainWorkspace = 180,\n//   VolDTD = 336,\n//   VolEditWorkflow = 162,\n//   VolFacets = 901,\n//   VolLibrary = 141,\n//   VolOrphan = 403,\n//   VolPersonalStaging = 397,\n//   VolPerspectives = 908,\n//   VolPhysObj = 413,\n//   VolRecMan = 550,\n//   VolRelease = 137,\n//   VolReports = 211,\n//   VolSystem = 148,\n//   VolTracer = 149,\n//   VolumeFolder = 484,\n//   VolumeLLVolume = 1296,\n//   VolWarehouse = 525,\n//   VolWorkbin = 142,\n//   VolWorkflow = 161,\n//   WarehouseFolder = 529,\n//   WebFormConnectionVolume = 236,\n//   WebFormDatabaseConnection = 235,\n//   WebFormLookup = 234,\n//   WebFormLookupVolume = 233,\n//   WebReports = 30303,\n//   WFMapLLNode = 128,\n//   WFStatusNode = 190,\n//   WIKI = 5573,\n//   WIKIPAGE = 5574,\n//   Workbench = 528,\n//   WorkflowAttachments = 154,\n//   XMLActivatorCon = 286,\n//   XMLActivatorProd = 285,\n// }\n","/**\n * A simple check whether we're in a browser or node context.\n *\n * @returns\n */\nexport const isNode = () => typeof window === \"undefined\";\n","import { SubTypesEnum } from \"../utils/subtypes-enum\";\r\nimport ServiceAbstract from \"./service-abstract\";\r\nimport { isNode } from \"../utils/is-node\";\r\nimport { components } from \"../types/cs-rest-types/schema\";\r\n\r\n// type TNewVersionType = components[\"schemas\"][\"versions_NewVersionInfo\"];\r\n\r\nclass Nodes extends ServiceAbstract {\r\n  addablenodetypes(dataid: number) {\r\n    return this.session.get<components[\"schemas\"][\"nodes_AddableTypesInfo\"]>(\r\n      `api/v1/nodes/${dataid}/addablenodetypes`\r\n    );\r\n  }\r\n\r\n  async addDocument({\r\n    parent_id,\r\n    fileHandler,\r\n    // apiVersion = \"v1\",\r\n    name = undefined,\r\n    description = undefined,\r\n    options = {},\r\n  }: {\r\n    parent_id: number;\r\n    fileHandler: File | string;\r\n    // apiVersion?: \"v1\" | \"v2\";\r\n    name?: string;\r\n    description?: string;\r\n    options?: Record<string, any>;\r\n  }) {\r\n    const url = `api/v1/nodes`;\r\n\r\n    if (isNode() && this.session._isString(fileHandler)) {\r\n      // node.js\r\n      const fs = await import(\"fs\");\r\n      const f = fs.createReadStream(fileHandler);\r\n\r\n      const params = {\r\n        ...options,\r\n        type: SubTypesEnum.Document,\r\n        name,\r\n        parent_id,\r\n        file: f,\r\n      };\r\n\r\n      return await this.session.postForm<\r\n        components[\"schemas\"][\"nodes_CreateResponse\"]\r\n      >(url, params);\r\n    } else if (this.session._isFile(fileHandler)) {\r\n      // browser\r\n\r\n      const params = {\r\n        ...options,\r\n        type: SubTypesEnum.Document,\r\n        name,\r\n        description,\r\n        parent_id,\r\n        file: fileHandler,\r\n      };\r\n\r\n      return await this.session.postForm<\r\n        components[\"schemas\"][\"nodes_CreateResponse\"]\r\n      >(url, params);\r\n    } else {\r\n      throw new Error(\"Invalid file.\");\r\n    }\r\n  }\r\n\r\n  async addDocumentMajor({\r\n    parent_id,\r\n    fileHandler,\r\n    name = undefined,\r\n    description = undefined,\r\n    options = {},\r\n  }: {\r\n    parent_id: number;\r\n    fileHandler: File | string;\r\n    name?: string;\r\n    description?: string;\r\n    options: Record<string, any>;\r\n  }) {\r\n    const response = await this.addDocument({\r\n      parent_id,\r\n      fileHandler,\r\n      name,\r\n      options: {\r\n        ...options,\r\n        advanced_versioning: true,\r\n      },\r\n    });\r\n\r\n    const dataid = response.data.id;\r\n\r\n    await this.session.versions.promote({\r\n      dataid,\r\n      versionNumber: 1,\r\n      description,\r\n    });\r\n\r\n    await this.session.versions.deleteVersion({\r\n      dataid,\r\n      versionNumber: 1,\r\n    });\r\n\r\n    return response;\r\n  }\r\n\r\n  addItem(type, parent_id, name, params = {}) {\r\n    return this.session.postBody<\r\n      components[\"schemas\"][\"nodes_V2ResponseElementPost\"]\r\n    >(\"api/v2/nodes\", {\r\n      type,\r\n      parent_id,\r\n      name,\r\n      ...params,\r\n    });\r\n  }\r\n\r\n  node({ dataid, apiVersion = \"v2\", params = {} }) {\r\n    return this.session.get(`api/${apiVersion}/nodes/${dataid}`, {\r\n      params,\r\n    });\r\n  }\r\n\r\n  ancestors(dataid, params = {}) {\r\n    return this.session.get(`api/v1/nodes/${dataid}/ancestors`, {\r\n      params,\r\n    });\r\n  }\r\n\r\n  volumeInfo(objType) {\r\n    return this.session.get<\r\n      components[\"parameters\"][\"suppress_response_codes\"]\r\n    >(`api/v1/volumes/${objType}`);\r\n  }\r\n\r\n  volumes() {\r\n    return this.session.get(\"api/v2/volumes\");\r\n  }\r\n\r\n  addFolder(parent_id, name, params = {}) {\r\n    return this.addItem(SubTypesEnum.Folder, parent_id, name, params);\r\n  }\r\n\r\n  addGeneration(parent_id, name, original_id, version_number, params = {}) {\r\n    return this.addItem(SubTypesEnum.Generation, parent_id, name, {\r\n      original_id,\r\n      version_number,\r\n      ...params,\r\n    });\r\n  }\r\n\r\n  nodes(dataid, params = {}) {\r\n    // https://developer.opentext.com/webaccess/#url=%2Fawd%2Fresources%2Fapis%2Fcs-rest-api-for-cs-16-s%23!%2Fnodes%2FgetSubnodes_get_15&tab=501\r\n    return this.session.get(`api/v2/nodes/${dataid}/nodes`, {\r\n      params,\r\n    });\r\n  }\r\n\r\n  children(dataid, params = {}) {\r\n    return this.nodes(dataid, params);\r\n  }\r\n\r\n  delete(dataid) {\r\n    return this.session.delete(`api/v1/nodes/${dataid}`);\r\n  }\r\n\r\n  download({ dataid, apiVersion = \"v1\", filePath }) {\r\n    // this.session.nodes.download(1267501, 'v2', '/Users/chris/Downloads/test.pdf')\r\n    if (isNode()) {\r\n      return this.session\r\n        .get<any>(`api/${apiVersion}/nodes/${dataid}/content`, {\r\n          responseType: \"stream\",\r\n        })\r\n        .then(async (response) => {\r\n          const fs = await import(\"fs\");\r\n          const writer = fs.createWriteStream(filePath);\r\n\r\n          response.data.pipe(writer);\r\n\r\n          return new Promise((resolve, reject) => {\r\n            writer.on(\"finish\", resolve);\r\n            writer.on(\"error\", reject);\r\n          });\r\n        });\r\n    } else {\r\n      return Promise.reject(\"Not implemented yet\");\r\n    }\r\n  }\r\n\r\n  audit({ dataid, apiVersion = \"v2\", params = {} }) {\r\n    return this.session.get(`api/${apiVersion}/nodes/${dataid}/audit`, {\r\n      params,\r\n    });\r\n  }\r\n}\r\n\r\nexport default Nodes;\r\n","import Session from \"../Session\";\n\nimport { components } from \"../types/cs-rest-types/schema\";\n\ntype draftprocesses_DraftProcess =\n  components[\"schemas\"][\"draftprocesses_DraftProcess\"];\n\ntype forms_WorkflowPropertiesFormInfo =\n  components[\"schemas\"][\"forms_WorkflowPropertiesFormInfo\"];\n\ntype draftprocesses_DraftProcess_Put =\n  components[\"schemas\"][\"draftprocesses_DraftProcess_Put\"];\n\nexport type TWorkflowPut = {\n  action: \"Initiate\" | \"formUpdate\";\n  values?: any;\n  comment?: string;\n  authentication_info?: { password: string };\n};\n\nclass WorkflowInitiator {\n  workflowPropertiesInfo: forms_WorkflowPropertiesFormInfo | null = null;\n\n  constructor(private session: Session, private mapId: number) {}\n\n  /**\n   * This method prepares the workflow for initiation. It must be called before any other method.\n   */\n  async start() {\n    this.workflowPropertiesInfo = await this.session.workflow.start(this.mapId);\n  }\n\n  get form() {\n    return this.workflowPropertiesInfo.forms[0];\n  }\n\n  findWorkflowAttribute(attributeName: string) {\n    const properties: Record<string, any> = this.form.schema.properties;\n\n    return Object.entries(properties).find(\n      ([workflowName, value]) => value.title === attributeName\n    );\n  }\n\n  get processId(): number {\n    // @ts-ignore - This is missing in the openapi schema.\n    return this.workflowPropertiesInfo.data.process_id;\n  }\n\n  get attachmentsFolderId(): number | undefined {\n    const dataPackages = this.workflowPropertiesInfo.data.data_packages;\n    const attachmentPkg = dataPackages.find(\n      (pkg) => pkg.type === 1 && pkg.sub_type === 1\n    );\n    return attachmentPkg?.data.attachment_folder_id;\n  }\n\n  get wantComments(): boolean {\n    return this.workflowPropertiesInfo.data.comments_on;\n  }\n\n  get wantAuthentication(): boolean {\n    return this.workflowPropertiesInfo.data.authentication;\n  }\n\n  setWorkflowAttribute(\n    attributeName: string,\n    value: any\n  ): typeof WorkflowInitiator {\n    const [fieldName, definition] =\n      this.findWorkflowAttribute(attributeName) ?? [];\n\n    const attributeType = definition.type;\n    const isArray = attributeType === \"array\";\n\n    if (isArray === Array.isArray(value)) {\n      this.form.data[fieldName] = value;\n      return WorkflowInitiator;\n    } else {\n      throw new Error(\"Invalid type.\");\n    }\n  }\n\n  async formUpdate() {\n    return await this.session.workflow.draftprocessesPut(this.processId, {\n      action: \"formUpdate\",\n      values: this.form.data,\n    });\n  }\n\n  async initiate({\n    comment,\n    password,\n  }: { comment?: string; password?: string } = {}) {\n    await this.formUpdate();\n\n    const initiateValues = {\n      action: \"Initiate\",\n      ...(this.wantComments && { comment }),\n      ...(this.wantAuthentication && { authentication_info: { password } }),\n    } as const;\n\n    const response = await this.session.workflow.draftprocessesPut(\n      this.processId,\n      initiateValues\n    );\n\n    return response;\n  }\n}\n\nexport { WorkflowInitiator };\n","import ServiceAbstract from \"./service-abstract\";\r\nimport { components } from \"../types/cs-rest-types/schema\";\r\nimport { TWorkflowPut, WorkflowInitiator } from \"../utils/workflow-initiator\";\r\n\r\nclass Workflow extends ServiceAbstract {\r\n  workflowInitiator(mapId: number): WorkflowInitiator {\r\n    return new WorkflowInitiator(this.session, mapId);\r\n  }\r\n\r\n  start(mapId: number) {\r\n    return this.draftprocesses(mapId)\r\n      .then((draftProcess) => {\r\n        // this is a bug in the definition?\r\n        // @ts-ignore\r\n        return draftProcess.results.draftprocess_id as number;\r\n      })\r\n      .then((draftprocessId: number) =>\r\n        this.draftprocessesUpdate(draftprocessId)\r\n      );\r\n  }\r\n\r\n  async draftprocesses(workflowId: number) {\r\n    const { data } = await this.session.postForm<\r\n      components[\"schemas\"][\"draftprocesses_DraftProcess_V2EmptyResponse\"]\r\n    >(\"api/v2/draftprocesses\", {\r\n      workflow_id: workflowId,\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  async draftprocessesUpdate(draftprocessId: number) {\r\n    const { data } = await this.session.get<\r\n      components[\"schemas\"][\"forms_WorkflowPropertiesFormInfo\"]\r\n    >(\"api/v1/forms/draftprocesses/update\", {\r\n      params: {\r\n        draftprocess_id: draftprocessId,\r\n      },\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  async draftprocessesPut(draftprocessId: number, body: TWorkflowPut) {\r\n    const { data } = await this.session.putForm<\r\n      components[\"schemas\"][\"draftprocesses_DraftProcess_PutV2EmptyResponse\"]\r\n    >(`api/v2/draftprocesses/${draftprocessId}`, {\r\n      body,\r\n    });\r\n\r\n    return data;\r\n  }\r\n}\r\n\r\nexport default Workflow;\r\n","import ServiceAbstract from \"./service-abstract\";\r\n\r\nclass RHCore extends ServiceAbstract {\r\n  scriptNode(id, body = {}) {\r\n    return this.session.postForm(`api/v1/rhcore/${id}`, body);\r\n  }\r\n}\r\n\r\nexport default RHCore;\r\n","import ServiceAbstract from \"./service-abstract\";\n\nclass Search extends ServiceAbstract {\n  search(where, params = {}) {\n    return this.session.postBody(\"api/v2/search\", {\n      where,\n      ...params,\n    });\n  }\n\n  regions(params = {}) {\n    return this.session.get(\"api/v1/regions\", params);\n  }\n}\n\nexport default Search;\n","import Session from \"../Session\";\nimport ServiceAbstract from \"./service-abstract\";\n\nclass Members extends ServiceAbstract {\n  // public readonly USER: 0\n  // public readonly GROUP: 1\n\n  public readonly USER: number;\n  public readonly GROUP: number;\n\n  constructor(session: Session) {\n    super(session);\n\n    this.USER = 0;\n    this.GROUP = 1;\n  }\n  userQuery(query, options = {}, version = \"v2\") {\n    const params = {\n      limit: 20,\n      where_type: JSON.stringify([this.USER, this.GROUP]),\n      query,\n      ...options,\n    };\n\n    return this.session.get(`api/${version}/members`, { params });\n  }\n\n  member(id, version = \"v2\") {\n    return this.session.get(`api/${version}/members/${id}`);\n  }\n}\n\nexport default Members;\n","import { isNode } from \"../utils/is-node\";\r\nimport ServiceAbstract from \"./service-abstract\";\r\nimport { components } from \"../types/cs-rest-types/schema\";\r\n\r\ntype TNewVersionType = components[\"schemas\"][\"versions_NewVersionInfo\"];\r\n\r\nclass Versions extends ServiceAbstract {\r\n  async addVersion({\r\n    dataid,\r\n    fileHandler,\r\n    options = {},\r\n  }: {\r\n    dataid: number;\r\n    fileHandler: File | string;\r\n    options?: Record<string, any>;\r\n  }) {\r\n    console.assert(dataid != null, \"dataid cannot be null\");\r\n    console.assert(fileHandler != null, \"fileHandler cannot be null\");\r\n\r\n    const url = `api/v1/nodes/${dataid}/versions`;\r\n\r\n    if (isNode() && this.session._isString(fileHandler)) {\r\n      // node.js\r\n      const fs = await import(\"fs\");\r\n      const f = fs.createReadStream(fileHandler);\r\n\r\n      const params = {\r\n        file: f,\r\n        ...options,\r\n      };\r\n\r\n      return this.session.postForm<TNewVersionType>(url, params);\r\n    } else if (this.session._isFile(fileHandler)) {\r\n      // browser\r\n      const params = {\r\n        file: fileHandler,\r\n        ...options,\r\n      };\r\n\r\n      return this.session.postForm<TNewVersionType>(url, params);\r\n    } else {\r\n      throw new Error(\"Invalid file.\");\r\n    }\r\n  }\r\n\r\n  download({ dataid, version, filePath }) {\r\n    console.assert(dataid != null, \"dataid cannot be null\");\r\n    console.assert(version != null, \"version cannot be null\");\r\n    console.assert(filePath != null, \"filePath cannot be null\");\r\n\r\n    if (isNode()) {\r\n      return this.session\r\n        .get<any>(`api/v1/nodes/${dataid}/versions/${version}/content`, {\r\n          responseType: \"stream\",\r\n        })\r\n        .then(async (response) => {\r\n          const fs = await import(\"fs\");\r\n          const writer = fs.createWriteStream(filePath);\r\n\r\n          response.data.pipe(writer);\r\n\r\n          return new Promise((resolve, reject) => {\r\n            writer.on(\"finish\", resolve);\r\n            writer.on(\"error\", reject);\r\n          });\r\n        });\r\n    } else {\r\n      return Promise.reject(\"Not implemented yet\");\r\n    }\r\n  }\r\n\r\n  list(dataid: number) {\r\n    const url = `api/v1/nodes/${dataid}/versions`;\r\n    return this.session.get(url);\r\n  }\r\n  version(dataid, version_number = \"latest\") {\r\n    // latest not supported in v2\r\n    const url = `api/v1/nodes/${dataid}/versions/${version_number}`;\r\n    return this.session.get(url);\r\n  }\r\n\r\n  promote({ dataid, versionNumber, description = null }) {\r\n    console.assert(dataid != null, \"dataid cannot be null\");\r\n    console.assert(versionNumber != null, \"number_to_keep must be an integer\");\r\n\r\n    const url = `api/v2/nodes/${dataid}/versions/${versionNumber}/promote`;\r\n\r\n    return this.session.postBody(url, {\r\n      ...(!!description && {\r\n        description,\r\n      }),\r\n    });\r\n  }\r\n\r\n  deleteVersion({ dataid, versionNumber, apiVersion = \"v1\" }) {\r\n    console.assert(dataid != null, \"dataid cannot be null\");\r\n    console.assert(versionNumber != null, \"number_to_keep must be an integer\");\r\n\r\n    const url = `api/${apiVersion}/nodes/${dataid}/versions/${versionNumber}`;\r\n\r\n    // careful with deleteForm or deleteBody\r\n    return this.session.delete(url);\r\n  }\r\n\r\n  purge({ dataid, number_to_keep = 1 }) {\r\n    console.assert(dataid != null, \"dataid cannot be null\");\r\n    console.assert(!isNaN(number_to_keep), \"number_to_keep must be an integer\");\r\n\r\n    // delete parameters not supported\r\n    // https://stackoverflow.com/questions/51069552/axios-delete-request-with-body-and-headers\r\n    // number_to_keep is ignored\r\n\r\n    const url = `api/v2/nodes/${dataid}/versions`;\r\n\r\n    return this.session.deleteForm(url, {\r\n      number_to_keep,\r\n    });\r\n  }\r\n}\r\n\r\nexport default Versions;\r\n","import ServiceAbstract from \"./service-abstract\";\n\nclass WebReports extends ServiceAbstract {\n  run(dataid, params = {}) {\n    const url = `api/v1/nodes/${dataid}/output`;\n    return this.session.get(url, { params });\n  }\n}\n\nexport default WebReports;\n","import axiosFactory, { CSRestOptions } from \"./utils/axios-factory\";\r\nimport Auth from \"./handlers/auth\";\r\nimport Nodes from \"./handlers/nodes\";\r\nimport Workflow from \"./handlers/workflow\";\r\nimport RHCore from \"./handlers/rhcore\";\r\nimport Search from \"./handlers/search\";\r\nimport Members from \"./handlers/members\";\r\nimport Versions from \"./handlers/versions\";\r\nimport WebReports from \"./handlers/webreports\";\r\nimport RPCClient from \"./rpc-client/index\";\r\nimport { AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\r\n\r\nexport default class Session {\r\n  protected readonly axios: AxiosInstance;\r\n  protected _nodes: Nodes;\r\n  protected _auth: Auth;\r\n  protected _workflow: any;\r\n  protected _rhcore: RHCore;\r\n  protected _members: Members;\r\n  protected _search: Search;\r\n  protected _webreports: WebReports;\r\n  protected _versions: Versions;\r\n\r\n  public readonly baseUrl: string;\r\n\r\n  constructor(options: CSRestOptions) {\r\n    this.baseUrl = options.baseUrl;\r\n    this.axios = axiosFactory(options);\r\n  }\r\n\r\n  get nodes(): Nodes {\r\n    if (this._nodes === undefined) {\r\n      this._nodes = new Nodes(this);\r\n    }\r\n\r\n    return this._nodes;\r\n  }\r\n\r\n  get auth(): Auth {\r\n    if (this._auth === undefined) {\r\n      this._auth = new Auth(this);\r\n    }\r\n\r\n    return this._auth;\r\n  }\r\n\r\n  get workflow(): Workflow {\r\n    if (this._workflow === undefined) {\r\n      this._workflow = new Workflow(this);\r\n    }\r\n\r\n    return this._workflow;\r\n  }\r\n\r\n  get rhcore(): RHCore {\r\n    if (this._rhcore === undefined) {\r\n      this._rhcore = new RHCore(this);\r\n    }\r\n\r\n    return this._rhcore;\r\n  }\r\n\r\n  get members(): Members {\r\n    if (this._members === undefined) {\r\n      this._members = new Members(this);\r\n    }\r\n\r\n    return this._members;\r\n  }\r\n\r\n  get search(): Search {\r\n    if (this._search === undefined) {\r\n      this._search = new Search(this);\r\n    }\r\n\r\n    return this._search;\r\n  }\r\n\r\n  get webreports(): WebReports {\r\n    if (this._webreports === undefined) {\r\n      this._webreports = new WebReports(this);\r\n    }\r\n\r\n    return this._webreports;\r\n  }\r\n\r\n  get versions(): Versions {\r\n    if (this._versions === undefined) {\r\n      this._versions = new Versions(this);\r\n    }\r\n\r\n    return this._versions;\r\n  }\r\n\r\n  rpcClient(relativePath = \"/api/v1/rh/rpc/rhnode/\") {\r\n    return new RPCClient(this, relativePath);\r\n  }\r\n\r\n  _isObject(value: unknown): value is Object {\r\n    return value && typeof value === \"object\" && value.constructor === Object;\r\n  }\r\n\r\n  _isString(value: unknown): value is string {\r\n    return typeof value === \"string\" || value instanceof String;\r\n  }\r\n\r\n  _isBoolean(value: unknown): value is boolean {\r\n    return typeof value === \"boolean\";\r\n  }\r\n\r\n  _isFile(value: any): value is File {\r\n    return typeof value?.name === \"string\";\r\n  }\r\n\r\n  putForm<T>(url: string, params: Record<string, any>) {\r\n    return this.put<T>(url, this.objectToForm(params), {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n  }\r\n\r\n  postForm<T>(url: string, params: Record<string, any>) {\r\n    return this.post<T>(url, this.objectToForm(params), {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      maxBodyLength: Infinity,\r\n    });\r\n  }\r\n\r\n  patchForm<T>(url: string, params: Record<string, any>) {\r\n    return this.patch<T>(url, this.objectToForm(params), {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n  }\r\n\r\n  deleteForm(url: string, params: Record<string, any>) {\r\n    // FormData does not working on Delete!!\r\n    // See here: https://stackoverflow.com/questions/51069552/axios-delete-request-with-body-and-headers\r\n    // const formData = this.objectToForm(params)\r\n\r\n    return this.delete(url);\r\n  }\r\n\r\n  objectToForm(obj: Record<string, any>) {\r\n    return Object.entries(obj).reduce(\r\n      (a: Record<string, any>, [key, value]) => {\r\n        return {\r\n          ...a,\r\n          [key]:\r\n            Array.isArray(value) || this._isObject(value)\r\n              ? JSON.stringify(value)\r\n              : value,\r\n        };\r\n      },\r\n      {}\r\n    );\r\n  }\r\n\r\n  putBody(url: string, body) {\r\n    return this.putForm(url, {\r\n      body,\r\n    });\r\n  }\r\n\r\n  postBody<T>(url: string, body: Record<string, any>) {\r\n    return this.postForm<T>(url, {\r\n      body,\r\n    });\r\n  }\r\n\r\n  patchBody(url: string, body: Record<string, any>) {\r\n    return this.patchForm(url, {\r\n      body,\r\n    });\r\n  }\r\n\r\n  deleteBody(url: string, body: Record<string, any>) {\r\n    return this.deleteForm(url, {\r\n      body,\r\n    });\r\n  }\r\n\r\n  get<T>(url: string, config?: AxiosRequestConfig) {\r\n    return this.axios.get<T>(url, config);\r\n  }\r\n\r\n  post<T>(url: string, data?: any, config?: AxiosRequestConfig) {\r\n    return this.axios.post<T>(url, data, config);\r\n  }\r\n\r\n  put<T>(url: string, data?: any, config?: AxiosRequestConfig) {\r\n    return this.axios.put<T>(url, data, config);\r\n  }\r\n\r\n  patch<T>(url: string, data?: any, config?: AxiosRequestConfig) {\r\n    return this.axios.patch<T>(url, data, config);\r\n  }\r\n\r\n  options<T>(url: string, config?: AxiosRequestConfig) {\r\n    return this.axios.options<T>(url, config);\r\n  }\r\n\r\n  delete<T>(url: string, config?: AxiosRequestConfig) {\r\n    return this.axios.delete<T>(url, config);\r\n  }\r\n\r\n  async $get<T = any>(url: string, config?: AxiosRequestConfig): Promise<T> {\r\n    const response = await this.get<T>(url, config);\r\n    return response.data;\r\n  }\r\n}\r\n","import axios, { AxiosInstance } from \"axios\";\nimport { components } from \"../types/cs-rest-types/schema\";\n\nexport type CSRestOptions = {\n  username?: string;\n  password?: string;\n  otcsticket?: string;\n  baseUrl: string;\n};\n\nconst getInstance = (options: CSRestOptions) => {\n  const instance = axios.create({\n    baseURL: options.baseUrl,\n    paramsSerializer: {\n      // ensures ?field=A&field=B instead of ?field[]=A&field[]=B\n      indexes: null,\n    },\n  });\n\n  instance.interceptors.response.use(\n    (response) => {\n      const otcsticket = response?.headers.otcsticket;\n\n      if (otcsticket) {\n        instance.defaults.headers.common.OTCSTicket = otcsticket;\n      }\n      return response;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  return instance;\n};\n\nconst axiosFactory = (options: CSRestOptions): AxiosInstance => {\n  const instance = getInstance(options);\n\n  const username = options.username;\n  const password = options.password;\n  const otcsticket = options.otcsticket;\n\n  if (otcsticket) {\n    instance.defaults.headers.common.OTCSTicket = otcsticket;\n  } else if (username && password) {\n    instance.interceptors.request.use(async (config) => {\n      if (config.headers.common?.OTCSTicket) {\n        return config;\n      } else {\n        const response = await axios.post<\n          components[\"schemas\"][\"auth_AuthenticationInfo\"]\n        >(\n          `${options.baseUrl}/api/v1/auth/`,\n          {\n            username,\n            password,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n\n        config.headers.OTCSTicket = response.data.ticket;\n\n        return config;\n      }\n    });\n  } else {\n    throw Error(\"You must provide an otcsticket or username and password.\");\n  }\n\n  return instance;\n};\n\nexport default axiosFactory;\n","import RPCClient from \"./rpc-client\";\r\nimport { RPCError } from \"./rpc-client/error-codes\";\r\nimport Session from \"./Session\";\r\n\r\n// https://medium.com/ovrsea/checking-the-type-of-an-object-in-typescript-the-type-guards-24d98d9119b0\r\nconst isRPCError = (e: RPCError | any): e is RPCError => {\r\n  return (\r\n    (e as RPCError).code !== undefined && (e as RPCError).data !== undefined\r\n  );\r\n};\r\n\r\nexport { isRPCError, RPCError, Session, RPCClient };\r\n"],"names":["RPCError","Error","constructor","message","data","code","x","messageObj","super","this","sequence","index","next","RPCClient","session","relativePath","_batchQueue","resetQueue","requestObject","method","params","id","jsonrpc","handleResponse","Object","prototype","hasOwnProperty","call","result","err","error","request","response","postBody","rpc","queue","push","batch","throwOnError","_response$data$data","map","item","e","rhnode","dataid","args","rhnodeQueue","ServiceAbstract","_session","Auth","auth","get","SubTypesEnum","isNode","window","Nodes","addablenodetypes","addDocument","parent_id","fileHandler","name","description","options","url","_isString","f","import","createReadStream","_extends","type","Document","file","postForm","_isFile","addDocumentMajor","advanced_versioning","versions","promote","versionNumber","deleteVersion","addItem","node","apiVersion","ancestors","volumeInfo","objType","volumes","addFolder","Folder","addGeneration","original_id","version_number","Generation","nodes","children","delete","download","filePath","responseType","then","async","writer","createWriteStream","pipe","Promise","resolve","reject","on","audit","WorkflowInitiator","mapId","workflowPropertiesInfo","start","workflow","form","forms","findWorkflowAttribute","attributeName","entries","schema","properties","find","workflowName","value","title","processId","process_id","attachmentsFolderId","attachmentPkg","data_packages","pkg","sub_type","attachment_folder_id","wantComments","comments_on","wantAuthentication","authentication","setWorkflowAttribute","_this$findWorkflowAtt","fieldName","definition","Array","isArray","formUpdate","draftprocessesPut","action","values","initiate","comment","password","initiateValues","authentication_info","Workflow","workflowInitiator","draftprocesses","draftProcess","results","draftprocess_id","draftprocessId","draftprocessesUpdate","workflowId","workflow_id","body","putForm","RHCore","scriptNode","Search","search","where","regions","Members","USER","GROUP","userQuery","query","version","limit","where_type","JSON","stringify","member","Versions","addVersion","console","assert","list","purge","number_to_keep","isNaN","deleteForm","WebReports","run","Session","axios","_nodes","_auth","_workflow","_rhcore","_members","_search","_webreports","_versions","baseUrl","instance","create","baseURL","paramsSerializer","indexes","interceptors","use","otcsticket","headers","defaults","common","OTCSTicket","getInstance","username","_config$headers$commo","config","post","ticket","axiosFactory","undefined","rhcore","members","webreports","rpcClient","_isObject","String","_isBoolean","put","objectToForm","maxBodyLength","Infinity","patchForm","patch","obj","reduce","a","key","putBody","patchBody","deleteBody","$get","isRPCError"],"mappings":"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"}