{"version":3,"file":"cs-rest.modern.js","sources":["../src/rpc-client/error-codes.ts","../src/rpc-client/index.ts","../src/utils/data-types-enum.ts","../src/utils/subtypes-enum.ts","../src/handlers/service-abstract.ts","../src/handlers/auth.ts","../src/utils/is-node.ts","../src/handlers/nodes.ts","../src/utils/workflow-initiator.ts","../src/handlers/workflow.ts","../src/handlers/rhcore.ts","../src/handlers/search.ts","../src/handlers/members.ts","../src/handlers/versions.ts","../src/handlers/webreports.ts","../src/Session.ts","../src/utils/axios-factory.ts","../src/index.ts"],"sourcesContent":["import isObject from \"is-object\";\n\nconst ErrorCodes = {\n  PARSEERROR: {\n    code: -32700,\n    message: \"Parse error\",\n  },\n  INVALIDREQUEST: {\n    code: -32600,\n    message: \"Invalid Request\",\n  },\n  METHODNOTFOUND: {\n    code: -32601,\n    message: \"Method not found\",\n  },\n  INVALIDPARAMS: {\n    code: -32602,\n    message: \"Invalid params\",\n  },\n  INTERNALERROR: {\n    code: -32603,\n    message: \"Internal error\",\n  },\n} as const;\n\ntype ErrorMessage = {\n  message: string;\n  code: number;\n  data: Array<any> | Record<string, any>;\n};\n\nclass RPCError extends Error {\n  code: number;\n  data: Array<any> | Record<string, any>;\n\n  constructor(\n    message: string | ErrorMessage = ErrorCodes.INTERNALERROR.message,\n    data = null,\n    code: number = ErrorCodes.INTERNALERROR.code\n  ) {\n    if (isObject(message)) {\n      const messageObj = message as RPCError;\n\n      super(messageObj.message);\n\n      this.code = messageObj.code;\n      this.data = messageObj.data;\n    } else {\n      super(message as string);\n\n      this.code = code;\n      this.data = data;\n    }\n  }\n}\n\nexport { RPCError, ErrorCodes };\n","import { RPCError } from \"./error-codes\";\n\nimport Session from \"../Session\";\n\nconst sequence = {\n  index: 0,\n  get next(): number {\n    this.index = this.index + 1;\n    return this.index;\n  },\n};\n\ntype requestObjectType = {\n  jsonrpc: string;\n  method: string;\n  id: number;\n  params: Record<string, any> | Array<any>;\n};\n\nexport default class RPCClient {\n  session: Session;\n  relativePath: string;\n\n  /* protected */\n  _batchQueue: Array<requestObjectType>;\n\n  constructor(session: Session, relativePath: string) {\n    this.session = session;\n    this.relativePath = relativePath;\n    this.resetQueue();\n  }\n\n  /* protected */\n  requestObject(\n    method: string,\n    params: Record<string, any> | Array<any>,\n    id: number\n  ): requestObjectType {\n    return {\n      jsonrpc: \"2.0\",\n      method,\n      id,\n      params,\n    };\n  }\n\n  /* protected */\n  handleResponse(data) {\n    if (Object.prototype.hasOwnProperty.call(data, \"result\")) {\n      return data.result;\n    } else if (Object.prototype.hasOwnProperty.call(data, \"error\")) {\n      const err = data.error;\n      throw new RPCError(err.message, err.data, err.code);\n    } else {\n      throw Error(\"The server did not respond correctly.\");\n    }\n  }\n\n  // https://www.jsonrpc.org/specification#request_object\n  // params is allowed to be null!\n  // also on queue function below\n  async request(method: string, params: any, id: number = sequence.next) {\n    const response = await this.session.postBody(this.relativePath, {\n      rpc: this.requestObject(method, params, id),\n    });\n\n    return this.handleResponse(response.data);\n  }\n\n  /* private */\n  resetQueue(): void {\n    this._batchQueue = [];\n  }\n\n  queue(method: string, params: any, id: number = sequence.next): RPCClient {\n    this._batchQueue.push(this.requestObject(method, params, id));\n    return this;\n  }\n\n  async batch(throwOnError: boolean = false): Promise<any> {\n    const queue = this._batchQueue;\n    this.resetQueue();\n    const response = await this.session.postBody<any>(this.relativePath, {\n      rpc: queue,\n    });\n\n    return (response.data.data ?? []).map((item) => {\n      if (throwOnError) {\n        return this.handleResponse(item);\n      } else {\n        try {\n          return this.handleResponse(item);\n        } catch (e) {\n          return e;\n        }\n      }\n    });\n  }\n\n  rhnode(dataid, method, args = [], id = sequence.next) {\n    const params = {\n      dataid,\n      args,\n    };\n\n    return this.request(method, params, id);\n  }\n\n  rhnodeQueue(dataid, method, args = [], id = sequence.next) {\n    const params = {\n      dataid,\n      args,\n    };\n\n    return this.queue(method, params, id);\n  }\n}\n","export enum DataTypesEnum {\n  AssocType = -18,\n  BooleanType = 5,\n  ClassType = 9,\n  DapiNodeType = -72,\n  DapiSessionType = -74,\n  DapiStreamType = -68,\n  DapiVersionType = -69,\n  DateType = -7,\n  DynamicType = -127,\n  ErrorType = 1,\n  FileType = -107,\n  FrameType = 10,\n  IntegerType = 2,\n  JavaObjectType = -42,\n  ListType = -2,\n  LongType = -8,\n  ObjectType = -128,\n  ObjRefType = 3,\n  RealType = -4,\n  RecArrayType = -110,\n  RecordType = -109,\n  ScriptType = -3,\n  SocketType = -102,\n  StringType = -1,\n  UAPIType = -196,\n  UndefinedType = 0,\n  VoidType = 8,\n  WAPIWorkType = -75,\n}\n","/**\n * How many do we actually care about?\n */\nexport enum SubTypesEnum {\n  // TwoWayTee = 294,\n  Accession = 834,\n  ActiveFolder = 1298,\n  Activeview = 30309,\n  ActivityManager = 907,\n  Alias = 1,\n  Appearance = 480,\n  AppearanceFolder = 483,\n  AppearancesVolume = 481,\n  ArchiveFolder = 31711,\n  BackupManager = 290,\n  BackupProcess = 291,\n  BestBets = 274,\n  Blog = 356,\n  BlogEntry = 357,\n  BoxFolder = 530,\n  Category = 131,\n  CategoryFolder = 132,\n  Channel = 207,\n  ChannelVol = 209,\n  Classification = 199,\n  ClassificationShortcut = 197,\n  ClassificationTree = 196,\n  ClassifiedItems = 194,\n  Collection = 298,\n  Column = 902,\n  Comments = 345,\n  CommentsReply = 348,\n  CommentsVol = 346,\n  CommExpertContainer = 3030338,\n  CommExpertGroup = 3030339,\n  CommStore = 3030329,\n  CommTemplate = 3030002,\n  CommTemplateFolder = 3030333,\n  CommTemplateVol = 3030004,\n  CommURLStore = 3030335,\n  CommWorkspace = 3030334,\n  CommXSLVolume = 3030205,\n  CompoundDoc = 136,\n  CompoundEMail = 557,\n  ContentModuleFolder = 3030372,\n  CSApplicationManifest = 32658,\n  CSApplicationsVolume = 32657,\n  CustomView = 146,\n  CustomViewTemplate = 844,\n  DataFlowManager = 270,\n  DataSourceFolder = 276,\n  DirWalker = 277,\n  Discussion = 215,\n  DispositionGroup = 602,\n  Document = 144,\n  DocumentLLNode = 1297,\n  DocumentServer = 283,\n  Dossier = 32912,\n  DossierCabinet = 32916,\n  DossierCabinetArchive = 31707,\n  DossierTemplate = 32914,\n  DossierTemplateFolder = 31709,\n  DossierTemplatesVolume = 32917,\n  DossierTemplateVolume = 32915,\n  DossierVolume = 32913,\n  DPSBinding = 31602,\n  DPSFolder = 31601,\n  DPSVolume = 31603,\n  DTDLLNode = 335,\n  DynamicView = 900,\n  EMail = 749,\n  EmailConversationItems = 2504,\n  EnterpriseArchiveDocument = 753,\n  Facet = 904,\n  FacetFolder = 905,\n  FacetTree = 903,\n  FailedFolder = 1299,\n  FixedSystemColumn = 906,\n  Folder = 0,\n  Form = 223,\n  Generation = 2,\n  GENERICCONTENTMODULE = 3030371,\n  GlobalAppearance = 482,\n  HoldContainer = 833,\n  HTMLConversion = 282,\n  HTMLFormView = 226,\n  Importer = 293,\n  Inbox = 731,\n  IndexEngine = 368,\n  IndexTracer = 147,\n  IndexUpdate = 281,\n  InternalOTDS = 924,\n  ItemTemplateVol = 541,\n  ItemTemplateVolFolder = 542,\n  JournalVolume = 361,\n  LibraryExtractor = 259,\n  LibraryObj = 272,\n  LLNodeEmailFolder = 751,\n  LLNodeFAQ = 123475,\n  LLNodeFAQEntry = 123476,\n  LLNodeForum = 123469,\n  LLNodeForumEntry = 123470,\n  LLNodeURQuestion = 430,\n  LLNodeURReply = 432,\n  Locators = 422,\n  Mailbox = 732,\n  MailStore = 3030331,\n  ManagedSpace = 31710,\n  MediaType = 410,\n  MediaTypesContainer = 414,\n  MemcachedFolder = 919,\n  MemcachedProcess = 920,\n  Merge = 273,\n  MicroPost = 1281,\n  MicroPostVolume = 1282,\n  MultiVolClassification = 372,\n  MultiVolClassificationProxy = 374,\n  MultiVolClassificationTree = 373,\n  MyReservedItems = 870,\n  MyWorkbenches = 532,\n  NAVMENUVOL = 3030756,\n  News = 208,\n  OTCIndexObj = 257,\n  Partition = 371,\n  PartitionMap = 370,\n  PersonalComm = 3030203,\n  PersonalCommSystemVolume = 3030003,\n  PersonalCommVol = 3030204,\n  PersonalStagingFolder = 398,\n  PersonalWebpage = 3030343,\n  PhysicalItemBox = 424,\n  PhysicalItemContainer = 412,\n  PhysicalItemCopy = 419,\n  PhysicalItem_non_Container = 411,\n  PhysObjAdmin = 415,\n  PhysObjBatchLabels = 418,\n  PhysObjCirculation = 416,\n  PhysObjReports = 417,\n  Poll = 218,\n  Process = 271,\n  Profile = 195,\n  Project = 202,\n  ProjectTemplate = 543,\n  ProjectVol = 201,\n  Prospector = 384,\n  ProspectorQueries = 380,\n  ProspectorSnapshot = 387,\n  Provenance = 829,\n  Proxy = 260,\n  PublishingFolder = 31712,\n  PublishingFolderVolume = 31713,\n  QAFolder = 441,\n  QueryFile = 296,\n  QuestionVolume = 431,\n  RecentItems = 327,\n  RecordType = 425,\n  RecordTypesContainer = 428,\n  RedForm = 32918,\n  RedFormVolume = 32919,\n  Release = 138,\n  RemoteLLDataSource = 381,\n  Reply = 134,\n  Report = 299,\n  Revision = 139,\n  RIMSDisposition = 555,\n  RIMSDispositionsContainer = 554,\n  RIMSHoldMaintenance = 552,\n  RIMSRsiContainer = 553,\n  RMAdministration = 556,\n  RMClassification = 551,\n  RMFolder = 426,\n  RMPart = 427,\n  RMReportsContainer = 558,\n  RMThesaurus = 559,\n  ScanConfigurationVolume = 2505,\n  ScheduledHoldCriteria = 835,\n  ScriptNode = 32901,\n  SearchBroker = 258,\n  SearchEngine = 369,\n  SearchManager = 269,\n  SearchReport = 278,\n  SearchResultsTemplate = 383,\n  SearchTemplate = 292,\n  Simplate = 31678,\n  SkyPodLLVolume = 49547,\n  SliceFolder = 275,\n  SocialObject = 1280,\n  SocialObjectVolume = 1283,\n  SPCJOBDESCR = 797,\n  SPCJOBDESCRFOLDER = 796,\n  SPCVOLUME = 795,\n  spdcommittee = 3030202,\n  spdcommitteevol = 3030201,\n  spdcommitteevolume = 3030001,\n  spdemail = 3030130,\n  Spider = 280,\n  StorageManagement = 421,\n  SubmitVersionNode = 231,\n  Task = 206,\n  TaskGroup = 205,\n  TaskList = 204,\n  TaskListVol = 210,\n  TaskMilestone = 212,\n  Template = 230,\n  TemplateFolder = 268,\n  TextDocument = 145,\n  Topic = 130,\n  Transfers = 423,\n  TransportBox = 531,\n  TransportItem = 526,\n  TransportItemPart = 527,\n  UrgentRequests = 3030330,\n  URL = 140,\n  VirtualFolder = 899,\n  VolBlog = 123461,\n  VolCategories = 133,\n  VolClassification = 198,\n  VolComments = 347,\n  VolDAP = 987352,\n  VolDeletedItems = 405,\n  VolDirectory = 375,\n  VolDiscussion = 143,\n  VolDomainWorkspace = 180,\n  VolDTD = 336,\n  VolEditWorkflow = 162,\n  VolFacets = 901,\n  VolLibrary = 141,\n  VolOrphan = 403,\n  VolPersonalStaging = 397,\n  VolPerspectives = 908,\n  VolPhysObj = 413,\n  VolRecMan = 550,\n  VolRelease = 137,\n  VolReports = 211,\n  VolSystem = 148,\n  VolTracer = 149,\n  VolumeFolder = 484,\n  VolumeLLVolume = 1296,\n  VolWarehouse = 525,\n  VolWorkbin = 142,\n  VolWorkflow = 161,\n  WarehouseFolder = 529,\n  WebFormConnectionVolume = 236,\n  WebFormDatabaseConnection = 235,\n  WebFormLookup = 234,\n  WebFormLookupVolume = 233,\n  WebReports = 30303,\n  WFMapLLNode = 128,\n  WFStatusNode = 190,\n  WIKI = 5573,\n  WIKIPAGE = 5574,\n  Workbench = 528,\n  WorkflowAttachments = 154,\n  XMLActivatorCon = 286,\n  XMLActivatorProd = 285,\n}\n","import type Session from \"../Session\";\n\nclass ServiceAbstract {\n  protected _session: Session;\n\n  constructor(session: Session) {\n    this._session = session;\n  }\n\n  get session() {\n    return this._session;\n  }\n}\n\nexport default ServiceAbstract;\n","import ServiceAbstract from \"./service-abstract\";\n\nclass Auth extends ServiceAbstract {\n  auth() {\n    return this.session.get(\"/api/v1/auth/\");\n  }\n}\n\nexport default Auth;\n","/**\n * A simple check whether we're in a browser or node context.\n *\n * @returns\n */\nexport const isNode = () => typeof window === \"undefined\";\n","import { SubTypesEnum } from \"../utils/subtypes-enum\";\r\nimport ServiceAbstract from \"./service-abstract\";\r\nimport { isNode } from \"../utils/is-node\";\r\nimport { components } from \"../types/cs-rest-types/schema\";\r\n\r\n// type TNewVersionType = components[\"schemas\"][\"versions_NewVersionInfo\"];\r\n\r\nclass Nodes extends ServiceAbstract {\r\n  addablenodetypes(dataid: number) {\r\n    return this.session.get<components[\"schemas\"][\"nodes_AddableTypesInfo\"]>(\r\n      `api/v1/nodes/${dataid}/addablenodetypes`\r\n    );\r\n  }\r\n\r\n  async addDocument({\r\n    parent_id,\r\n    fileHandler,\r\n    // apiVersion = \"v1\",\r\n    name = undefined,\r\n    description = undefined,\r\n    options = {},\r\n  }: {\r\n    parent_id: number;\r\n    fileHandler: File | string;\r\n    // apiVersion?: \"v1\" | \"v2\";\r\n    name?: string;\r\n    description?: string;\r\n    options?: Record<string, any>;\r\n  }) {\r\n    const url = `api/v1/nodes`;\r\n\r\n    if (isNode() && this.session._isString(fileHandler)) {\r\n      // node.js\r\n      const fs = await import(\"fs\");\r\n      const f = fs.createReadStream(fileHandler);\r\n\r\n      const params = {\r\n        ...options,\r\n        type: SubTypesEnum.Document,\r\n        name,\r\n        parent_id,\r\n        file: f,\r\n      };\r\n\r\n      return this.session.postForm<\r\n        components[\"schemas\"][\"nodes_CreateResponse\"]\r\n      >(url, params);\r\n    } else if (this.session._isFile(fileHandler)) {\r\n      // browser\r\n\r\n      const params = {\r\n        ...options,\r\n        type: SubTypesEnum.Document,\r\n        name,\r\n        description,\r\n        parent_id,\r\n        file: fileHandler,\r\n      };\r\n\r\n      return this.session.postForm<\r\n        components[\"schemas\"][\"nodes_CreateResponse\"]\r\n      >(url, params);\r\n    } else {\r\n      throw new Error(\"Invalid file.\");\r\n    }\r\n  }\r\n\r\n  async addDocumentMajor({\r\n    parent_id,\r\n    fileHandler,\r\n    name = undefined,\r\n    description = undefined,\r\n    options = {},\r\n  }: {\r\n    parent_id: number;\r\n    fileHandler: File | string;\r\n    name?: string;\r\n    description?: string;\r\n    options: Record<string, any>;\r\n  }) {\r\n    const response = await this.addDocument({\r\n      parent_id,\r\n      fileHandler,\r\n      name,\r\n      options: {\r\n        ...options,\r\n        advanced_versioning: true,\r\n      },\r\n    });\r\n\r\n    const dataid = response.data.id;\r\n\r\n    await this.session.versions.promote({\r\n      dataid,\r\n      versionNumber: 1,\r\n      description,\r\n    });\r\n\r\n    await this.session.versions.deleteVersion({\r\n      dataid,\r\n      versionNumber: 1,\r\n    });\r\n\r\n    return response;\r\n  }\r\n\r\n  addItem(type, parent_id, name, params = {}) {\r\n    return this.session.postBody(\"api/v2/nodes\", {\r\n      type,\r\n      parent_id,\r\n      name,\r\n      ...params,\r\n    });\r\n  }\r\n\r\n  node({ dataid, apiVersion = \"v2\", params = {} }) {\r\n    return this.session.get(`api/${apiVersion}/nodes/${dataid}`, {\r\n      params,\r\n    });\r\n  }\r\n\r\n  ancestors(dataid, params = {}) {\r\n    return this.session.get(`api/v1/nodes/${dataid}/ancestors`, {\r\n      params,\r\n    });\r\n  }\r\n\r\n  volumeInfo(objType) {\r\n    return this.session.get(`api/v1/volumes/${objType}`);\r\n  }\r\n\r\n  volumes() {\r\n    return this.session.get(\"api/v2/volumes\");\r\n  }\r\n\r\n  addFolder(parent_id, name, params = {}) {\r\n    return this.addItem(SubTypesEnum.Folder, parent_id, name, params);\r\n  }\r\n\r\n  addGeneration(parent_id, name, original_id, version_number, params = {}) {\r\n    return this.addItem(SubTypesEnum.Generation, parent_id, name, {\r\n      original_id,\r\n      version_number,\r\n      ...params,\r\n    });\r\n  }\r\n\r\n  nodes(dataid, params = {}) {\r\n    // https://developer.opentext.com/webaccess/#url=%2Fawd%2Fresources%2Fapis%2Fcs-rest-api-for-cs-16-s%23!%2Fnodes%2FgetSubnodes_get_15&tab=501\r\n    return this.session.get(`api/v2/nodes/${dataid}/nodes`, {\r\n      params,\r\n    });\r\n  }\r\n\r\n  children(dataid, params = {}) {\r\n    return this.nodes(dataid, params);\r\n  }\r\n\r\n  delete(dataid) {\r\n    return this.session.delete(`api/v1/nodes/${dataid}`);\r\n  }\r\n\r\n  download({ dataid, apiVersion = \"v1\", filePath }) {\r\n    // this.session.nodes.download(1267501, 'v2', '/Users/chris/Downloads/test.pdf')\r\n    if (isNode()) {\r\n      return this.session\r\n        .get(`api/${apiVersion}/nodes/${dataid}/content`, {\r\n          responseType: \"stream\",\r\n        })\r\n        .then(async (response) => {\r\n          const fs = await import(\"fs\");\r\n          const writer = fs.createWriteStream(filePath);\r\n\r\n          response.data.pipe(writer);\r\n\r\n          return new Promise((resolve, reject) => {\r\n            writer.on(\"finish\", resolve);\r\n            writer.on(\"error\", reject);\r\n          });\r\n        });\r\n    } else {\r\n      return Promise.reject(\"Not implemented yet\");\r\n    }\r\n  }\r\n\r\n  audit({ dataid, apiVersion = \"v2\", params = {} }) {\r\n    return this.session.get(`api/${apiVersion}/nodes/${dataid}/audit`, {\r\n      params,\r\n    });\r\n  }\r\n}\r\n\r\nexport default Nodes;\r\n","import Session from \"../Session\";\n\nimport { components } from \"../types/cs-rest-types/schema\";\n\ntype draftprocesses_DraftProcess =\n  components[\"schemas\"][\"draftprocesses_DraftProcess\"];\n\ntype forms_WorkflowPropertiesFormInfo =\n  components[\"schemas\"][\"forms_WorkflowPropertiesFormInfo\"];\n\ntype draftprocesses_DraftProcess_Put =\n  components[\"schemas\"][\"draftprocesses_DraftProcess_Put\"];\n\nexport type TDraftProcess = {\n  // data: {\n  //   links: {\n  //     data: {\n  //       body: string;\n  //       content_type: string;\n  //       href: string;\n  //       method: string;\n  //       name: string;\n  //     };\n  //   };\n  // };\n  // data: categories_V2DataLinks;\n  results: draftprocesses_DraftProcess;\n};\n\nexport type TWorkflowPut = {\n  action: \"Initiate\" | \"formUpdate\";\n  values?: any;\n  comment?: string;\n  authentication_info?: { password: string };\n};\n\nclass WorkflowInitiator {\n  workflowPropertiesInfo: forms_WorkflowPropertiesFormInfo | null = null;\n\n  constructor(private session: Session, private mapId: number) {}\n\n  /**\n   * This method prepares the workflow for initiation. It must be called before any other method.\n   */\n  async start() {\n    this.workflowPropertiesInfo = await this.session.workflow.start(this.mapId);\n  }\n\n  get form() {\n    return this.workflowPropertiesInfo.forms[0];\n  }\n\n  findWorkflowAttribute(attributeName: string) {\n    const properties: Record<string, any> = this.form.schema.properties;\n\n    return Object.entries(properties).find(\n      ([workflowName, value]) => value.title === attributeName\n    );\n  }\n\n  get processId(): number {\n    // @ts-ignore - This is missing in the openapi schema.\n    return this.workflowPropertiesInfo.data.process_id;\n  }\n\n  get attachmentsFolderId(): number | undefined {\n    const dataPackages = this.workflowPropertiesInfo.data.data_packages;\n    const attachmentPkg = dataPackages.find(\n      (pkg) => pkg.type === 1 && pkg.sub_type === 1\n    );\n    return attachmentPkg?.data.attachment_folder_id;\n  }\n\n  get wantComments(): boolean {\n    return this.workflowPropertiesInfo.data.comments_on;\n  }\n\n  get wantAuthentication(): boolean {\n    return this.workflowPropertiesInfo.data.authentication;\n  }\n\n  setWorkflowAttribute(\n    attributeName: string,\n    value: any\n  ): typeof WorkflowInitiator {\n    const [fieldName, definition] =\n      this.findWorkflowAttribute(attributeName) ?? [];\n\n    const attributeType = definition.type;\n    const isArray = attributeType === \"array\";\n\n    if (isArray === Array.isArray(value)) {\n      this.form.data[fieldName] = value;\n      return WorkflowInitiator;\n    } else {\n      throw new Error(\"Invalid type.\");\n    }\n  }\n\n  async formUpdate(): Promise<{ results: draftprocesses_DraftProcess_Put }> {\n    return await this.session.workflow.draftprocessesPut(this.processId, {\n      action: \"formUpdate\",\n      values: this.form.data,\n    });\n  }\n\n  async initiate({\n    comment,\n    password,\n  }: { comment?: string; password?: string } = {}): Promise<{\n    results: draftprocesses_DraftProcess_Put;\n  }> {\n    await this.formUpdate();\n\n    const initiateValues = {\n      action: \"Initiate\",\n      ...(this.wantComments && { comment }),\n      ...(this.wantAuthentication && { authentication_info: { password } }),\n    } as const;\n\n    const response: { results: draftprocesses_DraftProcess_Put } =\n      await this.session.workflow.draftprocessesPut(\n        this.processId,\n        initiateValues\n      );\n\n    return response;\n  }\n}\n\nexport { WorkflowInitiator };\n","import ServiceAbstract from \"./service-abstract\";\r\nimport { components } from \"../types/cs-rest-types/schema\";\r\n\r\ntype forms_WorkflowPropertiesFormInfo =\r\n  components[\"schemas\"][\"forms_WorkflowPropertiesFormInfo\"];\r\n\r\ntype draftprocesses_DraftProcess_Put =\r\n  components[\"schemas\"][\"draftprocesses_DraftProcess_Put\"];\r\n\r\nimport {\r\n  TDraftProcess,\r\n  TWorkflowPut,\r\n  WorkflowInitiator,\r\n} from \"../utils/workflow-initiator\";\r\n\r\nclass Workflow extends ServiceAbstract {\r\n  workflowInitiator(mapId: number): WorkflowInitiator {\r\n    return new WorkflowInitiator(this.session, mapId);\r\n  }\r\n\r\n  start(mapId: number): Promise<forms_WorkflowPropertiesFormInfo> {\r\n    return this.draftprocesses(mapId)\r\n      .then((draftProcess) => {\r\n        // this is a bug in the definition\r\n        // @ts-ignore\r\n        return draftProcess.results.draftprocess_id as number;\r\n      })\r\n      .then((draftprocessId: number) =>\r\n        this.draftprocessesUpdate(draftprocessId)\r\n      );\r\n  }\r\n\r\n  async draftprocesses(workflowId: number) {\r\n    const { data } = await this.session.postForm<\r\n      components[\"schemas\"][\"draftprocesses_DraftProcess_V2EmptyResponse\"]\r\n    >(\"api/v2/draftprocesses\", {\r\n      workflow_id: workflowId,\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  async draftprocessesUpdate(\r\n    draftprocessId: number\r\n  ): Promise<forms_WorkflowPropertiesFormInfo> {\r\n    const { data } = await this.session.get(\r\n      \"api/v1/forms/draftprocesses/update\",\r\n      {\r\n        params: {\r\n          draftprocess_id: draftprocessId,\r\n        },\r\n      }\r\n    );\r\n\r\n    return data;\r\n  }\r\n\r\n  async draftprocessesPut(\r\n    draftprocessId: number,\r\n    body: TWorkflowPut\r\n  ): Promise<{ results: draftprocesses_DraftProcess_Put }> {\r\n    const { data } = await this.session.putForm(\r\n      `api/v2/draftprocesses/${draftprocessId}`,\r\n      {\r\n        body,\r\n      }\r\n    );\r\n\r\n    return data;\r\n  }\r\n\r\n  // draftprocesses_formUpdate(draftprocess_id, values) {\r\n  // const body = {\r\n  // action: \"formUpdate\",\r\n  // values\r\n  // }\r\n\r\n  // return this.draftprocessesPut(draftprocess_id, body)\r\n  // }\r\n}\r\n\r\nexport default Workflow;\r\n","import ServiceAbstract from \"./service-abstract\";\r\n\r\nclass RHCore extends ServiceAbstract {\r\n  scriptNode(id, body = {}) {\r\n    return this.session.postForm(`api/v1/rhcore/${id}`, body);\r\n  }\r\n}\r\n\r\nexport default RHCore;\r\n","import ServiceAbstract from \"./service-abstract\";\n\nclass Search extends ServiceAbstract {\n  search(where, params = {}) {\n    return this.session.postBody(\"api/v2/search\", {\n      where,\n      ...params,\n    });\n  }\n\n  regions(params = {}) {\n    return this.session.get(\"api/v1/regions\", params);\n  }\n}\n\nexport default Search;\n","import Session from \"../Session\";\nimport ServiceAbstract from \"./service-abstract\";\n\nclass Members extends ServiceAbstract {\n  // public readonly USER: 0\n  // public readonly GROUP: 1\n\n  public readonly USER: number;\n  public readonly GROUP: number;\n\n  constructor(session: Session) {\n    super(session);\n\n    this.USER = 0;\n    this.GROUP = 1;\n  }\n  userQuery(query, options = {}, version = \"v2\") {\n    const params = {\n      limit: 20,\n      where_type: JSON.stringify([this.USER, this.GROUP]),\n      query,\n      ...options,\n    };\n\n    return this.session.get(`api/${version}/members`, { params });\n  }\n\n  member(id, version = \"v2\") {\n    return this.session.get(`api/${version}/members/${id}`);\n  }\n}\n\nexport default Members;\n","import { isNode } from \"../utils/is-node\";\r\nimport ServiceAbstract from \"./service-abstract\";\r\nimport { components } from \"../types/cs-rest-types/schema\";\r\n\r\ntype TNewVersionType = components[\"schemas\"][\"versions_NewVersionInfo\"];\r\n\r\nclass Versions extends ServiceAbstract {\r\n  async addVersion({\r\n    dataid,\r\n    fileHandler,\r\n    apiVersion = \"v1\",\r\n    // fileName = undefined,\r\n    options = {},\r\n  }: {\r\n    dataid: number;\r\n    fileHandler: File | string;\r\n    apiVersion?: \"v1\" | \"v2\";\r\n    // fileName?: string;\r\n    options?: Record<string, any>;\r\n  }) {\r\n    console.assert(dataid != null, \"dataid cannot be null\");\r\n    console.assert(fileHandler != null, \"fileHandler cannot be null\");\r\n\r\n    const url = `api/${apiVersion}/nodes/${dataid}/versions`;\r\n\r\n    if (isNode() && this.session._isString(fileHandler)) {\r\n      // node.js\r\n      const [fs] = await Promise.all([import(\"fs\"), import(\"path\")]);\r\n      const f = fs.createReadStream(fileHandler);\r\n\r\n      const params = {\r\n        file: f,\r\n        ...options,\r\n      };\r\n\r\n      // console.log(params)\r\n\r\n      return this.session.postForm<TNewVersionType>(url, params);\r\n    } else if (this.session._isFile(fileHandler)) {\r\n      // browser\r\n      // const name = fileName || fileHandler.name;\r\n\r\n      const params = {\r\n        file: fileHandler,\r\n        ...options,\r\n      };\r\n\r\n      return this.session.postForm<TNewVersionType>(url, params);\r\n\r\n      // formData.append('file', fileHandler, name)\r\n      // return this.session.post(url, formData)\r\n    } else {\r\n      throw new Error(\"Invalid file.\");\r\n    }\r\n  }\r\n\r\n  async download({ dataid, version, filePath }) {\r\n    console.assert(dataid != null, \"dataid cannot be null\");\r\n    console.assert(version != null, \"version cannot be null\");\r\n    console.assert(filePath != null, \"filePath cannot be null\");\r\n\r\n    if (isNode()) {\r\n      return this.session\r\n        .get(`api/v1/nodes/${dataid}/versions/${version}/content`, {\r\n          responseType: \"stream\",\r\n        })\r\n        .then(async (response) => {\r\n          const fs = await import(\"fs\");\r\n          const writer = fs.createWriteStream(filePath);\r\n\r\n          response.data.pipe(writer);\r\n\r\n          return new Promise((resolve, reject) => {\r\n            writer.on(\"finish\", resolve);\r\n            writer.on(\"error\", reject);\r\n          });\r\n        });\r\n    } else {\r\n      return Promise.reject(\"Not implemented yet\");\r\n    }\r\n  }\r\n\r\n  async list(dataid: number) {\r\n    const url = `api/v1/nodes/${dataid}/versions`;\r\n    return this.session.get(url);\r\n  }\r\n  async version(dataid, version_number = \"latest\") {\r\n    // latest not supported in v2\r\n    const url = `api/v1/nodes/${dataid}/versions/${version_number}`;\r\n    return this.session.get(url);\r\n  }\r\n\r\n  async promote({ dataid, versionNumber, description = null }) {\r\n    console.assert(dataid != null, \"dataid cannot be null\");\r\n    console.assert(versionNumber != null, \"number_to_keep must be an integer\");\r\n\r\n    const url = `api/v2/nodes/${dataid}/versions/${versionNumber}/promote`;\r\n\r\n    return this.session.postBody(url, {\r\n      ...(!!description && {\r\n        description,\r\n      }),\r\n    });\r\n  }\r\n\r\n  async deleteVersion({ dataid, versionNumber, apiVersion = \"v1\" }) {\r\n    console.assert(dataid != null, \"dataid cannot be null\");\r\n    console.assert(versionNumber != null, \"number_to_keep must be an integer\");\r\n\r\n    const url = `api/${apiVersion}/nodes/${dataid}/versions/${versionNumber}`;\r\n\r\n    // careful with deleteForm or deleteBody\r\n    return this.session.delete(url);\r\n  }\r\n\r\n  async purge({ dataid, number_to_keep = 1 }) {\r\n    console.assert(dataid != null, \"dataid cannot be null\");\r\n    console.assert(!isNaN(number_to_keep), \"number_to_keep must be an integer\");\r\n\r\n    // delete parameters not supported\r\n    // https://stackoverflow.com/questions/51069552/axios-delete-request-with-body-and-headers\r\n    // number_to_keep is ignored\r\n\r\n    const url = `api/v2/nodes/${dataid}/versions`;\r\n\r\n    return this.session.deleteForm(url, {\r\n      number_to_keep,\r\n    });\r\n  }\r\n}\r\n\r\nexport default Versions;\r\n","import ServiceAbstract from \"./service-abstract\";\n\nclass WebReports extends ServiceAbstract {\n  run(dataid, params = {}) {\n    const url = `api/v1/nodes/${dataid}/output`;\n    return this.session.get(url, { params });\n  }\n}\n\nexport default WebReports;\n","import { DataTypesEnum } from \"./utils/data-types-enum\";\r\nimport axiosFactory, { CSRestOptions } from \"./utils/axios-factory\";\r\nimport Auth from \"./handlers/auth\";\r\nimport Nodes from \"./handlers/nodes\";\r\nimport Workflow from \"./handlers/workflow\";\r\nimport RHCore from \"./handlers/rhcore\";\r\nimport Search from \"./handlers/search\";\r\nimport Members from \"./handlers/members\";\r\nimport Versions from \"./handlers/versions\";\r\nimport WebReports from \"./handlers/webreports\";\r\nimport RPCClient from \"./rpc-client/index\";\r\nimport { AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\r\n\r\nexport default class Session {\r\n  protected readonly axios: AxiosInstance;\r\n  protected _nodes: Nodes;\r\n  protected _auth: Auth;\r\n  protected _workflow: any;\r\n  protected _rhcore: RHCore;\r\n  protected _members: Members;\r\n  protected _search: Search;\r\n  protected _webreports: WebReports;\r\n  protected _versions: Versions;\r\n\r\n  public readonly baseUrl: string;\r\n\r\n  constructor(options: CSRestOptions) {\r\n    this.baseUrl = options.baseUrl;\r\n    this.axios = axiosFactory(options);\r\n  }\r\n\r\n  get nodes(): Nodes {\r\n    if (this._nodes == null) {\r\n      this._nodes = new Nodes(this);\r\n    }\r\n\r\n    return this._nodes;\r\n  }\r\n\r\n  get auth(): Auth {\r\n    if (this._auth == null) {\r\n      this._auth = new Auth(this);\r\n    }\r\n\r\n    return this._auth;\r\n  }\r\n\r\n  get workflow(): Workflow {\r\n    if (this._workflow == null) {\r\n      this._workflow = new Workflow(this);\r\n    }\r\n\r\n    return this._workflow;\r\n  }\r\n\r\n  get rhcore(): RHCore {\r\n    if (this._rhcore == null) {\r\n      this._rhcore = new RHCore(this);\r\n    }\r\n\r\n    return this._rhcore;\r\n  }\r\n\r\n  get members(): Members {\r\n    if (this._members == null) {\r\n      this._members = new Members(this);\r\n    }\r\n\r\n    return this._members;\r\n  }\r\n\r\n  get search(): Search {\r\n    if (this._search == null) {\r\n      this._search = new Search(this);\r\n    }\r\n\r\n    return this._search;\r\n  }\r\n\r\n  get webreports(): WebReports {\r\n    if (this._webreports == null) {\r\n      this._webreports = new WebReports(this);\r\n    }\r\n\r\n    return this._webreports;\r\n  }\r\n\r\n  get versions(): Versions {\r\n    if (this._versions == null) {\r\n      this._versions = new Versions(this);\r\n    }\r\n\r\n    return this._versions;\r\n  }\r\n\r\n  get dataTypesEnum() {\r\n    return DataTypesEnum;\r\n  }\r\n\r\n  rpcClient(relativePath = \"/api/v1/rh/rpc/rhnode/\") {\r\n    return new RPCClient(this, relativePath);\r\n  }\r\n\r\n  _isObject(value: unknown): value is Object {\r\n    return value && typeof value === \"object\" && value.constructor === Object;\r\n  }\r\n\r\n  _isString(value: unknown): value is string {\r\n    return typeof value === \"string\" || value instanceof String;\r\n  }\r\n\r\n  _isBoolean(value: unknown): value is boolean {\r\n    return typeof value === \"boolean\";\r\n  }\r\n\r\n  _isFile(value: any): value is File {\r\n    return typeof value?.name === \"string\";\r\n  }\r\n\r\n  putForm(url, params) {\r\n    return this.put(url, params, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n  }\r\n\r\n  postForm<T>(url, params) {\r\n    return this.post<T>(url, params, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      maxBodyLength: Infinity,\r\n    });\r\n  }\r\n\r\n  patchForm(url, params) {\r\n    return this.patch(url, params, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n  }\r\n\r\n  deleteForm(url, params) {\r\n    // FormData does not working on Delete!!\r\n    // See here: https://stackoverflow.com/questions/51069552/axios-delete-request-with-body-and-headers\r\n    // const formData = this.objectToForm(params)\r\n\r\n    return this.delete(url);\r\n  }\r\n\r\n  putBody(url, body) {\r\n    return this.putForm(url, {\r\n      body,\r\n    });\r\n  }\r\n\r\n  postBody<T>(url, body) {\r\n    return this.postForm<T>(url, {\r\n      body,\r\n    });\r\n  }\r\n\r\n  patchBody(url, body) {\r\n    return this.patchForm(url, {\r\n      body,\r\n    });\r\n  }\r\n\r\n  deleteBody(url, body) {\r\n    return this.deleteForm(url, {\r\n      body,\r\n    });\r\n  }\r\n\r\n  get<T = any, R = AxiosResponse<T>>(\r\n    url: string,\r\n    config?: AxiosRequestConfig\r\n  ): Promise<R> {\r\n    return this.axios.get(url, config);\r\n  }\r\n\r\n  post<T = any, R = AxiosResponse<T>>(\r\n    url: string,\r\n    data?: T,\r\n    config?: AxiosRequestConfig\r\n  ): Promise<R> {\r\n    return this.axios.post(url, data, config);\r\n  }\r\n\r\n  put<T = any, R = AxiosResponse<T>>(\r\n    url: string,\r\n    data?: T,\r\n    config?: AxiosRequestConfig\r\n  ): Promise<R> {\r\n    return this.axios.put(url, data, config);\r\n  }\r\n\r\n  patch<T = any, R = AxiosResponse<T>>(\r\n    url: string,\r\n    data?: T,\r\n    config?: AxiosRequestConfig\r\n  ): Promise<R> {\r\n    return this.axios.patch(url, data, config);\r\n  }\r\n\r\n  options<T = any, R = AxiosResponse<T>>(\r\n    url: string,\r\n    config?: AxiosRequestConfig\r\n  ): Promise<R> {\r\n    return this.axios.options(url, config);\r\n  }\r\n\r\n  delete<T = any, R = AxiosResponse<T>>(\r\n    url: string,\r\n    config?: AxiosRequestConfig\r\n  ): Promise<R> {\r\n    return this.axios.delete(url, config);\r\n  }\r\n\r\n  async $get<T = any>(url: string, config?: AxiosRequestConfig): Promise<T> {\r\n    const response = await this.get<T>(url, config);\r\n    return response.data;\r\n  }\r\n}\r\n","import axios, { AxiosInstance } from \"axios\";\nimport { components } from \"../types/cs-rest-types/schema\";\n\nexport type CSRestOptions = {\n  username?: string;\n  password?: string;\n  otcsticket?: string;\n  baseUrl: string;\n};\n\nconst getInstance = (options: CSRestOptions) => {\n  const instance = axios.create({\n    baseURL: options.baseUrl,\n    paramsSerializer: {\n      // ensures ?field=A&field=B instead of ?field[]=A&field[]=B\n      indexes: null,\n    },\n  });\n\n  instance.interceptors.response.use(\n    (response) => {\n      const otcsticket = response?.headers.otcsticket;\n\n      if (otcsticket) {\n        instance.defaults.headers.common.OTCSTicket = otcsticket;\n      }\n      return response;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  return instance;\n};\n\nconst axiosFactory = (options: CSRestOptions): AxiosInstance => {\n  const instance = getInstance(options);\n\n  const username = options.username;\n  const password = options.password;\n  const otcsticket = options.otcsticket;\n\n  if (otcsticket) {\n    instance.defaults.headers.common.OTCSTicket = otcsticket;\n  } else if (username && password) {\n    instance.interceptors.request.use(async (config) => {\n      if (config.headers.common?.OTCSTicket) {\n        return config;\n      } else {\n        const response = await axios.post<\n          components[\"schemas\"][\"auth_AuthenticationInfo\"]\n        >(\n          `${options.baseUrl}/api/v1/auth/`,\n          {\n            username,\n            password,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n\n        config.headers.OTCSTicket = response.data.ticket;\n\n        return config;\n      }\n    });\n  } else {\n    throw Error(\"You must provide an otcsticket or username and password.\");\n  }\n\n  return instance;\n};\n\nexport default axiosFactory;\n","import RPCClient from \"./rpc-client\";\r\nimport { RPCError } from \"./rpc-client/error-codes\";\r\nimport Session from \"./Session\";\r\n\r\n// https://medium.com/ovrsea/checking-the-type-of-an-object-in-typescript-the-type-guards-24d98d9119b0\r\nconst isRPCError = (e: RPCError | any): e is RPCError => {\r\n  return (\r\n    (e as RPCError).code !== undefined && (e as RPCError).data !== undefined\r\n  );\r\n};\r\n\r\nexport { isRPCError, RPCError, Session, RPCClient };\r\n"],"names":["RPCError","Error","constructor","message","data","code","isObject","messageObj","super","this","sequence","index","next","RPCClient","session","relativePath","_batchQueue","resetQueue","requestObject","method","params","id","jsonrpc","handleResponse","Object","prototype","hasOwnProperty","call","result","err","error","request","response","postBody","rpc","queue","push","batch","throwOnError","_response$data$data","map","item","e","rhnode","dataid","args","rhnodeQueue","DataTypesEnum","SubTypesEnum","ServiceAbstract","_session","Auth","auth","get","isNode","window","Nodes","addablenodetypes","addDocument","parent_id","fileHandler","name","description","options","url","_isString","f","import","createReadStream","_extends","type","Document","file","postForm","_isFile","addDocumentMajor","advanced_versioning","versions","promote","versionNumber","deleteVersion","addItem","node","apiVersion","ancestors","volumeInfo","objType","volumes","addFolder","Folder","addGeneration","original_id","version_number","Generation","nodes","children","delete","download","filePath","responseType","then","async","writer","createWriteStream","pipe","Promise","resolve","reject","on","audit","WorkflowInitiator","mapId","workflowPropertiesInfo","start","workflow","form","forms","findWorkflowAttribute","attributeName","entries","schema","properties","find","workflowName","value","title","processId","process_id","attachmentsFolderId","attachmentPkg","data_packages","pkg","sub_type","attachment_folder_id","wantComments","comments_on","wantAuthentication","authentication","setWorkflowAttribute","_this$findWorkflowAtt","fieldName","definition","Array","isArray","formUpdate","draftprocessesPut","action","values","initiate","comment","password","initiateValues","authentication_info","Workflow","workflowInitiator","draftprocesses","draftProcess","results","draftprocess_id","draftprocessId","draftprocessesUpdate","workflowId","workflow_id","body","putForm","RHCore","scriptNode","Search","search","where","regions","Members","USER","GROUP","userQuery","query","version","limit","where_type","JSON","stringify","member","Versions","addVersion","console","assert","fs","all","list","purge","number_to_keep","isNaN","deleteForm","WebReports","run","Session","axios","_nodes","_auth","_workflow","_rhcore","_members","_search","_webreports","_versions","baseUrl","instance","create","baseURL","paramsSerializer","indexes","interceptors","use","otcsticket","headers","defaults","common","OTCSTicket","getInstance","username","_config$headers$commo","config","post","ticket","axiosFactory","rhcore","members","webreports","dataTypesEnum","rpcClient","_isObject","String","_isBoolean","put","maxBodyLength","Infinity","patchForm","patch","putBody","patchBody","deleteBody","$get","isRPCError","undefined"],"mappings":"8CA+BA,MAAMA,UAAiBC,MAIrBC,WAAAA,CACEC,EAfS,iBAgBTC,EAAO,KACPC,GAlBM,OAoBN,GAAIC,EAASH,GAAU,CACrB,MAAMI,EAAaJ,EAEnBK,MAAMD,EAAWJ,SAASM,KAX9BJ,UACAD,EAAAA,KAAAA,YAYIK,KAAKJ,KAAOE,EAAWF,KACvBI,KAAKL,KAAOG,EAAWH,IACzB,MACEI,MAAML,GAAmBM,KAhB7BJ,UAAI,EAAAI,KACJL,UAiBI,EAAAK,KAAKJ,KAAOA,EACZI,KAAKL,KAAOA,CAEhB,ECjDF,MAAMM,EAAW,CACfC,MAAO,EACP,QAAIC,GAEF,OADAH,KAAKE,MAAQF,KAAKE,MAAQ,EACnBF,KAAKE,KACd,GAUY,MAAOE,EAOnBX,WAAAA,CAAYY,EAAkBC,QAN9BD,aAAO,EAAAL,KACPM,kBAAY,EAAAN,KAGZO,iBAAW,EAGTP,KAAKK,QAAUA,EACfL,KAAKM,aAAeA,EACpBN,KAAKQ,YACP,CAGAC,aAAAA,CACEC,EACAC,EACAC,GAEA,MAAO,CACLC,QAAS,MACTH,SACAE,KACAD,SAEJ,CAGAG,cAAAA,CAAenB,GACb,GAAIoB,OAAOC,UAAUC,eAAeC,KAAKvB,EAAM,UAC7C,OAAOA,EAAKwB,OACHJ,GAAAA,OAAOC,UAAUC,eAAeC,KAAKvB,EAAM,SAAU,CAC9D,MAAMyB,EAAMzB,EAAK0B,MACjB,MAAM,IAAI9B,EAAS6B,EAAI1B,QAAS0B,EAAIzB,KAAMyB,EAAIxB,KAChD,CACE,MAAMJ,MAAM,wCAEhB,CAKA,aAAM8B,CAAQZ,EAAgBC,EAAaC,EAAaX,EAASE,MAC/D,MAAMoB,QAAqBvB,KAACK,QAAQmB,SAASxB,KAAKM,aAAc,CAC9DmB,IAAKzB,KAAKS,cAAcC,EAAQC,EAAQC,KAG1C,OAAWZ,KAACc,eAAeS,EAAS5B,KACtC,CAGAa,UAAAA,GACER,KAAKO,YAAc,EACrB,CAEAmB,KAAAA,CAAMhB,EAAgBC,EAAaC,EAAaX,EAASE,MAEvD,OADAH,KAAKO,YAAYoB,KAAK3B,KAAKS,cAAcC,EAAQC,EAAQC,IAE3DZ,IAAA,CAEA,WAAM4B,CAAMC,GAAwB,GAAKC,IAAAA,EACvC,MAAMJ,EAAQ1B,KAAKO,YAMnB,OALAP,KAAKQ,cAKqB,OAAnBsB,SAJgB9B,KAAKK,QAAQmB,SAAcxB,KAAKM,aAAc,CACnEmB,IAAKC,KAGU/B,KAAKA,MAAImC,EAAI,IAAIC,IAAKC,IACrC,GAAIH,EACF,OAAO7B,KAAKc,eAAekB,GAE3B,IACE,OAAOhC,KAAKc,eAAekB,EAC7B,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,EAEJ,CAEAC,MAAAA,CAAOC,EAAQzB,EAAQ0B,EAAO,GAAIxB,EAAKX,EAASE,MAM9C,OAAOH,KAAKsB,QAAQZ,EALL,CACbyB,SACAC,QAGkCxB,EACtC,CAEAyB,WAAAA,CAAYF,EAAQzB,EAAQ0B,EAAO,GAAIxB,EAAKX,EAASE,MAMnD,OAAWH,KAAC0B,MAAMhB,EALH,CACbyB,SACAC,QAGgCxB,EACpC,MCnHU0B,ECGAC,GDHZ,SAAYD,GACVA,EAAAA,EAAA,WAAA,IAAA,YACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,cAAA,IAAA,eACAA,EAAAA,EAAA,iBAAA,IAAA,kBACAA,EAAAA,EAAA,gBAAA,IAAA,iBACAA,EAAAA,EAAA,iBAAA,IAAA,kBACAA,EAAAA,EAAA,UAAA,GAAA,WACAA,EAAAA,EAAA,aAAA,KAAA,cACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,UAAA,KAAA,WACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,gBAAA,IAAA,iBACAA,EAAAA,EAAA,UAAA,GAAA,WACAA,EAAAA,EAAA,UAAA,GAAA,WACAA,EAAAA,EAAA,YAAA,KAAA,aACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,UAAA,GAAA,WACAA,EAAAA,EAAA,cAAA,KAAA,eACAA,EAAAA,EAAA,YAAA,KAAA,aACAA,EAAAA,EAAA,YAAA,GAAA,aACAA,EAAAA,EAAA,YAAA,KAAA,aACAA,EAAAA,EAAA,YAAA,GAAA,aACAA,EAAAA,EAAA,UAAA,KAAA,WACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,cAAA,IAAA,cACD,CA7BD,CAAYA,IAAAA,EA6BX,CAAA,IE3BD,MAAME,EAGJ/C,WAAAA,CAAYY,GAAgBL,KAFlByC,cAAQ,EAGhBzC,KAAKyC,SAAWpC,CAClB,CAEA,WAAIA,GACF,OAAWL,KAACyC,QACd,ECTF,MAAMC,UAAaF,EACjBG,IAAAA,GACE,OAAO3C,KAAKK,QAAQuC,IAAI,gBAC1B,uOFFF,SAAYL,GAEVA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,aAAA,MAAA,eACAA,EAAAA,EAAA,WAAA,OAAA,aACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,iBAAA,KAAA,mBACAA,EAAAA,EAAA,kBAAA,KAAA,oBACAA,EAAAA,EAAA,cAAA,OAAA,gBACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,KAAA,KAAA,OACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,eAAA,KAAA,iBACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,eAAA,KAAA,iBACAA,EAAAA,EAAA,uBAAA,KAAA,yBACAA,EAAAA,EAAA,mBAAA,KAAA,qBACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,OAAA,KAAA,SACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,oBAAA,SAAA,sBACAA,EAAAA,EAAA,gBAAA,SAAA,kBACAA,EAAAA,EAAA,UAAA,SAAA,YACAA,EAAAA,EAAA,aAAA,SAAA,eACAA,EAAAA,EAAA,mBAAA,SAAA,qBACAA,EAAAA,EAAA,gBAAA,SAAA,kBACAA,EAAAA,EAAA,aAAA,SAAA,eACAA,EAAAA,EAAA,cAAA,SAAA,gBACAA,EAAAA,EAAA,cAAA,SAAA,gBACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,oBAAA,SAAA,sBACAA,EAAAA,EAAA,sBAAA,OAAA,wBACAA,EAAAA,EAAA,qBAAA,OAAA,uBACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,mBAAA,KAAA,qBACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,iBAAA,KAAA,mBACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,iBAAA,KAAA,mBACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,eAAA,MAAA,iBACAA,EAAAA,EAAA,eAAA,KAAA,iBACAA,EAAAA,EAAA,QAAA,OAAA,UACAA,EAAAA,EAAA,eAAA,OAAA,iBACAA,EAAAA,EAAA,sBAAA,OAAA,wBACAA,EAAAA,EAAA,gBAAA,OAAA,kBACAA,EAAAA,EAAA,sBAAA,OAAA,wBACAA,EAAAA,EAAA,uBAAA,OAAA,yBACAA,EAAAA,EAAA,sBAAA,OAAA,wBACAA,EAAAA,EAAA,cAAA,OAAA,gBACAA,EAAAA,EAAA,WAAA,OAAA,aACAA,EAAAA,EAAA,UAAA,OAAA,YACAA,EAAAA,EAAA,UAAA,OAAA,YACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,MAAA,KAAA,QACAA,EAAAA,EAAA,uBAAA,MAAA,yBACAA,EAAAA,EAAA,0BAAA,KAAA,4BACAA,EAAAA,EAAA,MAAA,KAAA,QACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,aAAA,MAAA,eACAA,EAAAA,EAAA,kBAAA,KAAA,oBACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,KAAA,KAAA,OACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,qBAAA,SAAA,uBACAA,EAAAA,EAAA,iBAAA,KAAA,mBACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,eAAA,KAAA,iBACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,MAAA,KAAA,QACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,sBAAA,KAAA,wBACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,iBAAA,KAAA,mBACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,kBAAA,KAAA,oBACAA,EAAAA,EAAA,UAAA,QAAA,YACAA,EAAAA,EAAA,eAAA,QAAA,iBACAA,EAAAA,EAAA,YAAA,QAAA,cACAA,EAAAA,EAAA,iBAAA,QAAA,mBACAA,EAAAA,EAAA,iBAAA,KAAA,mBACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,UAAA,SAAA,YACAA,EAAAA,EAAA,aAAA,OAAA,eACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,oBAAA,KAAA,sBACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,iBAAA,KAAA,mBACAA,EAAAA,EAAA,MAAA,KAAA,QACAA,EAAAA,EAAA,UAAA,MAAA,YACAA,EAAAA,EAAA,gBAAA,MAAA,kBACAA,EAAAA,EAAA,uBAAA,KAAA,yBACAA,EAAAA,EAAA,4BAAA,KAAA,8BACAA,EAAAA,EAAA,2BAAA,KAAA,6BACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,WAAA,SAAA,aACAA,EAAAA,EAAA,KAAA,KAAA,OACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,aAAA,SAAA,eACAA,EAAAA,EAAA,yBAAA,SAAA,2BACAA,EAAAA,EAAA,gBAAA,SAAA,kBACAA,EAAAA,EAAA,sBAAA,KAAA,wBACAA,EAAAA,EAAA,gBAAA,SAAA,kBACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,sBAAA,KAAA,wBACAA,EAAAA,EAAA,iBAAA,KAAA,mBACAA,EAAAA,EAAA,2BAAA,KAAA,6BACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,mBAAA,KAAA,qBACAA,EAAAA,EAAA,mBAAA,KAAA,qBACAA,EAAAA,EAAA,eAAA,KAAA,iBACAA,EAAAA,EAAA,KAAA,KAAA,OACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,kBAAA,KAAA,oBACAA,EAAAA,EAAA,mBAAA,KAAA,qBACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,MAAA,KAAA,QACAA,EAAAA,EAAA,iBAAA,OAAA,mBACAA,EAAAA,EAAA,uBAAA,OAAA,yBACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,eAAA,KAAA,iBACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,qBAAA,KAAA,uBACAA,EAAAA,EAAA,QAAA,OAAA,UACAA,EAAAA,EAAA,cAAA,OAAA,gBACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,mBAAA,KAAA,qBACAA,EAAAA,EAAA,MAAA,KAAA,QACAA,EAAAA,EAAA,OAAA,KAAA,SACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,0BAAA,KAAA,4BACAA,EAAAA,EAAA,oBAAA,KAAA,sBACAA,EAAAA,EAAA,iBAAA,KAAA,mBACAA,EAAAA,EAAA,iBAAA,KAAA,mBACAA,EAAAA,EAAA,iBAAA,KAAA,mBACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,OAAA,KAAA,SACAA,EAAAA,EAAA,mBAAA,KAAA,qBACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,wBAAA,MAAA,0BACAA,EAAAA,EAAA,sBAAA,KAAA,wBACAA,EAAAA,EAAA,WAAA,OAAA,aACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,sBAAA,KAAA,wBACAA,EAAAA,EAAA,eAAA,KAAA,iBACAA,EAAAA,EAAA,SAAA,OAAA,WACAA,EAAAA,EAAA,eAAA,OAAA,iBACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,aAAA,MAAA,eACAA,EAAAA,EAAA,mBAAA,MAAA,qBACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,kBAAA,KAAA,oBACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,aAAA,SAAA,eACAA,EAAAA,EAAA,gBAAA,SAAA,kBACAA,EAAAA,EAAA,mBAAA,SAAA,qBACAA,EAAAA,EAAA,SAAA,SAAA,WACAA,EAAAA,EAAA,OAAA,KAAA,SACAA,EAAAA,EAAA,kBAAA,KAAA,oBACAA,EAAAA,EAAA,kBAAA,KAAA,oBACAA,EAAAA,EAAA,KAAA,KAAA,OACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,eAAA,KAAA,iBACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,MAAA,KAAA,QACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,kBAAA,KAAA,oBACAA,EAAAA,EAAA,eAAA,SAAA,iBACAA,EAAAA,EAAA,IAAA,KAAA,MACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,QAAA,QAAA,UACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,kBAAA,KAAA,oBACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,OAAA,QAAA,SACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,mBAAA,KAAA,qBACAA,EAAAA,EAAA,OAAA,KAAA,SACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,mBAAA,KAAA,qBACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,eAAA,MAAA,iBACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,wBAAA,KAAA,0BACAA,EAAAA,EAAA,0BAAA,KAAA,4BACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,oBAAA,KAAA,sBACAA,EAAAA,EAAA,WAAA,OAAA,aACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,KAAA,MAAA,OACAA,EAAAA,EAAA,SAAA,MAAA,WACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,oBAAA,KAAA,sBACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,iBAAA,KAAA,kBACD,CA5PD,CAAYA,IAAAA,EA4PX,CAAA,IG1PM,MAAMM,EAASA,IAAwB,oBAAXC,OCEnC,MAAMC,UAAcP,EAClBQ,gBAAAA,CAAiBb,GACf,YAAY9B,QAAQuC,IACF,gBAAAT,qBAEpB,CAEA,iBAAMc,EAAYC,UAChBA,EAASC,YACTA,EAAWC,KAEXA,EAAgBC,YAChBA,EAAuBC,QACvBA,EAAU,CAQX,IACC,MAAMC,EAAM,eAEZ,GAAIV,KAAY7C,KAAKK,QAAQmD,UAAUL,GAAc,CAEnD,MACMM,SADWC,OAAO,OACXC,iBAAiBR,GAExBxC,EAAMiD,EACPN,CAAAA,EAAAA,GACHO,KAAMtB,EAAauB,SACnBV,OACAF,YACAa,KAAMN,IAGR,OAAOzD,KAAKK,QAAQ2D,SAElBT,EAAK5C,EACT,IAAWX,KAAKK,QAAQ4D,QAAQd,GAAc,CAG5C,MAAMxC,EAAMiD,KACPN,EAAO,CACVO,KAAMtB,EAAauB,SACnBV,OACAC,cACAH,YACAa,KAAMZ,IAGR,OAAWnD,KAACK,QAAQ2D,SAElBT,EAAK5C,EACT,CACE,MAAU,IAAAnB,MAAM,gBAEpB,CAEA,sBAAM0E,EAAiBhB,UACrBA,EAASC,YACTA,EAAWC,KACXA,EAAgBC,YAChBA,EAAuBC,QACvBA,EAAU,CAAA,IAQV,MAAM/B,QAAqBvB,KAACiD,YAAY,CACtCC,YACAC,cACAC,OACAE,QAAOM,EACFN,CAAAA,EAAAA,EACHa,CAAAA,qBAAqB,MAInBhC,EAASZ,EAAS5B,KAAKiB,GAa7B,aAXMZ,KAAKK,QAAQ+D,SAASC,QAAQ,CAClClC,SACAmC,cAAe,EACfjB,2BAGShD,QAAQ+D,SAASG,cAAc,CACxCpC,SACAmC,cAAe,IAGV/C,CACT,CAEAiD,OAAAA,CAAQX,EAAMX,EAAWE,EAAMzC,EAAS,CAAA,GACtC,OAAOX,KAAKK,QAAQmB,SAAS,eAAcoC,EAAA,CACzCC,OACAX,YACAE,QACGzC,GAEP,CAEA8D,IAAAA,EAAKtC,OAAEA,EAAMuC,WAAEA,EAAa,KAAI/D,OAAEA,EAAS,CAAA,IACzC,OAAWX,KAACK,QAAQuC,IAAI,OAAO8B,WAAoBvC,IAAU,CAC3DxB,UAEJ,CAEAgE,SAAAA,CAAUxC,EAAQxB,EAAS,CAAE,GAC3B,OAAOX,KAAKK,QAAQuC,IAAI,gBAAgBT,cAAoB,CAC1DxB,UAEJ,CAEAiE,UAAAA,CAAWC,GACT,YAAYxE,QAAQuC,IAAsB,kBAAAiC,IAC5C,CAEAC,OAAAA,GACE,OAAO9E,KAAKK,QAAQuC,IAAI,iBAC1B,CAEAmC,SAAAA,CAAU7B,EAAWE,EAAMzC,EAAS,IAClC,OAAWX,KAACwE,QAAQjC,EAAayC,OAAQ9B,EAAWE,EAAMzC,EAC5D,CAEAsE,aAAAA,CAAc/B,EAAWE,EAAM8B,EAAaC,EAAgBxE,EAAS,IACnE,YAAY6D,QAAQjC,EAAa6C,WAAYlC,EAAWE,EAAIQ,EAC1DsB,CAAAA,cACAC,kBACGxE,GAEP,CAEA0E,KAAAA,CAAMlD,EAAQxB,EAAS,IAErB,OAAOX,KAAKK,QAAQuC,IAAI,gBAAgBT,UAAgB,CACtDxB,UAEJ,CAEA2E,QAAAA,CAASnD,EAAQxB,EAAS,IACxB,OAAOX,KAAKqF,MAAMlD,EAAQxB,EAC5B,CAEA4E,OAAOpD,GACL,OAAWnC,KAACK,QAAQkF,OAAuB,gBAAApD,IAC7C,CAEAqD,QAAAA,EAASrD,OAAEA,EAAMuC,WAAEA,EAAa,KAAIe,SAAEA,IAEpC,OAAI5C,SACUxC,QACTuC,IAAW,OAAA8B,WAAoBvC,YAAkB,CAChDuD,aAAc,WAEfC,KAAKC,eAAOrE,GACX,MACMsE,gBADkB,OACNC,kBAAkBL,GAIpC,OAFAlE,EAAS5B,KAAKoG,KAAKF,OAERG,QAAQ,CAACC,EAASC,KAC3BL,EAAOM,GAAG,SAAUF,GACpBJ,EAAOM,GAAG,QAASD,EACrB,EACF,GAEKF,QAAQE,OAAO,sBAE1B,CAEAE,KAAAA,EAAMjE,OAAEA,EAAMuC,WAAEA,EAAa,KAAI/D,OAAEA,EAAS,KAC1C,OAAOX,KAAKK,QAAQuC,IAAI,OAAO8B,WAAoBvC,UAAgB,CACjExB,UAEJ,ECzJF,MAAM0F,EAGJ5G,WAAAA,CAAoBY,EAA0BiG,GAAatG,KAAvCK,aAA0BiG,EAAAA,KAAAA,kBAF9CC,uBAAkE,KAE9CvG,KAAOK,QAAPA,EAA0BL,KAAKsG,MAALA,CAAgB,CAK9D,WAAME,GACJxG,KAAKuG,kCAAoClG,QAAQoG,SAASD,MAAMxG,KAAKsG,MACvE,CAEA,QAAII,GACF,OAAW1G,KAACuG,uBAAuBI,MAAM,EAC3C,CAEAC,qBAAAA,CAAsBC,GAGpB,OAAO9F,OAAO+F,QAF0B9G,KAAK0G,KAAKK,OAAOC,YAEvBC,KAChC,EAAEC,EAAcC,KAAWA,EAAMC,QAAUP,EAE/C,CAEA,aAAIQ,GAEF,OAAOrH,KAAKuG,uBAAuB5G,KAAK2H,UAC1C,CAEA,uBAAIC,GACF,MACMC,EADexH,KAAKuG,uBAAuB5G,KAAK8H,cACnBR,KAChCS,GAAqB,IAAbA,EAAI7D,MAA+B,IAAjB6D,EAAIC,UAEjC,OAAOH,MAAAA,OAAAA,EAAAA,EAAe7H,KAAKiI,oBAC7B,CAEA,gBAAIC,GACF,OAAO7H,KAAKuG,uBAAuB5G,KAAKmI,WAC1C,CAEA,sBAAIC,GACF,OAAO/H,KAAKuG,uBAAuB5G,KAAKqI,cAC1C,CAEAC,oBAAAA,CACEpB,EACAM,GAAUe,IAAAA,EAEV,MAAOC,EAAWC,UAAWF,EAC3BlI,KAAK4G,sBAAsBC,IAAcqB,EAAI,GAK/C,GAFkC,UADZE,EAAWvE,OAGjBwE,MAAMC,QAAQnB,GAE5B,OADAnH,KAAK0G,KAAK/G,KAAKwI,GAAahB,EACrBd,EAEP,MAAM,IAAI7G,MAAM,gBAEpB,CAEA,gBAAM+I,GACJ,aAAavI,KAAKK,QAAQoG,SAAS+B,kBAAkBxI,KAAKqH,UAAW,CACnEoB,OAAQ,aACRC,OAAQ1I,KAAK0G,KAAK/G,MAEtB,CAEA,cAAMgJ,EAASC,QACbA,EAAOC,SACPA,GAC2C,CAAA,SAGrC7I,KAAKuI,aAEX,MAAMO,EAAclF,EAAA,CAClB6E,OAAQ,YACJzI,KAAK6H,cAAgB,CAAEe,WACvB5I,KAAK+H,oBAAsB,CAAEgB,oBAAqB,CAAEF,cAS1D,kBALaxI,QAAQoG,SAAS+B,kBAC1BxI,KAAKqH,UACLyB,EAIN,EChHF,MAAME,UAAiBxG,EACrByG,iBAAAA,CAAkB3C,GAChB,OAAW,IAAAD,EAAkBrG,KAAKK,QAASiG,EAC7C,CAEAE,KAAAA,CAAMF,GACJ,YAAY4C,eAAe5C,GACxBX,KAAMwD,GAGEA,EAAaC,QAAQC,iBAE7B1D,KAAM2D,GACLtJ,KAAKuJ,qBAAqBD,GAEhC,CAEA,oBAAMJ,CAAeM,GACnB,MAAM7J,KAAEA,SAAmBK,KAACK,QAAQ2D,SAElC,wBAAyB,CACzByF,YAAaD,IAGf,OAAO7J,CACT,CAEA,0BAAM4J,CACJD,GAEA,MAAM3J,KAAEA,SAAeK,KAAKK,QAAQuC,IAClC,qCACA,CACEjC,OAAQ,CACN0I,gBAAiBC,KAKvB,OAAO3J,CACT,CAEA,uBAAM6I,CACJc,EACAI,GAEA,MAAM/J,KAAEA,SAAeK,KAAKK,QAAQsJ,QACT,yBAAAL,IACzB,CACEI,SAIJ,OAAO/J,CACT,ECnEF,MAAMiK,UAAepH,EACnBqH,UAAAA,CAAWjJ,EAAI8I,EAAO,CAAE,GACtB,OAAO1J,KAAKK,QAAQ2D,SAA0B,iBAAApD,IAAM8I,EACtD,ECHF,MAAMI,UAAetH,EACnBuH,MAAAA,CAAOC,EAAOrJ,EAAS,CAAA,GACrB,OAAOX,KAAKK,QAAQmB,SAAS,gBAAeoC,EAAA,CAC1CoG,SACGrJ,GAEP,CAEAsJ,OAAAA,CAAQtJ,EAAS,CAAE,GACjB,OAAOX,KAAKK,QAAQuC,IAAI,iBAAkBjC,EAC5C,ECTF,MAAMuJ,UAAgB1H,EAOpB/C,WAAAA,CAAYY,GACVN,MAAMM,GAASL,KAJDmK,UACAC,EAAAA,KAAAA,WAKd,EAAApK,KAAKmK,KAAO,EACZnK,KAAKoK,MAAQ,CACf,CACAC,SAAAA,CAAUC,EAAOhH,EAAU,GAAIiH,EAAU,MACvC,MAAM5J,EAAMiD,EACV4G,CAAAA,MAAO,GACPC,WAAYC,KAAKC,UAAU,CAAC3K,KAAKmK,KAAMnK,KAAKoK,QAC5CE,SACGhH,GAGL,OAAOtD,KAAKK,QAAQuC,IAAI,OAAO2H,YAAmB,CAAE5J,UACtD,CAEAiK,MAAAA,CAAOhK,EAAI2J,EAAU,MACnB,OAAOvK,KAAKK,QAAQuC,IAAW,OAAA2H,aAAmB3J,IACpD,ECvBF,MAAMiK,UAAiBrI,EACrB,gBAAMsI,EAAW3I,OACfA,EAAMgB,YACNA,EAAWuB,WACXA,EAAa,KAAIpB,QAEjBA,EAAU,CAOX,IACCyH,QAAQC,OAAiB,MAAV7I,EAAgB,yBAC/B4I,QAAQC,OAAsB,MAAf7H,EAAqB,8BAEpC,MAAMI,EAAM,OAAOmB,WAAoBvC,aAEvC,GAAIU,KAAY7C,KAAKK,QAAQmD,UAAUL,GAAc,CAEnD,MAAO8H,SAAYjF,QAAQkF,IAAI,CAACxH,OAAO,MAAOA,OAAO,UAG/C/C,EAAMiD,GACVG,KAHQkH,EAAGtH,iBAAiBR,IAIzBG,GAKL,YAAYjD,QAAQ2D,SAA0BT,EAAK5C,EACrD,CAAO,GAAIX,KAAKK,QAAQ4D,QAAQd,GAAc,CAI5C,MAAMxC,EAAMiD,GACVG,KAAMZ,GACHG,GAGL,YAAYjD,QAAQ2D,SAA0BT,EAAK5C,EAIrD,CACE,MAAM,IAAInB,MAAM,gBAEpB,CAEA,cAAMgG,EAASrD,OAAEA,EAAMoI,QAAEA,EAAO9E,SAAEA,IAKhC,OAJAsF,QAAQC,OAAiB,MAAV7I,EAAgB,yBAC/B4I,QAAQC,OAAkB,MAAXT,EAAiB,0BAChCQ,QAAQC,OAAmB,MAAZvF,EAAkB,2BAE7B5C,IACS7C,KAACK,QACTuC,IAAoB,gBAAAT,cAAmBoI,YAAmB,CACzD7E,aAAc,WAEfC,KAAKC,eAAOrE,GACX,MACMsE,SADWnC,OAAO,OACNoC,kBAAkBL,GAIpC,OAFAlE,EAAS5B,KAAKoG,KAAKF,OAERG,QAAQ,CAACC,EAASC,KAC3BL,EAAOM,GAAG,SAAUF,GACpBJ,EAAOM,GAAG,QAASD,EAAM,EAE7B,GAEKF,QAAQE,OAAO,sBAE1B,CAEA,UAAMiF,CAAKhJ,GAET,YAAY9B,QAAQuC,IADQ,gBAAAT,aAE9B,CACA,aAAMoI,CAAQpI,EAAQgD,EAAiB,UAGrC,OAAOnF,KAAKK,QAAQuC,IADR,gBAAgBT,cAAmBgD,IAEjD,CAEA,aAAMd,EAAQlC,OAAEA,EAAMmC,cAAEA,EAAajB,YAAEA,EAAc,OAMnD,OALA0H,QAAQC,OAAiB,MAAV7I,EAAgB,yBAC/B4I,QAAQC,OAAwB,MAAjB1G,EAAuB,0CAI1BjE,QAAQmB,SAFR,gBAAgBW,cAAmBmC,YAEfV,OACxBP,GAAe,CACnBA,gBAGN,CAEA,mBAAMkB,EAAcpC,OAAEA,EAAMmC,cAAEA,EAAaI,WAAEA,EAAa,OAOxD,OANAqG,QAAQC,OAAiB,MAAV7I,EAAgB,yBAC/B4I,QAAQC,OAAwB,MAAjB1G,EAAuB,qCAK3BtE,KAACK,QAAQkF,OAHD,OAAAb,WAAoBvC,cAAmBmC,IAI5D,CAEA,WAAM8G,EAAMjJ,OAAEA,EAAMkJ,eAAEA,EAAiB,IAUrC,OATAN,QAAQC,OAAiB,MAAV7I,EAAgB,yBAC/B4I,QAAQC,QAAQM,MAAMD,GAAiB,qCAQhCrL,KAAKK,QAAQkL,WAFQ,gBAAApJ,aAEQ,CAClCkJ,kBAEJ,EC9HF,MAAMG,UAAmBhJ,EACvBiJ,GAAAA,CAAItJ,EAAQxB,EAAS,IAEnB,OAAOX,KAAKK,QAAQuC,IADQ,gBAAAT,WACC,CAAExB,UACjC,ECOmB,MAAA+K,EAanBjM,WAAAA,CAAY6D,QAZOqI,WAAK,EAAA3L,KACd4L,YACAC,EAAAA,KAAAA,kBACAC,eAAS,EAAA9L,KACT+L,aACAC,EAAAA,KAAAA,qBACAC,aAAO,EAAAjM,KACPkM,iBACAC,EAAAA,KAAAA,eAEMC,EAAAA,KAAAA,aAGd,EAAApM,KAAKoM,QAAU9I,EAAQ8I,QACvBpM,KAAK2L,MCQarI,KACpB,MAAM+I,EA3Ba/I,KACnB,MAAM+I,EAAWV,EAAMW,OAAO,CAC5BC,QAASjJ,EAAQ8I,QACjBI,iBAAkB,CAEhBC,QAAS,QAkBb,OAdAJ,EAASK,aAAanL,SAASoL,IAC5BpL,IACC,MAAMqL,EAAqB,MAARrL,OAAQ,EAARA,EAAUsL,QAAQD,WAKrC,OAHIA,IACFP,EAASS,SAASD,QAAQE,OAAOC,WAAaJ,GAEzCrL,GAERF,GACQ2E,QAAQE,OAAO7E,IAInBgL,GAIUY,CAAY3J,GAEvB4J,EAAW5J,EAAQ4J,SACnBrE,EAAWvF,EAAQuF,SACnB+D,EAAatJ,EAAQsJ,WAE3B,GAAIA,EACFP,EAASS,SAASD,QAAQE,OAAOC,WAAaJ,MACrCM,KAAAA,IAAYrE,EA0BrB,MAAMrJ,MAAM,4DAzBZ6M,EAASK,aAAapL,QAAQqL,IAAI/G,UAAiB,IAAAuH,EACjD,GAAyB,OAAzBA,EAAIC,EAAOP,QAAQE,SAAfI,EAAuBH,WACzB,OAAOI,EACF,CACL,MAAM7L,QAAiBoK,EAAM0B,KAG3B,GAAG/J,EAAQ8I,uBACX,CACEc,WACArE,YAEF,CACEgE,QAAS,CACP,eAAgB,yBAOtB,OAFAO,EAAOP,QAAQG,WAAazL,EAAS5B,KAAK2N,OAEnCF,CACT,GAIJ,CAEA,OAAOf,GD9CQkB,CAAajK,EAC5B,CAEA,SAAI+B,GAKF,OAJmB,MAAfrF,KAAK4L,SACP5L,KAAK4L,OAAS,IAAI7I,EAAM/C,YAGd4L,MACd,CAEA,QAAIjJ,GAKF,OAJkB,MAAd3C,KAAK6L,QACP7L,KAAK6L,MAAQ,IAAInJ,EAAK1C,YAGZ6L,KACd,CAEA,YAAIpF,GAKF,OAJsB,MAAlBzG,KAAK8L,YACP9L,KAAK8L,UAAY,IAAI9C,EAAShJ,OAGzBA,KAAK8L,SACd,CAEA,UAAI0B,GAKF,OAJoB,MAAhBxN,KAAK+L,UACP/L,KAAK+L,QAAU,IAAInC,EAAO5J,OAGrBA,KAAK+L,OACd,CAEA,WAAI0B,GAKF,OAJqB,MAAjBzN,KAAKgM,WACPhM,KAAKgM,SAAW,IAAI9B,EAAQlK,OAGvBA,KAAKgM,QACd,CAEA,UAAIjC,GAKF,OAJoB,MAAhB/J,KAAKiM,UACPjM,KAAKiM,QAAU,IAAInC,EAAO9J,OAGjBA,KAACiM,OACd,CAEA,cAAIyB,GAKF,OAJwB,MAApB1N,KAAKkM,cACPlM,KAAKkM,YAAc,IAAIV,EAAWxL,OAGzBA,KAACkM,WACd,CAEA,YAAI9H,GAKF,OAJsB,MAAlBpE,KAAKmM,YACPnM,KAAKmM,UAAY,IAAItB,EAAS7K,OAGrBA,KAACmM,SACd,CAEA,iBAAIwB,GACF,OAAOrL,CACT,CAEAsL,SAAAA,CAAUtN,EAAe,0BACvB,OAAO,IAAIF,EAAUJ,KAAMM,EAC7B,CAEAuN,SAAAA,CAAU1G,GACR,OAAOA,GAA0B,iBAAVA,GAAsBA,EAAM1H,cAAgBsB,MACrE,CAEAyC,SAAAA,CAAU2D,GACR,MAAwB,iBAAVA,GAAsBA,aAAiB2G,MACvD,CAEAC,UAAAA,CAAW5G,GACT,MAAwB,kBAAVA,CAChB,CAEAlD,OAAAA,CAAQkD,GACN,MAA8B,iBAAX,MAALA,OAAK,EAALA,EAAO/D,KACvB,CAEAuG,OAAAA,CAAQpG,EAAK5C,GACX,OAAOX,KAAKgO,IAAIzK,EAAK5C,EAAQ,CAC3BkM,QAAS,CACP,eAAgB,wBAGtB,CAEA7I,QAAAA,CAAYT,EAAK5C,GACf,OAAOX,KAAKqN,KAAQ9J,EAAK5C,EAAQ,CAC/BkM,QAAS,CACP,eAAgB,uBAElBoB,cAAeC,UAEnB,CAEAC,SAAAA,CAAU5K,EAAK5C,GACb,OAAOX,KAAKoO,MAAM7K,EAAK5C,EAAQ,CAC7BkM,QAAS,CACP,eAAgB,wBAGtB,CAEAtB,UAAAA,CAAWhI,EAAK5C,GAKd,OAAOX,KAAKuF,OAAOhC,EACrB,CAEA8K,OAAAA,CAAQ9K,EAAKmG,GACX,OAAO1J,KAAK2J,QAAQpG,EAAK,CACvBmG,QAEJ,CAEAlI,QAAAA,CAAY+B,EAAKmG,GACf,YAAY1F,SAAYT,EAAK,CAC3BmG,QAEJ,CAEA4E,SAAAA,CAAU/K,EAAKmG,GACb,YAAYyE,UAAU5K,EAAK,CACzBmG,QAEJ,CAEA6E,UAAAA,CAAWhL,EAAKmG,GACd,OAAW1J,KAACuL,WAAWhI,EAAK,CAC1BmG,QAEJ,CAEA9G,GAAAA,CACEW,EACA6J,GAEA,OAAOpN,KAAK2L,MAAM/I,IAAIW,EAAK6J,EAC7B,CAEAC,IAAAA,CACE9J,EACA5D,EACAyN,GAEA,OAAOpN,KAAK2L,MAAM0B,KAAK9J,EAAK5D,EAAMyN,EACpC,CAEAY,GAAAA,CACEzK,EACA5D,EACAyN,GAEA,OAAWpN,KAAC2L,MAAMqC,IAAIzK,EAAK5D,EAAMyN,EACnC,CAEAgB,KAAAA,CACE7K,EACA5D,EACAyN,GAEA,OAAOpN,KAAK2L,MAAMyC,MAAM7K,EAAK5D,EAAMyN,EACrC,CAEA9J,OAAAA,CACEC,EACA6J,GAEA,OAAOpN,KAAK2L,MAAMrI,QAAQC,EAAK6J,EACjC,CAEA7H,OACEhC,EACA6J,GAEA,OAAOpN,KAAK2L,MAAMpG,OAAOhC,EAAK6J,EAChC,CAEA,UAAMoB,CAAcjL,EAAa6J,GAE/B,kBAD4BxK,IAAOW,EAAK6J,IACxBzN,IAClB,EE3NI,MAAA8O,EAAcxM,QAESyM,IAAxBzM,EAAerC,WAA+C8O,IAAxBzM,EAAetC"}