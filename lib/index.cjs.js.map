{"version":3,"file":"index.cjs.js","sources":["../src/handlers/form-data-factory.ts","../src/axios-factory.ts","../src/handlers/auth.ts","../src/handlers/nodes.ts","../src/handlers/workflow.ts","../src/handlers/rhcore.ts","../src/handlers/search.ts","../src/handlers/members.ts","../src/handlers/versions.ts","../src/handlers/webreports.ts","../src/rpc-client/error-codes.ts","../src/rpc-client/index.ts","../src/Session.ts"],"sourcesContent":["export default {\n  createFormData() {\n    if (process.node) {\n      const Klass = require('form-data')\n      return new Klass()\n    } else {\n      return new FormData()\n    }\n  },\n}\n","// const get = require('lodash.get')\nimport FormDataFactory from './handlers/form-data-factory'\n\nimport axios from 'axios'\nimport get from 'lodash.get'\n\nfunction getInstance(options) {\n  const instance = axios.create(options)\n\n  instance.interceptors.response.use(\n    (response) => {\n      const otcsticket = get(response, 'headers.otcsticket')\n\n      if (otcsticket) {\n        instance.defaults.headers.common.OTCSTicket = otcsticket\n      }\n      return response\n    },\n    (error) => {\n      return Promise.reject(error)\n    }\n  )\n\n  return instance\n}\n\nfunction axiosFactory(options) {\n  const instance = getInstance(options)\n\n  const username = get(options, 'username')\n  const password = get(options, 'password')\n  const otcsticket = get(options, 'otcsticket')\n\n  if (otcsticket) {\n    instance.defaults.headers.common.OTCSTicket = otcsticket\n  } else if (username && password) {\n    instance.interceptors.request.use(async (request) => {\n      if (request.headers.common.OTCSTicket) {\n        return request\n      } else {\n        const formData = FormDataFactory.createFormData()\n\n        formData.append('username', username)\n        formData.append('password', password)\n\n        const response = process.node\n          ? await axios.post(\n              `${options.baseURL}/api/v1/auth/`,\n              formData.getBuffer(),\n              { headers: formData.getHeaders() }\n            )\n          : await axios.post(`${options.baseURL}/api/v1/auth/`, formData)\n\n        request.headers.common.OTCSTicket = get(response, 'data.ticket')\n\n        return request\n      }\n    })\n  } else {\n    throw Error('You must provide an otcsticket or username and password.')\n  }\n\n  return instance\n}\n\nexport default axiosFactory\n","// const FormDataFactory = require('./form-data-factory')\n\nexport default (session) => ({\n  auth() {\n    return session.get('/api/v1/auth/')\n  },\n})\n","import SubTypes from './subtypes.json'\r\n\r\nexport default (session) => ({\r\n  addablenodetypes(dataid) {\r\n    return session.get(`api/v1/nodes/${dataid}/addablenodetypes`)\r\n  },\r\n\r\n  async addDocument({\r\n    parent_id,\r\n    fileHandler,\r\n    apiVersion = 'v1', // v1 or v2\r\n    name = null,\r\n    options = {},\r\n  }) {\r\n    console.assert(parent_id != null, 'parent_id cannot be null')\r\n    console.assert(fileHandler != null, 'fileHandler cannot be null')\r\n    console.assert(\r\n      ['v1', 'v2'].includes(apiVersion),\r\n      \"apiVersion must be in ['v1','v2']\"\r\n    )\r\n\r\n    const url = `api/${apiVersion}/nodes`\r\n\r\n    if (process.node) {\r\n      // node.js\r\n      const fsp = require('fs').promises\r\n      const path = require('path')\r\n\r\n      const f = await fsp.readFile(fileHandler)\r\n      const csName = name || path.basename(fileHandler)\r\n\r\n      const params = {\r\n        ...options,\r\n        type: SubTypes.Document,\r\n        name: csName,\r\n        parent_id,\r\n        file: {\r\n          file: f,\r\n          name: csName,\r\n        },\r\n      }\r\n\r\n      return session.postForm(url, params)\r\n    } else {\r\n      // browser\r\n      const csName = name || fileHandler.name\r\n\r\n      const params = {\r\n        ...options,\r\n        type: SubTypes.Document,\r\n        name: csName,\r\n        parent_id,\r\n        file: {\r\n          file: fileHandler,\r\n          name: csName,\r\n        },\r\n      }\r\n\r\n      return session.postForm(url, params)\r\n    }\r\n  },\r\n\r\n  async addDocumentMajor({\r\n    parent_id,\r\n    fileHandler,\r\n    name = null,\r\n    description = null,\r\n    options = {},\r\n  }) {\r\n    const response = await this.addDocument({\r\n      parent_id,\r\n      fileHandler,\r\n      name,\r\n      options: {\r\n        ...options,\r\n        advanced_versioning: true,\r\n      },\r\n    })\r\n\r\n    const dataid = response.data.id\r\n\r\n    await session.versions.promote({\r\n      dataid,\r\n      versionNumber: 1,\r\n      description,\r\n    })\r\n\r\n    await session.versions.deleteVersion({\r\n      dataid,\r\n      versionNumber: 1,\r\n    })\r\n\r\n    return response\r\n  },\r\n\r\n  addItem(type, parent_id, name, params = {}) {\r\n    return session.postBody('api/v2/nodes', {\r\n      type,\r\n      parent_id,\r\n      name,\r\n      ...params,\r\n    })\r\n  },\r\n\r\n  node({ dataid, apiVersion = 'v2', params = {} }) {\r\n    return session.get(`api/${apiVersion}/nodes/${dataid}`, {\r\n      params,\r\n    })\r\n  },\r\n\r\n  ancestors(dataid, params = {}) {\r\n    return session.get(`api/v1/nodes/${dataid}/ancestors`, {\r\n      params,\r\n    })\r\n  },\r\n\r\n  volumeInfo(objType) {\r\n    return session.get(`api/v1/volumes/${objType}`)\r\n  },\r\n\r\n  volumes() {\r\n    return session.get('api/v2/volumes')\r\n  },\r\n\r\n  addFolder(parent_id, name, params = {}) {\r\n    return this.addItem(SubTypes.Folder, parent_id, name, params)\r\n  },\r\n\r\n  addGeneration(parent_id, name, original_id, version_number, params = {}) {\r\n    return this.addItem(SubTypes.Generation, parent_id, name, {\r\n      original_id,\r\n      version_number,\r\n      ...params,\r\n    })\r\n  },\r\n\r\n  nodes(dataid, params = {}) {\r\n    // https://developer.opentext.com/webaccess/#url=%2Fawd%2Fresources%2Fapis%2Fcs-rest-api-for-cs-16-s%23!%2Fnodes%2FgetSubnodes_get_15&tab=501\r\n    return session.get(`api/v2/nodes/${dataid}/nodes`, {\r\n      params,\r\n    })\r\n  },\r\n\r\n  children(dataid, params = {}) {\r\n    return this.nodes(dataid, params)\r\n  },\r\n\r\n  delete(dataid) {\r\n    return session.delete(`api/v1/nodes/${dataid}`)\r\n  },\r\n\r\n  download({ dataid, apiVersion = 'v1', filePath }) {\r\n    // session.nodes.download(1267501, 'v2', '/Users/chris/Downloads/test.pdf')\r\n    if (process.node) {\r\n      return session\r\n        .get(`api/${apiVersion}/nodes/${dataid}/content`, {\r\n          responseType: 'stream',\r\n        })\r\n        .then((response) => {\r\n          const fs = require('fs')\r\n          const writer = fs.createWriteStream(filePath)\r\n\r\n          response.data.pipe(writer)\r\n\r\n          return new Promise((resolve, reject) => {\r\n            writer.on('finish', resolve)\r\n            writer.on('error', reject)\r\n          })\r\n        })\r\n    } else {\r\n      return Promise.reject('Not implemented yet')\r\n    }\r\n  },\r\n\r\n  audit({ dataid, apiVersion = 'v2', params = {} }) {\r\n    return session.get(`api/${apiVersion}/nodes/${dataid}/audit`, { params })\r\n  },\r\n})\r\n","import get from 'lodash.get'\r\n\r\n// const get = require('lodash.get')\r\n\r\nexport default (session) => ({\r\n  start(map_id) {\r\n    return this.draftprocesses(map_id)\r\n      .then((response) => get(response, 'data.results.draftprocess_id'))\r\n      .then((draftprocess_id) => this.draftprocesses_update(draftprocess_id))\r\n  },\r\n\r\n  draftprocesses(workflow_id) {\r\n    return session.postForm('api/v2/draftprocesses', {\r\n      workflow_id,\r\n    })\r\n  },\r\n\r\n  draftprocesses_update(draftprocess_id) {\r\n    return session.get('api/v1/forms/draftprocesses/update', {\r\n      params: {\r\n        draftprocess_id,\r\n      },\r\n    })\r\n  },\r\n\r\n  draftprocesses_put(draftprocess_id, body) {\r\n    return session.putForm(`api/v2/draftprocesses/${draftprocess_id}`, {\r\n      body,\r\n    })\r\n  },\r\n\r\n  // draftprocesses_formUpdate(draftprocess_id, values) {\r\n  // const body = {\r\n  // action: \"formUpdate\",\r\n  // values\r\n  // }\r\n\r\n  // return this.draftprocesses_put(draftprocess_id, body)\r\n  // }\r\n})\r\n","export default (session) => ({\r\n  scriptNode(id, params = {}) {\r\n    return session.get(`api/v1/rhcore/${id}`, {\r\n      params,\r\n    })\r\n  },\r\n})\r\n","export default (session) => ({\n  // https://knowledge.opentext.com/knowledge/cs.dll/Open/67789539\n\n  search(where, params = {}) {\n    return session.postBody('api/v2/search', {\n      where,\n      ...params,\n    })\n  },\n\n  regions(params = {}) {\n    return session.get('api/v1/regions', params)\n  },\n})\n","export default (session) => ({\n  USER: 0,\n  GROUP: 1,\n\n  userQuery(query, options = {}, version = 'v2') {\n    const params = {\n      limit: 20,\n      where_type: JSON.stringify([this.USER, this.GROUP]),\n      query,\n      ...options,\n    }\n\n    return session.get(`api/${version}/members`, { params })\n  },\n\n  member(id, version = 'v2') {\n    return session.get(`api/${version}/members/${id}`)\n  },\n})\n","// const FormDataFactory = require('./form-data-factory')\r\n// const console.assert = require('console.assert')\r\n\r\nexport default (session) => ({\r\n  async addVersion({\r\n    dataid,\r\n    fileHandler,\r\n    apiVersion = 'v1',\r\n    fileName = null,\r\n    options = {},\r\n  }) {\r\n    console.assert(dataid != null, 'dataid cannot be null')\r\n    console.assert(fileHandler != null, 'fileHandler cannot be null')\r\n\r\n    const url = `api/${apiVersion}/nodes/${dataid}/versions`\r\n\r\n    if (process.node) {\r\n      // node.js\r\n      const fsp = require('fs').promises\r\n      const path = require('path')\r\n\r\n      const f = await fsp.readFile(fileHandler)\r\n      const name = fileName || path.basename(fileHandler)\r\n\r\n      const params = {\r\n        file: {\r\n          file: f,\r\n          name,\r\n        },\r\n        ...options,\r\n      }\r\n\r\n      // console.log(params)\r\n\r\n      return session.postForm(url, params)\r\n    } else {\r\n      // browser\r\n      const name = fileName || fileHandler.name\r\n\r\n      const params = {\r\n        file: {\r\n          file: fileHandler,\r\n          name,\r\n        },\r\n        ...options,\r\n      }\r\n\r\n      return session.postForm(url, params)\r\n\r\n      // formData.append('file', fileHandler, name)\r\n      // return session.post(url, formData)\r\n    }\r\n  },\r\n\r\n  async download({ dataid, version, filePath }) {\r\n    console.assert(dataid != null, 'dataid cannot be null')\r\n    console.assert(version != null, 'version cannot be null')\r\n    console.assert(filePath != null, 'filePath cannot be null')\r\n\r\n    if (process.node) {\r\n      return session\r\n        .get(`api/v1/nodes/${dataid}/versions/${version}/content`, {\r\n          responseType: 'stream',\r\n        })\r\n        .then((response) => {\r\n          const fs = require('fs')\r\n          const writer = fs.createWriteStream(filePath)\r\n\r\n          response.data.pipe(writer)\r\n\r\n          return new Promise((resolve, reject) => {\r\n            writer.on('finish', resolve)\r\n            writer.on('error', reject)\r\n          })\r\n        })\r\n    } else {\r\n      return Promise.reject('Not implemented yet')\r\n    }\r\n  },\r\n\r\n  async list(dataid) {\r\n    const url = `api/v1/nodes/${dataid}/versions`\r\n    return session.get(url)\r\n  },\r\n\r\n  async version(dataid, version_number = 'latest') {\r\n    // latest not supported in v2\r\n    const url = `api/v1/nodes/${dataid}/versions/${version_number}`\r\n    return session.get(url)\r\n  },\r\n\r\n  async promote({ dataid, versionNumber, description = null }) {\r\n    console.assert(dataid != null, 'dataid cannot be null')\r\n    console.assert(versionNumber != null, 'number_to_keep must be an integer')\r\n\r\n    const url = `api/v2/nodes/${dataid}/versions/${versionNumber}/promote`\r\n\r\n    return session.postBody(url, {\r\n      ...(!!description && {\r\n        description,\r\n      }),\r\n    })\r\n  },\r\n\r\n  async deleteVersion({ dataid, versionNumber, apiVersion = 'v1' }) {\r\n    console.assert(dataid != null, 'dataid cannot be null')\r\n    console.assert(versionNumber != null, 'number_to_keep must be an integer')\r\n\r\n    const url = `api/${apiVersion}/nodes/${dataid}/versions/${versionNumber}`\r\n\r\n    // careful with deleteForm or deleteBody\r\n    return session.delete(url)\r\n  },\r\n\r\n  async purge({ dataid, number_to_keep = 1 }) {\r\n    console.assert(dataid != null, 'dataid cannot be null')\r\n    console.assert(!isNaN(number_to_keep), 'number_to_keep must be an integer')\r\n\r\n    // delete parameters not supported\r\n    // https://stackoverflow.com/questions/51069552/axios-delete-request-with-body-and-headers\r\n    // number_to_keep is ignored\r\n\r\n    const url = `api/v2/nodes/${dataid}/versions`\r\n\r\n    return session.deleteForm(url, {\r\n      number_to_keep,\r\n    })\r\n  },\r\n})\r\n","export default (session) => ({\n  run(dataid, params = {}) {\n    const url = `api/v1/nodes/${dataid}/output`\n    return session.get(url, { params })\n  },\n})\n","import isObject from 'is-object'\n\nconst ErrorCodes = {\n  PARSEERROR: {\n    code: -32700,\n    message: 'Parse error',\n  },\n  INVALIDREQUEST: {\n    code: -32600,\n    message: 'Invalid Request',\n  },\n  METHODNOTFOUND: {\n    code: -32601,\n    message: 'Method not found',\n  },\n  INVALIDPARAMS: {\n    code: -32602,\n    message: 'Invalid params',\n  },\n  INTERNALERROR: {\n    code: -32603,\n    message: 'Internal error',\n  },\n}\n\n// -32000 to -32099 is reserved!\n\nclass CustomError extends Error {\n  code: any\n  data: any\n\n  constructor(\n    message = ErrorCodes.INTERNALERROR.message,\n    data = null,\n    code = ErrorCodes.INTERNALERROR.code\n  ) {\n    if (isObject(message)) {\n      super(message.message)\n      this.code = message.code\n      this.data = message.data\n    } else {\n      super(message)\n      this.code = code\n      this.data = data\n    }\n  }\n}\n\nexport { CustomError, ErrorCodes }\n","import { CustomError } from './error-codes'\n\nimport get from 'lodash.get'\nimport Session from '../Session'\n\n// to be tested...\nconst sequence = {\n  index: 0,\n  get next(): number {\n    this.index = this.index + 1\n    return this.index\n  },\n}\n\ntype requestObjectType = {\n  jsonrpc: string\n  method: string\n  id: number\n  params: Record<string, any> | Array<any>\n}\n\nexport default class RPCClient {\n  session: Session\n  baseURL: string\n  _batchQueue: Array<requestObjectType>\n\n  constructor(session: Session, baseURL: string) {\n    this.session = session\n    this.baseURL = baseURL\n    this.resetQueue()\n  }\n\n  requestObject(\n    method: string,\n    params: Record<string, any> | Array<any>,\n    id: number\n  ): requestObjectType {\n    return {\n      jsonrpc: '2.0',\n      method,\n      id,\n      params,\n    }\n  }\n\n  handleResponse(data) {\n    if (Object.prototype.hasOwnProperty.call(data, 'result')) {\n      return data.result\n    } else if (Object.prototype.hasOwnProperty.call(data, 'error')) {\n      const err = data.error\n      throw new CustomError(err.message, err.data, err.code)\n    } else {\n      throw Error('The server did not respond correctly.')\n    }\n  }\n\n  // https://www.jsonrpc.org/specification#request_object\n  // params is allowed to be null!\n  // also on queue function below\n  async request(method, params, id = sequence.next) {\n    const response = await this.session.postBody(this.baseURL, {\n      rpc: this.requestObject(method, params, id),\n    })\n    // console.log(response)\n    return this.handleResponse(response.data)\n  }\n\n  resetQueue(): void {\n    this._batchQueue = []\n  }\n\n  queue(method: string, params, id: number = sequence.next) {\n    this._batchQueue.push(this.requestObject(method, params, id))\n    return this\n  }\n\n  async batch(throwOnError: boolean = false) {\n    const queue = this._batchQueue\n    this.resetQueue()\n    const response = await this.session.postBody(this.baseURL, {\n      rpc: queue,\n    })\n\n    return get(response, 'data.data', []).map((item) => {\n      if (throwOnError) {\n        return this.handleResponse(item)\n      } else {\n        try {\n          return this.handleResponse(item)\n        } catch (e) {\n          return e\n        }\n      }\n    })\n  }\n\n  rhnode(dataid, method, args = [], id = sequence.next) {\n    const params = {\n      dataid,\n      args,\n    }\n\n    return this.request(method, params, id)\n  }\n\n  rhnodeQueue(dataid, method, args = [], id = sequence.next) {\n    const params = {\n      dataid,\n      args,\n    }\n\n    return this.queue(method, params, id)\n  }\n}\n","import dataTypesEnum from './data-types-enum.json' // assert { type: 'json' }\r\n\r\n// const dataTypesEnum = {}\r\nimport FormDataFactory from './handlers/form-data-factory'\r\nimport axiosFactory from './axios-factory'\r\n\r\nimport auth from './handlers/auth.js'\r\nimport nodes from './handlers/nodes'\r\nimport workflow from './handlers/workflow'\r\nimport rhcore from './handlers/rhcore'\r\nimport search from './handlers/search'\r\nimport members from './handlers/members'\r\nimport versions from './handlers/versions'\r\nimport webreports from './handlers/webreports'\r\n\r\nimport isnil from 'lodash.isnil'\r\nimport RPCClient from './rpc-client/index'\r\n\r\n// const FormDataFactory = require('./handlers/form-data-factory')\r\nexport default class Session {\r\n  axios: any\r\n  _nodes: any\r\n  _auth: any\r\n  _workflow: any\r\n  _rhcore: any\r\n  _members: any\r\n  _search: any\r\n  _webreports: any\r\n  _versions: any\r\n\r\n  constructor(options) {\r\n    this.axios = axiosFactory(options)\r\n  }\r\n\r\n  get nodes() {\r\n    // this creates a circular reference.. bad?\r\n    if (this._nodes == null) {\r\n      this._nodes = nodes(this)\r\n    }\r\n\r\n    return this._nodes\r\n  }\r\n\r\n  get auth() {\r\n    if (this._auth == null) {\r\n      this._auth = auth(this)\r\n    }\r\n\r\n    return this._auth\r\n  }\r\n\r\n  get workflow() {\r\n    // this creates a circular reference.. bad?\r\n    if (this._workflow == null) {\r\n      this._workflow = workflow(this)\r\n    }\r\n\r\n    return this._workflow\r\n  }\r\n\r\n  get rhcore() {\r\n    // this creates a circular reference.. bad?\r\n    if (this._rhcore == null) {\r\n      this._rhcore = rhcore(this)\r\n    }\r\n\r\n    return this._rhcore\r\n  }\r\n\r\n  get members() {\r\n    // this creates a circular reference.. bad?\r\n    if (this._members == null) {\r\n      this._members = members(this)\r\n    }\r\n\r\n    return this._members\r\n  }\r\n\r\n  get search() {\r\n    // this creates a circular reference.. bad?\r\n    if (this._search == null) {\r\n      this._search = search(this)\r\n    }\r\n\r\n    return this._search\r\n  }\r\n\r\n  get webreports() {\r\n    // this creates a circular reference.. bad?\r\n    if (this._webreports == null) {\r\n      this._webreports = webreports(this)\r\n    }\r\n\r\n    return this._webreports\r\n  }\r\n\r\n  get versions() {\r\n    // this creates a circular reference.. bad?\r\n    if (this._versions == null) {\r\n      this._versions = versions(this)\r\n    }\r\n\r\n    return this._versions\r\n  }\r\n\r\n  get dataTypesEnum() {\r\n    return dataTypesEnum\r\n  }\r\n\r\n  rpcClient(baseURL = '/api/v1/rh/rpc/rhnode/') {\r\n    return new RPCClient(this, baseURL)\r\n  }\r\n\r\n  _isObject(value) {\r\n    return value && typeof value === 'object' && value.constructor === Object\r\n  }\r\n\r\n  _isString(value) {\r\n    return typeof value === 'string' || value instanceof String\r\n  }\r\n\r\n  _isBoolean(value): boolean {\r\n    return typeof value === 'boolean'\r\n  }\r\n\r\n  objectToForm(obj: Record<string, any>) {\r\n    const formData = FormDataFactory.createFormData()\r\n\r\n    for (const [key, value] of Object.entries(obj)) {\r\n      if (value && value.name && value.file) {\r\n        formData.append(key, value.file, value.name)\r\n      } else if (\r\n        Array.isArray(value) ||\r\n        this._isObject(value) ||\r\n        this._isBoolean(value)\r\n      ) {\r\n        formData.append(key, JSON.stringify(value))\r\n      } else if (!isnil(value)) {\r\n        // should empty strings be sent?\r\n        formData.append(key, value)\r\n      }\r\n    }\r\n\r\n    return formData\r\n  }\r\n\r\n  get(...args) {\r\n    return this.axios.get(...args)\r\n  }\r\n\r\n  putForm(url, params) {\r\n    const formData = this.objectToForm(params)\r\n    return process.node\r\n      ? this.put(url, formData.getBuffer(), {\r\n          headers: formData.getHeaders(),\r\n        })\r\n      : this.put(url, formData)\r\n  }\r\n\r\n  postForm(url, params) {\r\n    const formData = this.objectToForm(params)\r\n    return process.node\r\n      ? this.post(url, formData.getBuffer(), {\r\n          headers: formData.getHeaders(),\r\n          maxBodyLength: Infinity,\r\n        })\r\n      : this.post(url, formData, {\r\n          maxBodyLength: Infinity,\r\n        })\r\n  }\r\n\r\n  patchForm(url, params) {\r\n    const formData = this.objectToForm(params)\r\n    return process.node\r\n      ? this.patch(url, formData.getBuffer(), {\r\n          headers: formData.getHeaders(),\r\n        })\r\n      : this.patch(url, formData)\r\n  }\r\n\r\n  deleteForm(url, params) {\r\n    // FormData does not working on Delete!!\r\n    // See here: https://stackoverflow.com/questions/51069552/axios-delete-request-with-body-and-headers\r\n    const formData = this.objectToForm(params)\r\n    return process.node\r\n      ? this.delete(url, formData.getBuffer(), {\r\n          headers: formData.getHeaders(),\r\n        })\r\n      : this.delete(url, formData)\r\n  }\r\n\r\n  putBody(url, body) {\r\n    return this.putForm(url, {\r\n      body,\r\n    })\r\n  }\r\n\r\n  postBody(url, body) {\r\n    return this.postForm(url, {\r\n      body,\r\n    })\r\n  }\r\n\r\n  patchBody(url, body) {\r\n    return this.patchForm(url, {\r\n      body,\r\n    })\r\n  }\r\n\r\n  deleteBody(url, body) {\r\n    return this.deleteForm(url, {\r\n      body,\r\n    })\r\n  }\r\n\r\n  post(...args) {\r\n    return this.axios.post(...args)\r\n  }\r\n\r\n  put(...args) {\r\n    return this.axios.put(...args)\r\n  }\r\n\r\n  delete(...args) {\r\n    return this.axios.delete(...args)\r\n  }\r\n\r\n  options(...args) {\r\n    return this.axios.options(...args)\r\n  }\r\n\r\n  patch(...args) {\r\n    return this.axios.patch(...args)\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}