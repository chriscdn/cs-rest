{"version":3,"file":"index.umd.min.js","sources":["../src/handlers/form-data-factory.ts","../src/axios-factory.ts","../src/handlers/auth.ts","../src/handlers/nodes.ts","../src/handlers/workflow.ts","../src/handlers/members.ts","../src/rpc-client/error-codes.ts","../src/rpc-client/index.ts","../src/Session.ts","../src/handlers/rhcore.ts","../src/handlers/search.ts","../src/handlers/webreports.ts","../src/handlers/versions.ts"],"sourcesContent":["export default {\n  createFormData() {\n    if (process.node) {\n      const Klass = require('form-data')\n      return new Klass()\n    } else {\n      return new FormData()\n    }\n  },\n}\n","// const get = require('lodash.get')\nimport FormDataFactory from './handlers/form-data-factory'\n\nimport axios from 'axios'\nimport get from 'lodash.get'\n\nfunction getInstance(options) {\n  const instance = axios.create(options)\n\n  instance.interceptors.response.use(\n    (response) => {\n      const otcsticket = get(response, 'headers.otcsticket')\n\n      if (otcsticket) {\n        instance.defaults.headers.common.OTCSTicket = otcsticket\n      }\n      return response\n    },\n    (error) => {\n      return Promise.reject(error)\n    }\n  )\n\n  return instance\n}\n\nfunction axiosFactory(options) {\n  const instance = getInstance(options)\n\n  const username = get(options, 'username')\n  const password = get(options, 'password')\n  const otcsticket = get(options, 'otcsticket')\n\n  if (otcsticket) {\n    instance.defaults.headers.common.OTCSTicket = otcsticket\n  } else if (username && password) {\n    instance.interceptors.request.use(async (request) => {\n      if (request.headers.common.OTCSTicket) {\n        return request\n      } else {\n        const formData = FormDataFactory.createFormData()\n\n        formData.append('username', username)\n        formData.append('password', password)\n\n        const response = process.node\n          ? await axios.post(\n              `${options.baseURL}/api/v1/auth/`,\n              formData.getBuffer(),\n              { headers: formData.getHeaders() }\n            )\n          : await axios.post(`${options.baseURL}/api/v1/auth/`, formData)\n\n        request.headers.common.OTCSTicket = get(response, 'data.ticket')\n\n        return request\n      }\n    })\n  } else {\n    throw Error('You must provide an otcsticket or username and password.')\n  }\n\n  return instance\n}\n\nexport default axiosFactory\n","// const FormDataFactory = require('./form-data-factory')\n\nexport default (session) => ({\n  auth() {\n    return session.get('/api/v1/auth/')\n  },\n})\n","import SubTypes from './subtypes.json'\r\n\r\nexport default (session) => ({\r\n  addablenodetypes(dataid) {\r\n    return session.get(`api/v1/nodes/${dataid}/addablenodetypes`)\r\n  },\r\n\r\n  async addDocument({\r\n    parent_id,\r\n    fileHandler,\r\n    apiVersion = 'v1', // v1 or v2\r\n    name = null,\r\n    options = {},\r\n  }) {\r\n    console.assert(parent_id != null, 'parent_id cannot be null')\r\n    console.assert(fileHandler != null, 'fileHandler cannot be null')\r\n    console.assert(\r\n      ['v1', 'v2'].includes(apiVersion),\r\n      \"apiVersion must be in ['v1','v2']\"\r\n    )\r\n\r\n    const url = `api/${apiVersion}/nodes`\r\n\r\n    if (process.node) {\r\n      // node.js\r\n      const fsp = require('fs').promises\r\n      const path = require('path')\r\n\r\n      const f = await fsp.readFile(fileHandler)\r\n      const csName = name || path.basename(fileHandler)\r\n\r\n      const params = {\r\n        ...options,\r\n        type: SubTypes.Document,\r\n        name: csName,\r\n        parent_id,\r\n        file: {\r\n          file: f,\r\n          name: csName,\r\n        },\r\n      }\r\n\r\n      return session.postForm(url, params)\r\n    } else {\r\n      // browser\r\n      const csName = name || fileHandler.name\r\n\r\n      const params = {\r\n        ...options,\r\n        type: SubTypes.Document,\r\n        name: csName,\r\n        parent_id,\r\n        file: {\r\n          file: fileHandler,\r\n          name: csName,\r\n        },\r\n      }\r\n\r\n      return session.postForm(url, params)\r\n    }\r\n  },\r\n\r\n  async addDocumentMajor({\r\n    parent_id,\r\n    fileHandler,\r\n    name = null,\r\n    description = null,\r\n    options = {},\r\n  }) {\r\n    const response = await this.addDocument({\r\n      parent_id,\r\n      fileHandler,\r\n      name,\r\n      options: {\r\n        ...options,\r\n        advanced_versioning: true,\r\n      },\r\n    })\r\n\r\n    const dataid = response.data.id\r\n\r\n    await session.versions.promote({\r\n      dataid,\r\n      versionNumber: 1,\r\n      description,\r\n    })\r\n\r\n    await session.versions.deleteVersion({\r\n      dataid,\r\n      versionNumber: 1,\r\n    })\r\n\r\n    return response\r\n  },\r\n\r\n  addItem(type, parent_id, name, params = {}) {\r\n    return session.postBody('api/v2/nodes', {\r\n      type,\r\n      parent_id,\r\n      name,\r\n      ...params,\r\n    })\r\n  },\r\n\r\n  node({ dataid, apiVersion = 'v2', params = {} }) {\r\n    return session.get(`api/${apiVersion}/nodes/${dataid}`, {\r\n      params,\r\n    })\r\n  },\r\n\r\n  ancestors(dataid, params = {}) {\r\n    return session.get(`api/v1/nodes/${dataid}/ancestors`, {\r\n      params,\r\n    })\r\n  },\r\n\r\n  volumeInfo(objType) {\r\n    return session.get(`api/v1/volumes/${objType}`)\r\n  },\r\n\r\n  volumes() {\r\n    return session.get('api/v2/volumes')\r\n  },\r\n\r\n  addFolder(parent_id, name, params = {}) {\r\n    return this.addItem(SubTypes.Folder, parent_id, name, params)\r\n  },\r\n\r\n  addGeneration(parent_id, name, original_id, version_number, params = {}) {\r\n    return this.addItem(SubTypes.Generation, parent_id, name, {\r\n      original_id,\r\n      version_number,\r\n      ...params,\r\n    })\r\n  },\r\n\r\n  nodes(dataid, params = {}) {\r\n    // https://developer.opentext.com/webaccess/#url=%2Fawd%2Fresources%2Fapis%2Fcs-rest-api-for-cs-16-s%23!%2Fnodes%2FgetSubnodes_get_15&tab=501\r\n    return session.get(`api/v2/nodes/${dataid}/nodes`, {\r\n      params,\r\n    })\r\n  },\r\n\r\n  children(dataid, params = {}) {\r\n    return this.nodes(dataid, params)\r\n  },\r\n\r\n  delete(dataid) {\r\n    return session.delete(`api/v1/nodes/${dataid}`)\r\n  },\r\n\r\n  download({ dataid, apiVersion = 'v1', filePath }) {\r\n    // session.nodes.download(1267501, 'v2', '/Users/chris/Downloads/test.pdf')\r\n    if (process.node) {\r\n      return session\r\n        .get(`api/${apiVersion}/nodes/${dataid}/content`, {\r\n          responseType: 'stream',\r\n        })\r\n        .then((response) => {\r\n          const fs = require('fs')\r\n          const writer = fs.createWriteStream(filePath)\r\n\r\n          response.data.pipe(writer)\r\n\r\n          return new Promise((resolve, reject) => {\r\n            writer.on('finish', resolve)\r\n            writer.on('error', reject)\r\n          })\r\n        })\r\n    } else {\r\n      return Promise.reject('Not implemented yet')\r\n    }\r\n  },\r\n\r\n  audit({ dataid, apiVersion = 'v2', params = {} }) {\r\n    return session.get(`api/${apiVersion}/nodes/${dataid}/audit`, { params })\r\n  },\r\n})\r\n","import get from 'lodash.get'\r\n\r\n// const get = require('lodash.get')\r\n\r\nexport default (session) => ({\r\n  start(map_id) {\r\n    return this.draftprocesses(map_id)\r\n      .then((response) => get(response, 'data.results.draftprocess_id'))\r\n      .then((draftprocess_id) => this.draftprocesses_update(draftprocess_id))\r\n  },\r\n\r\n  draftprocesses(workflow_id) {\r\n    return session.postForm('api/v2/draftprocesses', {\r\n      workflow_id,\r\n    })\r\n  },\r\n\r\n  draftprocesses_update(draftprocess_id) {\r\n    return session.get('api/v1/forms/draftprocesses/update', {\r\n      params: {\r\n        draftprocess_id,\r\n      },\r\n    })\r\n  },\r\n\r\n  draftprocesses_put(draftprocess_id, body) {\r\n    return session.putForm(`api/v2/draftprocesses/${draftprocess_id}`, {\r\n      body,\r\n    })\r\n  },\r\n\r\n  // draftprocesses_formUpdate(draftprocess_id, values) {\r\n  // const body = {\r\n  // action: \"formUpdate\",\r\n  // values\r\n  // }\r\n\r\n  // return this.draftprocesses_put(draftprocess_id, body)\r\n  // }\r\n})\r\n","export default (session) => ({\n  USER: 0,\n  GROUP: 1,\n\n  userQuery(query, options = {}, version = 'v2') {\n    const params = {\n      limit: 20,\n      where_type: JSON.stringify([this.USER, this.GROUP]),\n      query,\n      ...options,\n    }\n\n    return session.get(`api/${version}/members`, { params })\n  },\n\n  member(id, version = 'v2') {\n    return session.get(`api/${version}/members/${id}`)\n  },\n})\n","import isObject from 'is-object'\n\nconst ErrorCodes = {\n  PARSEERROR: {\n    code: -32700,\n    message: 'Parse error',\n  },\n  INVALIDREQUEST: {\n    code: -32600,\n    message: 'Invalid Request',\n  },\n  METHODNOTFOUND: {\n    code: -32601,\n    message: 'Method not found',\n  },\n  INVALIDPARAMS: {\n    code: -32602,\n    message: 'Invalid params',\n  },\n  INTERNALERROR: {\n    code: -32603,\n    message: 'Internal error',\n  },\n}\n\n// -32000 to -32099 is reserved!\n\nclass CustomError extends Error {\n  code: any\n  data: any\n\n  constructor(\n    message = ErrorCodes.INTERNALERROR.message,\n    data = null,\n    code = ErrorCodes.INTERNALERROR.code\n  ) {\n    if (isObject(message)) {\n      super(message.message)\n      this.code = message.code\n      this.data = message.data\n    } else {\n      super(message)\n      this.code = code\n      this.data = data\n    }\n  }\n}\n\nexport { CustomError, ErrorCodes }\n","import { CustomError } from './error-codes'\n\nimport get from 'lodash.get'\nimport Session from '../Session'\n\n// to be tested...\nconst sequence = {\n  index: 0,\n  get next(): number {\n    this.index = this.index + 1\n    return this.index\n  },\n}\n\ntype requestObjectType = {\n  jsonrpc: string\n  method: string\n  id: number\n  params: Record<string, any> | Array<any>\n}\n\nexport default class RPCClient {\n  session: Session\n  baseURL: string\n  _batchQueue: Array<requestObjectType>\n\n  constructor(session: Session, baseURL: string) {\n    this.session = session\n    this.baseURL = baseURL\n    this.resetQueue()\n  }\n\n  requestObject(\n    method: string,\n    params: Record<string, any> | Array<any>,\n    id: number\n  ): requestObjectType {\n    return {\n      jsonrpc: '2.0',\n      method,\n      id,\n      params,\n    }\n  }\n\n  handleResponse(data) {\n    if (Object.prototype.hasOwnProperty.call(data, 'result')) {\n      return data.result\n    } else if (Object.prototype.hasOwnProperty.call(data, 'error')) {\n      const err = data.error\n      throw new CustomError(err.message, err.data, err.code)\n    } else {\n      throw Error('The server did not respond correctly.')\n    }\n  }\n\n  // https://www.jsonrpc.org/specification#request_object\n  // params is allowed to be null!\n  // also on queue function below\n  async request(method, params, id = sequence.next) {\n    const response = await this.session.postBody(this.baseURL, {\n      rpc: this.requestObject(method, params, id),\n    })\n    // console.log(response)\n    return this.handleResponse(response.data)\n  }\n\n  resetQueue(): void {\n    this._batchQueue = []\n  }\n\n  queue(method: string, params, id: number = sequence.next) {\n    this._batchQueue.push(this.requestObject(method, params, id))\n    return this\n  }\n\n  async batch(throwOnError: boolean = false) {\n    const queue = this._batchQueue\n    this.resetQueue()\n    const response = await this.session.postBody(this.baseURL, {\n      rpc: queue,\n    })\n\n    return get(response, 'data.data', []).map((item) => {\n      if (throwOnError) {\n        return this.handleResponse(item)\n      } else {\n        try {\n          return this.handleResponse(item)\n        } catch (e) {\n          return e\n        }\n      }\n    })\n  }\n\n  rhnode(dataid, method, args = [], id = sequence.next) {\n    const params = {\n      dataid,\n      args,\n    }\n\n    return this.request(method, params, id)\n  }\n\n  rhnodeQueue(dataid, method, args = [], id = sequence.next) {\n    const params = {\n      dataid,\n      args,\n    }\n\n    return this.queue(method, params, id)\n  }\n}\n","import dataTypesEnum from './data-types-enum.json' // assert { type: 'json' }\r\n\r\n// const dataTypesEnum = {}\r\nimport FormDataFactory from './handlers/form-data-factory'\r\nimport axiosFactory from './axios-factory'\r\n\r\nimport auth from './handlers/auth.js'\r\nimport nodes from './handlers/nodes'\r\nimport workflow from './handlers/workflow'\r\nimport rhcore from './handlers/rhcore'\r\nimport search from './handlers/search'\r\nimport members from './handlers/members'\r\nimport versions from './handlers/versions'\r\nimport webreports from './handlers/webreports'\r\n\r\nimport isnil from 'lodash.isnil'\r\nimport RPCClient from './rpc-client/index'\r\n\r\n// const FormDataFactory = require('./handlers/form-data-factory')\r\nexport default class Session {\r\n  axios: any\r\n  _nodes: any\r\n  _auth: any\r\n  _workflow: any\r\n  _rhcore: any\r\n  _members: any\r\n  _search: any\r\n  _webreports: any\r\n  _versions: any\r\n\r\n  constructor(options) {\r\n    this.axios = axiosFactory(options)\r\n  }\r\n\r\n  get nodes() {\r\n    // this creates a circular reference.. bad?\r\n    if (this._nodes == null) {\r\n      this._nodes = nodes(this)\r\n    }\r\n\r\n    return this._nodes\r\n  }\r\n\r\n  get auth() {\r\n    if (this._auth == null) {\r\n      this._auth = auth(this)\r\n    }\r\n\r\n    return this._auth\r\n  }\r\n\r\n  get workflow() {\r\n    // this creates a circular reference.. bad?\r\n    if (this._workflow == null) {\r\n      this._workflow = workflow(this)\r\n    }\r\n\r\n    return this._workflow\r\n  }\r\n\r\n  get rhcore() {\r\n    // this creates a circular reference.. bad?\r\n    if (this._rhcore == null) {\r\n      this._rhcore = rhcore(this)\r\n    }\r\n\r\n    return this._rhcore\r\n  }\r\n\r\n  get members() {\r\n    // this creates a circular reference.. bad?\r\n    if (this._members == null) {\r\n      this._members = members(this)\r\n    }\r\n\r\n    return this._members\r\n  }\r\n\r\n  get search() {\r\n    // this creates a circular reference.. bad?\r\n    if (this._search == null) {\r\n      this._search = search(this)\r\n    }\r\n\r\n    return this._search\r\n  }\r\n\r\n  get webreports() {\r\n    // this creates a circular reference.. bad?\r\n    if (this._webreports == null) {\r\n      this._webreports = webreports(this)\r\n    }\r\n\r\n    return this._webreports\r\n  }\r\n\r\n  get versions() {\r\n    // this creates a circular reference.. bad?\r\n    if (this._versions == null) {\r\n      this._versions = versions(this)\r\n    }\r\n\r\n    return this._versions\r\n  }\r\n\r\n  get dataTypesEnum() {\r\n    return dataTypesEnum\r\n  }\r\n\r\n  rpcClient(baseURL = '/api/v1/rh/rpc/rhnode/') {\r\n    return new RPCClient(this, baseURL)\r\n  }\r\n\r\n  _isObject(value) {\r\n    return value && typeof value === 'object' && value.constructor === Object\r\n  }\r\n\r\n  _isString(value) {\r\n    return typeof value === 'string' || value instanceof String\r\n  }\r\n\r\n  _isBoolean(value): boolean {\r\n    return typeof value === 'boolean'\r\n  }\r\n\r\n  objectToForm(obj: Record<string, any>) {\r\n    const formData = FormDataFactory.createFormData()\r\n\r\n    for (const [key, value] of Object.entries(obj)) {\r\n      if (value && value.name && value.file) {\r\n        formData.append(key, value.file, value.name)\r\n      } else if (\r\n        Array.isArray(value) ||\r\n        this._isObject(value) ||\r\n        this._isBoolean(value)\r\n      ) {\r\n        formData.append(key, JSON.stringify(value))\r\n      } else if (!isnil(value)) {\r\n        // should empty strings be sent?\r\n        formData.append(key, value)\r\n      }\r\n    }\r\n\r\n    return formData\r\n  }\r\n\r\n  get(...args) {\r\n    return this.axios.get(...args)\r\n  }\r\n\r\n  putForm(url, params) {\r\n    const formData = this.objectToForm(params)\r\n    return process.node\r\n      ? this.put(url, formData.getBuffer(), {\r\n          headers: formData.getHeaders(),\r\n        })\r\n      : this.put(url, formData)\r\n  }\r\n\r\n  postForm(url, params) {\r\n    const formData = this.objectToForm(params)\r\n    return process.node\r\n      ? this.post(url, formData.getBuffer(), {\r\n          headers: formData.getHeaders(),\r\n          maxBodyLength: Infinity,\r\n        })\r\n      : this.post(url, formData, {\r\n          maxBodyLength: Infinity,\r\n        })\r\n  }\r\n\r\n  patchForm(url, params) {\r\n    const formData = this.objectToForm(params)\r\n    return process.node\r\n      ? this.patch(url, formData.getBuffer(), {\r\n          headers: formData.getHeaders(),\r\n        })\r\n      : this.patch(url, formData)\r\n  }\r\n\r\n  deleteForm(url, params) {\r\n    // FormData does not working on Delete!!\r\n    // See here: https://stackoverflow.com/questions/51069552/axios-delete-request-with-body-and-headers\r\n    const formData = this.objectToForm(params)\r\n    return process.node\r\n      ? this.delete(url, formData.getBuffer(), {\r\n          headers: formData.getHeaders(),\r\n        })\r\n      : this.delete(url, formData)\r\n  }\r\n\r\n  putBody(url, body) {\r\n    return this.putForm(url, {\r\n      body,\r\n    })\r\n  }\r\n\r\n  postBody(url, body) {\r\n    return this.postForm(url, {\r\n      body,\r\n    })\r\n  }\r\n\r\n  patchBody(url, body) {\r\n    return this.patchForm(url, {\r\n      body,\r\n    })\r\n  }\r\n\r\n  deleteBody(url, body) {\r\n    return this.deleteForm(url, {\r\n      body,\r\n    })\r\n  }\r\n\r\n  post(...args) {\r\n    return this.axios.post(...args)\r\n  }\r\n\r\n  put(...args) {\r\n    return this.axios.put(...args)\r\n  }\r\n\r\n  delete(...args) {\r\n    return this.axios.delete(...args)\r\n  }\r\n\r\n  options(...args) {\r\n    return this.axios.options(...args)\r\n  }\r\n\r\n  patch(...args) {\r\n    return this.axios.patch(...args)\r\n  }\r\n}\r\n","export default (session) => ({\r\n  scriptNode(id, params = {}) {\r\n    return session.get(`api/v1/rhcore/${id}`, {\r\n      params,\r\n    })\r\n  },\r\n})\r\n","export default (session) => ({\n  // https://knowledge.opentext.com/knowledge/cs.dll/Open/67789539\n\n  search(where, params = {}) {\n    return session.postBody('api/v2/search', {\n      where,\n      ...params,\n    })\n  },\n\n  regions(params = {}) {\n    return session.get('api/v1/regions', params)\n  },\n})\n","export default (session) => ({\n  run(dataid, params = {}) {\n    const url = `api/v1/nodes/${dataid}/output`\n    return session.get(url, { params })\n  },\n})\n","// const FormDataFactory = require('./form-data-factory')\r\n// const console.assert = require('console.assert')\r\n\r\nexport default (session) => ({\r\n  async addVersion({\r\n    dataid,\r\n    fileHandler,\r\n    apiVersion = 'v1',\r\n    fileName = null,\r\n    options = {},\r\n  }) {\r\n    console.assert(dataid != null, 'dataid cannot be null')\r\n    console.assert(fileHandler != null, 'fileHandler cannot be null')\r\n\r\n    const url = `api/${apiVersion}/nodes/${dataid}/versions`\r\n\r\n    if (process.node) {\r\n      // node.js\r\n      const fsp = require('fs').promises\r\n      const path = require('path')\r\n\r\n      const f = await fsp.readFile(fileHandler)\r\n      const name = fileName || path.basename(fileHandler)\r\n\r\n      const params = {\r\n        file: {\r\n          file: f,\r\n          name,\r\n        },\r\n        ...options,\r\n      }\r\n\r\n      // console.log(params)\r\n\r\n      return session.postForm(url, params)\r\n    } else {\r\n      // browser\r\n      const name = fileName || fileHandler.name\r\n\r\n      const params = {\r\n        file: {\r\n          file: fileHandler,\r\n          name,\r\n        },\r\n        ...options,\r\n      }\r\n\r\n      return session.postForm(url, params)\r\n\r\n      // formData.append('file', fileHandler, name)\r\n      // return session.post(url, formData)\r\n    }\r\n  },\r\n\r\n  async download({ dataid, version, filePath }) {\r\n    console.assert(dataid != null, 'dataid cannot be null')\r\n    console.assert(version != null, 'version cannot be null')\r\n    console.assert(filePath != null, 'filePath cannot be null')\r\n\r\n    if (process.node) {\r\n      return session\r\n        .get(`api/v1/nodes/${dataid}/versions/${version}/content`, {\r\n          responseType: 'stream',\r\n        })\r\n        .then((response) => {\r\n          const fs = require('fs')\r\n          const writer = fs.createWriteStream(filePath)\r\n\r\n          response.data.pipe(writer)\r\n\r\n          return new Promise((resolve, reject) => {\r\n            writer.on('finish', resolve)\r\n            writer.on('error', reject)\r\n          })\r\n        })\r\n    } else {\r\n      return Promise.reject('Not implemented yet')\r\n    }\r\n  },\r\n\r\n  async list(dataid) {\r\n    const url = `api/v1/nodes/${dataid}/versions`\r\n    return session.get(url)\r\n  },\r\n\r\n  async version(dataid, version_number = 'latest') {\r\n    // latest not supported in v2\r\n    const url = `api/v1/nodes/${dataid}/versions/${version_number}`\r\n    return session.get(url)\r\n  },\r\n\r\n  async promote({ dataid, versionNumber, description = null }) {\r\n    console.assert(dataid != null, 'dataid cannot be null')\r\n    console.assert(versionNumber != null, 'number_to_keep must be an integer')\r\n\r\n    const url = `api/v2/nodes/${dataid}/versions/${versionNumber}/promote`\r\n\r\n    return session.postBody(url, {\r\n      ...(!!description && {\r\n        description,\r\n      }),\r\n    })\r\n  },\r\n\r\n  async deleteVersion({ dataid, versionNumber, apiVersion = 'v1' }) {\r\n    console.assert(dataid != null, 'dataid cannot be null')\r\n    console.assert(versionNumber != null, 'number_to_keep must be an integer')\r\n\r\n    const url = `api/${apiVersion}/nodes/${dataid}/versions/${versionNumber}`\r\n\r\n    // careful with deleteForm or deleteBody\r\n    return session.delete(url)\r\n  },\r\n\r\n  async purge({ dataid, number_to_keep = 1 }) {\r\n    console.assert(dataid != null, 'dataid cannot be null')\r\n    console.assert(!isNaN(number_to_keep), 'number_to_keep must be an integer')\r\n\r\n    // delete parameters not supported\r\n    // https://stackoverflow.com/questions/51069552/axios-delete-request-with-body-and-headers\r\n    // number_to_keep is ignored\r\n\r\n    const url = `api/v2/nodes/${dataid}/versions`\r\n\r\n    return session.deleteForm(url, {\r\n      number_to_keep,\r\n    })\r\n  },\r\n})\r\n"],"names":["FormDataFactory","createFormData","FormData","axiosFactory","options","instance","axios","create","interceptors","response","use","otcsticket","get","defaults","headers","common","OTCSTicket","error","Promise","reject","getInstance","username","password","Error","request","async","formData","append","post","baseURL","nodes","session","addablenodetypes","dataid","parent_id","fileHandler","apiVersion","name","console","assert","includes","url","csName","params","type","SubTypes","file","postForm","description","this","addDocument","advanced_versioning","data","id","versions","promote","versionNumber","deleteVersion","addItem","postBody","node","ancestors","volumeInfo","objType","volumes","addFolder","addGeneration","original_id","version_number","children","delete","download","filePath","audit","workflow","start","map_id","draftprocesses","then","draftprocess_id","draftprocesses_update","workflow_id","draftprocesses_put","body","putForm","members","USER","GROUP","userQuery","query","version","limit","where_type","JSON","stringify","member","ErrorCodes","code","message","CustomError","constructor","isObject","super","sequence","index","next","RPCClient","_batchQueue","resetQueue","requestObject","method","jsonrpc","handleResponse","Object","prototype","hasOwnProperty","call","result","err","rpc","queue","push","throwOnError","map","item","e","rhnode","args","rhnodeQueue","_nodes","_auth","_workflow","_rhcore","_members","_search","_webreports","_versions","auth","rhcore","scriptNode","search","where","regions","webreports","run","fileName","number_to_keep","isNaN","deleteForm","dataTypesEnum","rpcClient","_isObject","value","_isString","String","_isBoolean","objectToForm","obj","key","entries","Array","isArray","isnil","put","maxBodyLength","Infinity","patchForm","patch","putBody","patchBody","deleteBody"],"mappings":"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"}