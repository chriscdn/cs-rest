{"version":3,"file":"cs-rest.cjs","sources":["../src/rpc-client/error-codes.ts","../src/utils/data-types-enum.ts","../src/rpc-client/index.ts","../src/utils/axios-factory.ts","../src/utils/subtypes-enum.ts","../src/handlers/service-abstract.ts","../src/handlers/auth.ts","../src/utils/is-node.ts","../src/handlers/nodes.ts","../src/utils/workflow-initiator.ts","../src/handlers/workflow.ts","../src/handlers/rhcore.ts","../src/handlers/search.ts","../src/handlers/members.ts","../src/handlers/versions.ts","../src/handlers/webreports.ts","../src/Session.ts","../src/index.ts"],"sourcesContent":["import isObject from \"is-object\";\n\nconst ErrorCodes = {\n  PARSEERROR: {\n    code: -32700,\n    message: \"Parse error\",\n  },\n  INVALIDREQUEST: {\n    code: -32600,\n    message: \"Invalid Request\",\n  },\n  METHODNOTFOUND: {\n    code: -32601,\n    message: \"Method not found\",\n  },\n  INVALIDPARAMS: {\n    code: -32602,\n    message: \"Invalid params\",\n  },\n  INTERNALERROR: {\n    code: -32603,\n    message: \"Internal error\",\n  },\n} as const;\n\ntype ErrorMessage = {\n  message: string;\n  code: number;\n  data: Array<any> | Record<string, any>;\n};\n\nclass RPCError extends Error {\n  code: number;\n  data: Array<any> | Record<string, any>;\n\n  constructor(\n    message: string | ErrorMessage = ErrorCodes.INTERNALERROR.message,\n    data = null,\n    code: number = ErrorCodes.INTERNALERROR.code\n  ) {\n    if (isObject(message)) {\n      const messageObj = message as RPCError;\n\n      super(messageObj.message);\n\n      this.code = messageObj.code;\n      this.data = messageObj.data;\n    } else {\n      super(message as string);\n\n      this.code = code;\n      this.data = data;\n    }\n  }\n}\n\nexport { RPCError, ErrorCodes };\n","export enum DataTypesEnum {\n  AssocType = -18,\n  BooleanType = 5,\n  ClassType = 9,\n  DapiNodeType = -72,\n  DapiSessionType = -74,\n  DapiStreamType = -68,\n  DapiVersionType = -69,\n  DateType = -7,\n  DynamicType = -127,\n  ErrorType = 1,\n  FileType = -107,\n  FrameType = 10,\n  IntegerType = 2,\n  JavaObjectType = -42,\n  ListType = -2,\n  LongType = -8,\n  ObjectType = -128,\n  ObjRefType = 3,\n  RealType = -4,\n  RecArrayType = -110,\n  RecordType = -109,\n  ScriptType = -3,\n  SocketType = -102,\n  StringType = -1,\n  UAPIType = -196,\n  UndefinedType = 0,\n  VoidType = 8,\n  WAPIWorkType = -75,\n}\n","import { RPCError } from \"./error-codes\";\n\nimport Session from \"../Session\";\n\nconst sequence = {\n  index: 0,\n  get next(): number {\n    this.index = this.index + 1;\n    return this.index;\n  },\n};\n\ntype requestObjectType = {\n  jsonrpc: string;\n  method: string;\n  id: number;\n  params: Record<string, any> | Array<any>;\n};\n\nexport default class RPCClient {\n  session: Session;\n  relativePath: string;\n\n  /* protected */\n  _batchQueue: Array<requestObjectType>;\n\n  constructor(session: Session, relativePath: string) {\n    this.session = session;\n    this.relativePath = relativePath;\n    this.resetQueue();\n  }\n\n  /* protected */\n  requestObject(\n    method: string,\n    params: Record<string, any> | Array<any>,\n    id: number\n  ): requestObjectType {\n    return {\n      jsonrpc: \"2.0\",\n      method,\n      id,\n      params,\n    };\n  }\n\n  /* protected */\n  handleResponse(data) {\n    if (Object.prototype.hasOwnProperty.call(data, \"result\")) {\n      return data.result;\n    } else if (Object.prototype.hasOwnProperty.call(data, \"error\")) {\n      const err = data.error;\n      throw new RPCError(err.message, err.data, err.code);\n    } else {\n      throw Error(\"The server did not respond correctly.\");\n    }\n  }\n\n  // https://www.jsonrpc.org/specification#request_object\n  // params is allowed to be null!\n  // also on queue function below\n  async request(method: string, params: any, id: number = sequence.next) {\n    const response = await this.session.postBody(this.relativePath, {\n      rpc: this.requestObject(method, params, id),\n    });\n\n    return this.handleResponse(response.data);\n  }\n\n  /* private */\n  resetQueue(): void {\n    this._batchQueue = [];\n  }\n\n  queue(method: string, params: any, id: number = sequence.next): RPCClient {\n    this._batchQueue.push(this.requestObject(method, params, id));\n    return this;\n  }\n\n  async batch(throwOnError: boolean = false): Promise<any> {\n    const queue = this._batchQueue;\n    this.resetQueue();\n    const response = await this.session.postBody<any>(this.relativePath, {\n      rpc: queue,\n    });\n\n    return (response.data.data ?? []).map((item) => {\n      if (throwOnError) {\n        return this.handleResponse(item);\n      } else {\n        try {\n          return this.handleResponse(item);\n        } catch (e) {\n          return e;\n        }\n      }\n    });\n  }\n\n  rhnode(dataid, method, args = [], id = sequence.next) {\n    const params = {\n      dataid,\n      args,\n    };\n\n    return this.request(method, params, id);\n  }\n\n  rhnodeQueue(dataid, method, args = [], id = sequence.next) {\n    const params = {\n      dataid,\n      args,\n    };\n\n    return this.queue(method, params, id);\n  }\n}\n","import axios, { AxiosInstance } from \"axios\";\nimport { components } from \"../types/cs-rest-types/schema\";\n\nexport type CSRestOptions = {\n  username?: string;\n  password?: string;\n  otcsticket?: string;\n  baseUrl: string;\n};\n\nconst getInstance = (options: CSRestOptions) => {\n  const instance = axios.create({\n    baseURL: options.baseUrl,\n    paramsSerializer: {\n      // ensures ?field=A&field=B instead of ?field[]=A&field[]=B\n      indexes: null,\n    },\n  });\n\n  instance.interceptors.response.use(\n    (response) => {\n      const otcsticket = response?.headers.otcsticket;\n\n      if (otcsticket) {\n        instance.defaults.headers.common.OTCSTicket = otcsticket;\n      }\n      return response;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  return instance;\n};\n\nconst axiosFactory = (options: CSRestOptions): AxiosInstance => {\n  const instance = getInstance(options);\n\n  const username = options.username;\n  const password = options.password;\n  const otcsticket = options.otcsticket;\n\n  if (otcsticket) {\n    instance.defaults.headers.common.OTCSTicket = otcsticket;\n  } else if (username && password) {\n    instance.interceptors.request.use(async (config) => {\n      if (config.headers.common?.OTCSTicket) {\n        return config;\n      } else {\n        const response = await axios.post<\n          components[\"schemas\"][\"auth_AuthenticationInfo\"]\n        >(\n          `${options.baseUrl}/api/v1/auth/`,\n          {\n            username,\n            password,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n\n        config.headers.OTCSTicket = response.data.ticket;\n\n        return config;\n      }\n    });\n  } else {\n    throw Error(\"You must provide an otcsticket or username and password.\");\n  }\n\n  return instance;\n};\n\nexport default axiosFactory;\n","/**\n * How many do we actually care about?\n */\nexport enum SubTypesEnum {\n  // TwoWayTee = 294,\n  Accession = 834,\n  ActiveFolder = 1298,\n  Activeview = 30309,\n  ActivityManager = 907,\n  Alias = 1,\n  Appearance = 480,\n  AppearanceFolder = 483,\n  AppearancesVolume = 481,\n  ArchiveFolder = 31711,\n  BackupManager = 290,\n  BackupProcess = 291,\n  BestBets = 274,\n  Blog = 356,\n  BlogEntry = 357,\n  BoxFolder = 530,\n  Category = 131,\n  CategoryFolder = 132,\n  Channel = 207,\n  ChannelVol = 209,\n  Classification = 199,\n  ClassificationShortcut = 197,\n  ClassificationTree = 196,\n  ClassifiedItems = 194,\n  Collection = 298,\n  Column = 902,\n  Comments = 345,\n  CommentsReply = 348,\n  CommentsVol = 346,\n  CommExpertContainer = 3030338,\n  CommExpertGroup = 3030339,\n  CommStore = 3030329,\n  CommTemplate = 3030002,\n  CommTemplateFolder = 3030333,\n  CommTemplateVol = 3030004,\n  CommURLStore = 3030335,\n  CommWorkspace = 3030334,\n  CommXSLVolume = 3030205,\n  CompoundDoc = 136,\n  CompoundEMail = 557,\n  ContentModuleFolder = 3030372,\n  CSApplicationManifest = 32658,\n  CSApplicationsVolume = 32657,\n  CustomView = 146,\n  CustomViewTemplate = 844,\n  DataFlowManager = 270,\n  DataSourceFolder = 276,\n  DirWalker = 277,\n  Discussion = 215,\n  DispositionGroup = 602,\n  Document = 144,\n  DocumentLLNode = 1297,\n  DocumentServer = 283,\n  Dossier = 32912,\n  DossierCabinet = 32916,\n  DossierCabinetArchive = 31707,\n  DossierTemplate = 32914,\n  DossierTemplateFolder = 31709,\n  DossierTemplatesVolume = 32917,\n  DossierTemplateVolume = 32915,\n  DossierVolume = 32913,\n  DPSBinding = 31602,\n  DPSFolder = 31601,\n  DPSVolume = 31603,\n  DTDLLNode = 335,\n  DynamicView = 900,\n  EMail = 749,\n  EmailConversationItems = 2504,\n  EnterpriseArchiveDocument = 753,\n  Facet = 904,\n  FacetFolder = 905,\n  FacetTree = 903,\n  FailedFolder = 1299,\n  FixedSystemColumn = 906,\n  Folder = 0,\n  Form = 223,\n  Generation = 2,\n  GENERICCONTENTMODULE = 3030371,\n  GlobalAppearance = 482,\n  HoldContainer = 833,\n  HTMLConversion = 282,\n  HTMLFormView = 226,\n  Importer = 293,\n  Inbox = 731,\n  IndexEngine = 368,\n  IndexTracer = 147,\n  IndexUpdate = 281,\n  InternalOTDS = 924,\n  ItemTemplateVol = 541,\n  ItemTemplateVolFolder = 542,\n  JournalVolume = 361,\n  LibraryExtractor = 259,\n  LibraryObj = 272,\n  LLNodeEmailFolder = 751,\n  LLNodeFAQ = 123475,\n  LLNodeFAQEntry = 123476,\n  LLNodeForum = 123469,\n  LLNodeForumEntry = 123470,\n  LLNodeURQuestion = 430,\n  LLNodeURReply = 432,\n  Locators = 422,\n  Mailbox = 732,\n  MailStore = 3030331,\n  ManagedSpace = 31710,\n  MediaType = 410,\n  MediaTypesContainer = 414,\n  MemcachedFolder = 919,\n  MemcachedProcess = 920,\n  Merge = 273,\n  MicroPost = 1281,\n  MicroPostVolume = 1282,\n  MultiVolClassification = 372,\n  MultiVolClassificationProxy = 374,\n  MultiVolClassificationTree = 373,\n  MyReservedItems = 870,\n  MyWorkbenches = 532,\n  NAVMENUVOL = 3030756,\n  News = 208,\n  OTCIndexObj = 257,\n  Partition = 371,\n  PartitionMap = 370,\n  PersonalComm = 3030203,\n  PersonalCommSystemVolume = 3030003,\n  PersonalCommVol = 3030204,\n  PersonalStagingFolder = 398,\n  PersonalWebpage = 3030343,\n  PhysicalItemBox = 424,\n  PhysicalItemContainer = 412,\n  PhysicalItemCopy = 419,\n  PhysicalItem_non_Container = 411,\n  PhysObjAdmin = 415,\n  PhysObjBatchLabels = 418,\n  PhysObjCirculation = 416,\n  PhysObjReports = 417,\n  Poll = 218,\n  Process = 271,\n  Profile = 195,\n  Project = 202,\n  ProjectTemplate = 543,\n  ProjectVol = 201,\n  Prospector = 384,\n  ProspectorQueries = 380,\n  ProspectorSnapshot = 387,\n  Provenance = 829,\n  Proxy = 260,\n  PublishingFolder = 31712,\n  PublishingFolderVolume = 31713,\n  QAFolder = 441,\n  QueryFile = 296,\n  QuestionVolume = 431,\n  RecentItems = 327,\n  RecordType = 425,\n  RecordTypesContainer = 428,\n  RedForm = 32918,\n  RedFormVolume = 32919,\n  Release = 138,\n  RemoteLLDataSource = 381,\n  Reply = 134,\n  Report = 299,\n  Revision = 139,\n  RIMSDisposition = 555,\n  RIMSDispositionsContainer = 554,\n  RIMSHoldMaintenance = 552,\n  RIMSRsiContainer = 553,\n  RMAdministration = 556,\n  RMClassification = 551,\n  RMFolder = 426,\n  RMPart = 427,\n  RMReportsContainer = 558,\n  RMThesaurus = 559,\n  ScanConfigurationVolume = 2505,\n  ScheduledHoldCriteria = 835,\n  ScriptNode = 32901,\n  SearchBroker = 258,\n  SearchEngine = 369,\n  SearchManager = 269,\n  SearchReport = 278,\n  SearchResultsTemplate = 383,\n  SearchTemplate = 292,\n  Simplate = 31678,\n  SkyPodLLVolume = 49547,\n  SliceFolder = 275,\n  SocialObject = 1280,\n  SocialObjectVolume = 1283,\n  SPCJOBDESCR = 797,\n  SPCJOBDESCRFOLDER = 796,\n  SPCVOLUME = 795,\n  spdcommittee = 3030202,\n  spdcommitteevol = 3030201,\n  spdcommitteevolume = 3030001,\n  spdemail = 3030130,\n  Spider = 280,\n  StorageManagement = 421,\n  SubmitVersionNode = 231,\n  Task = 206,\n  TaskGroup = 205,\n  TaskList = 204,\n  TaskListVol = 210,\n  TaskMilestone = 212,\n  Template = 230,\n  TemplateFolder = 268,\n  TextDocument = 145,\n  Topic = 130,\n  Transfers = 423,\n  TransportBox = 531,\n  TransportItem = 526,\n  TransportItemPart = 527,\n  UrgentRequests = 3030330,\n  URL = 140,\n  VirtualFolder = 899,\n  VolBlog = 123461,\n  VolCategories = 133,\n  VolClassification = 198,\n  VolComments = 347,\n  VolDAP = 987352,\n  VolDeletedItems = 405,\n  VolDirectory = 375,\n  VolDiscussion = 143,\n  VolDomainWorkspace = 180,\n  VolDTD = 336,\n  VolEditWorkflow = 162,\n  VolFacets = 901,\n  VolLibrary = 141,\n  VolOrphan = 403,\n  VolPersonalStaging = 397,\n  VolPerspectives = 908,\n  VolPhysObj = 413,\n  VolRecMan = 550,\n  VolRelease = 137,\n  VolReports = 211,\n  VolSystem = 148,\n  VolTracer = 149,\n  VolumeFolder = 484,\n  VolumeLLVolume = 1296,\n  VolWarehouse = 525,\n  VolWorkbin = 142,\n  VolWorkflow = 161,\n  WarehouseFolder = 529,\n  WebFormConnectionVolume = 236,\n  WebFormDatabaseConnection = 235,\n  WebFormLookup = 234,\n  WebFormLookupVolume = 233,\n  WebReports = 30303,\n  WFMapLLNode = 128,\n  WFStatusNode = 190,\n  WIKI = 5573,\n  WIKIPAGE = 5574,\n  Workbench = 528,\n  WorkflowAttachments = 154,\n  XMLActivatorCon = 286,\n  XMLActivatorProd = 285,\n}\n","import type Session from \"../Session\";\n\nclass ServiceAbstract {\n  protected _session: Session;\n\n  constructor(session: Session) {\n    this._session = session;\n  }\n\n  get session() {\n    return this._session;\n  }\n}\n\nexport default ServiceAbstract;\n","import ServiceAbstract from \"./service-abstract\";\n\nclass Auth extends ServiceAbstract {\n  auth() {\n    return this.session.get(\"/api/v1/auth/\");\n  }\n}\n\nexport default Auth;\n","/**\n * A simple check whether we're in a browser or node context.\n *\n * @returns\n */\nexport const isNode = () => typeof window === \"undefined\";\n","import { SubTypesEnum } from \"../utils/subtypes-enum\";\r\nimport ServiceAbstract from \"./service-abstract\";\r\nimport { isNode } from \"../utils/is-node\";\r\nimport { components } from \"../types/cs-rest-types/schema\";\r\n\r\n// type TNewVersionType = components[\"schemas\"][\"versions_NewVersionInfo\"];\r\n\r\nclass Nodes extends ServiceAbstract {\r\n  addablenodetypes(dataid: number) {\r\n    return this.session.get<components[\"schemas\"][\"nodes_AddableTypesInfo\"]>(\r\n      `api/v1/nodes/${dataid}/addablenodetypes`\r\n    );\r\n  }\r\n\r\n  async addDocument({\r\n    parent_id,\r\n    fileHandler,\r\n    // apiVersion = \"v1\",\r\n    name = undefined,\r\n    description = undefined,\r\n    options = {},\r\n  }: {\r\n    parent_id: number;\r\n    fileHandler: File | string;\r\n    // apiVersion?: \"v1\" | \"v2\";\r\n    name?: string;\r\n    description?: string;\r\n    options?: Record<string, any>;\r\n  }) {\r\n    const url = `api/v1/nodes`;\r\n\r\n    if (isNode() && this.session._isString(fileHandler)) {\r\n      // node.js\r\n      const fs = await import(\"fs\");\r\n      const f = fs.createReadStream(fileHandler);\r\n\r\n      const params = {\r\n        ...options,\r\n        type: SubTypesEnum.Document,\r\n        name,\r\n        parent_id,\r\n        file: f,\r\n      };\r\n\r\n      return this.session.postForm<\r\n        components[\"schemas\"][\"nodes_CreateResponse\"]\r\n      >(url, params);\r\n    } else if (this.session._isFile(fileHandler)) {\r\n      // browser\r\n\r\n      const params = {\r\n        ...options,\r\n        type: SubTypesEnum.Document,\r\n        name,\r\n        description,\r\n        parent_id,\r\n        file: fileHandler,\r\n      };\r\n\r\n      return this.session.postForm<\r\n        components[\"schemas\"][\"nodes_CreateResponse\"]\r\n      >(url, params);\r\n    } else {\r\n      throw new Error(\"Invalid file.\");\r\n    }\r\n  }\r\n\r\n  async addDocumentMajor({\r\n    parent_id,\r\n    fileHandler,\r\n    name = undefined,\r\n    description = undefined,\r\n    options = {},\r\n  }: {\r\n    parent_id: number;\r\n    fileHandler: File | string;\r\n    name?: string;\r\n    description?: string;\r\n    options: Record<string, any>;\r\n  }) {\r\n    const response = await this.addDocument({\r\n      parent_id,\r\n      fileHandler,\r\n      name,\r\n      options: {\r\n        ...options,\r\n        advanced_versioning: true,\r\n      },\r\n    });\r\n\r\n    const dataid = response.data.id;\r\n\r\n    await this.session.versions.promote({\r\n      dataid,\r\n      versionNumber: 1,\r\n      description,\r\n    });\r\n\r\n    await this.session.versions.deleteVersion({\r\n      dataid,\r\n      versionNumber: 1,\r\n    });\r\n\r\n    return response;\r\n  }\r\n\r\n  addItem(type, parent_id, name, params = {}) {\r\n    return this.session.postBody(\"api/v2/nodes\", {\r\n      type,\r\n      parent_id,\r\n      name,\r\n      ...params,\r\n    });\r\n  }\r\n\r\n  node({ dataid, apiVersion = \"v2\", params = {} }) {\r\n    return this.session.get(`api/${apiVersion}/nodes/${dataid}`, {\r\n      params,\r\n    });\r\n  }\r\n\r\n  ancestors(dataid, params = {}) {\r\n    return this.session.get(`api/v1/nodes/${dataid}/ancestors`, {\r\n      params,\r\n    });\r\n  }\r\n\r\n  volumeInfo(objType) {\r\n    return this.session.get(`api/v1/volumes/${objType}`);\r\n  }\r\n\r\n  volumes() {\r\n    return this.session.get(\"api/v2/volumes\");\r\n  }\r\n\r\n  addFolder(parent_id, name, params = {}) {\r\n    return this.addItem(SubTypesEnum.Folder, parent_id, name, params);\r\n  }\r\n\r\n  addGeneration(parent_id, name, original_id, version_number, params = {}) {\r\n    return this.addItem(SubTypesEnum.Generation, parent_id, name, {\r\n      original_id,\r\n      version_number,\r\n      ...params,\r\n    });\r\n  }\r\n\r\n  nodes(dataid, params = {}) {\r\n    // https://developer.opentext.com/webaccess/#url=%2Fawd%2Fresources%2Fapis%2Fcs-rest-api-for-cs-16-s%23!%2Fnodes%2FgetSubnodes_get_15&tab=501\r\n    return this.session.get(`api/v2/nodes/${dataid}/nodes`, {\r\n      params,\r\n    });\r\n  }\r\n\r\n  children(dataid, params = {}) {\r\n    return this.nodes(dataid, params);\r\n  }\r\n\r\n  delete(dataid) {\r\n    return this.session.delete(`api/v1/nodes/${dataid}`);\r\n  }\r\n\r\n  download({ dataid, apiVersion = \"v1\", filePath }) {\r\n    // this.session.nodes.download(1267501, 'v2', '/Users/chris/Downloads/test.pdf')\r\n    if (isNode()) {\r\n      return this.session\r\n        .get(`api/${apiVersion}/nodes/${dataid}/content`, {\r\n          responseType: \"stream\",\r\n        })\r\n        .then(async (response) => {\r\n          const fs = await import(\"fs\");\r\n          const writer = fs.createWriteStream(filePath);\r\n\r\n          response.data.pipe(writer);\r\n\r\n          return new Promise((resolve, reject) => {\r\n            writer.on(\"finish\", resolve);\r\n            writer.on(\"error\", reject);\r\n          });\r\n        });\r\n    } else {\r\n      return Promise.reject(\"Not implemented yet\");\r\n    }\r\n  }\r\n\r\n  audit({ dataid, apiVersion = \"v2\", params = {} }) {\r\n    return this.session.get(`api/${apiVersion}/nodes/${dataid}/audit`, {\r\n      params,\r\n    });\r\n  }\r\n}\r\n\r\nexport default Nodes;\r\n","import Session from \"../Session\";\n\nimport { components } from \"../types/cs-rest-types/schema\";\n\ntype draftprocesses_DraftProcess =\n  components[\"schemas\"][\"draftprocesses_DraftProcess\"];\n\ntype forms_WorkflowPropertiesFormInfo =\n  components[\"schemas\"][\"forms_WorkflowPropertiesFormInfo\"];\n\ntype draftprocesses_DraftProcess_Put =\n  components[\"schemas\"][\"draftprocesses_DraftProcess_Put\"];\n\nexport type TDraftProcess = {\n  // data: {\n  //   links: {\n  //     data: {\n  //       body: string;\n  //       content_type: string;\n  //       href: string;\n  //       method: string;\n  //       name: string;\n  //     };\n  //   };\n  // };\n  // data: categories_V2DataLinks;\n  results: draftprocesses_DraftProcess;\n};\n\nexport type TWorkflowPut = {\n  action: \"Initiate\" | \"formUpdate\";\n  values?: any;\n  comment?: string;\n  authentication_info?: { password: string };\n};\n\nclass WorkflowInitiator {\n  workflowPropertiesInfo: forms_WorkflowPropertiesFormInfo | null = null;\n\n  constructor(private session: Session, private mapId: number) {}\n\n  /**\n   * This method prepares the workflow for initiation. It must be called before any other method.\n   */\n  async start() {\n    this.workflowPropertiesInfo = await this.session.workflow.start(this.mapId);\n  }\n\n  get form() {\n    return this.workflowPropertiesInfo.forms[0];\n  }\n\n  findWorkflowAttribute(attributeName: string) {\n    const properties: Record<string, any> = this.form.schema.properties;\n\n    return Object.entries(properties).find(\n      ([workflowName, value]) => value.title === attributeName\n    );\n  }\n\n  get processId(): number {\n    // @ts-ignore - This is missing in the openapi schema.\n    return this.workflowPropertiesInfo.data.process_id;\n  }\n\n  get attachmentsFolderId(): number | undefined {\n    const dataPackages = this.workflowPropertiesInfo.data.data_packages;\n    const attachmentPkg = dataPackages.find(\n      (pkg) => pkg.type === 1 && pkg.sub_type === 1\n    );\n    return attachmentPkg?.data.attachment_folder_id;\n  }\n\n  get wantComments(): boolean {\n    return this.workflowPropertiesInfo.data.comments_on;\n  }\n\n  get wantAuthentication(): boolean {\n    return this.workflowPropertiesInfo.data.authentication;\n  }\n\n  setWorkflowAttribute(\n    attributeName: string,\n    value: any\n  ): typeof WorkflowInitiator {\n    const [fieldName, definition] =\n      this.findWorkflowAttribute(attributeName) ?? [];\n\n    const attributeType = definition.type;\n    const isArray = attributeType === \"array\";\n\n    if (isArray === Array.isArray(value)) {\n      this.form.data[fieldName] = value;\n      return WorkflowInitiator;\n    } else {\n      throw new Error(\"Invalid type.\");\n    }\n  }\n\n  async formUpdate(): Promise<{ results: draftprocesses_DraftProcess_Put }> {\n    return await this.session.workflow.draftprocessesPut(this.processId, {\n      action: \"formUpdate\",\n      values: this.form.data,\n    });\n  }\n\n  async initiate({\n    comment,\n    password,\n  }: { comment?: string; password?: string } = {}): Promise<{\n    results: draftprocesses_DraftProcess_Put;\n  }> {\n    await this.formUpdate();\n\n    const initiateValues = {\n      action: \"Initiate\",\n      ...(this.wantComments && { comment }),\n      ...(this.wantAuthentication && { authentication_info: { password } }),\n    } as const;\n\n    const response: { results: draftprocesses_DraftProcess_Put } =\n      await this.session.workflow.draftprocessesPut(\n        this.processId,\n        initiateValues\n      );\n\n    return response;\n  }\n}\n\nexport { WorkflowInitiator };\n","import ServiceAbstract from \"./service-abstract\";\r\nimport { components } from \"../types/cs-rest-types/schema\";\r\n\r\ntype forms_WorkflowPropertiesFormInfo =\r\n  components[\"schemas\"][\"forms_WorkflowPropertiesFormInfo\"];\r\n\r\ntype draftprocesses_DraftProcess_Put =\r\n  components[\"schemas\"][\"draftprocesses_DraftProcess_Put\"];\r\n\r\nimport {\r\n  TDraftProcess,\r\n  TWorkflowPut,\r\n  WorkflowInitiator,\r\n} from \"../utils/workflow-initiator\";\r\n\r\nclass Workflow extends ServiceAbstract {\r\n  workflowInitiator(mapId: number): WorkflowInitiator {\r\n    return new WorkflowInitiator(this.session, mapId);\r\n  }\r\n\r\n  start(mapId: number): Promise<forms_WorkflowPropertiesFormInfo> {\r\n    return this.draftprocesses(mapId)\r\n      .then((draftProcess) => {\r\n        // this is a bug in the definition\r\n        // @ts-ignore\r\n        return draftProcess.results.draftprocess_id as number;\r\n      })\r\n      .then((draftprocessId: number) =>\r\n        this.draftprocessesUpdate(draftprocessId)\r\n      );\r\n  }\r\n\r\n  async draftprocesses(workflowId: number) {\r\n    const { data } = await this.session.postForm<\r\n      components[\"schemas\"][\"draftprocesses_DraftProcess_V2EmptyResponse\"]\r\n    >(\"api/v2/draftprocesses\", {\r\n      workflow_id: workflowId,\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  async draftprocessesUpdate(\r\n    draftprocessId: number\r\n  ): Promise<forms_WorkflowPropertiesFormInfo> {\r\n    const { data } = await this.session.get(\r\n      \"api/v1/forms/draftprocesses/update\",\r\n      {\r\n        params: {\r\n          draftprocess_id: draftprocessId,\r\n        },\r\n      }\r\n    );\r\n\r\n    return data;\r\n  }\r\n\r\n  async draftprocessesPut(\r\n    draftprocessId: number,\r\n    body: TWorkflowPut\r\n  ): Promise<{ results: draftprocesses_DraftProcess_Put }> {\r\n    const { data } = await this.session.putForm(\r\n      `api/v2/draftprocesses/${draftprocessId}`,\r\n      {\r\n        body,\r\n      }\r\n    );\r\n\r\n    return data;\r\n  }\r\n\r\n  // draftprocesses_formUpdate(draftprocess_id, values) {\r\n  // const body = {\r\n  // action: \"formUpdate\",\r\n  // values\r\n  // }\r\n\r\n  // return this.draftprocessesPut(draftprocess_id, body)\r\n  // }\r\n}\r\n\r\nexport default Workflow;\r\n","import ServiceAbstract from \"./service-abstract\";\r\n\r\nclass RHCore extends ServiceAbstract {\r\n  scriptNode(id, body = {}) {\r\n    return this.session.postForm(`api/v1/rhcore/${id}`, body);\r\n  }\r\n}\r\n\r\nexport default RHCore;\r\n","import ServiceAbstract from \"./service-abstract\";\n\nclass Search extends ServiceAbstract {\n  search(where, params = {}) {\n    return this.session.postBody(\"api/v2/search\", {\n      where,\n      ...params,\n    });\n  }\n\n  regions(params = {}) {\n    return this.session.get(\"api/v1/regions\", params);\n  }\n}\n\nexport default Search;\n","import Session from \"../Session\";\nimport ServiceAbstract from \"./service-abstract\";\n\nclass Members extends ServiceAbstract {\n  // public readonly USER: 0\n  // public readonly GROUP: 1\n\n  public readonly USER: number;\n  public readonly GROUP: number;\n\n  constructor(session: Session) {\n    super(session);\n\n    this.USER = 0;\n    this.GROUP = 1;\n  }\n  userQuery(query, options = {}, version = \"v2\") {\n    const params = {\n      limit: 20,\n      where_type: JSON.stringify([this.USER, this.GROUP]),\n      query,\n      ...options,\n    };\n\n    return this.session.get(`api/${version}/members`, { params });\n  }\n\n  member(id, version = \"v2\") {\n    return this.session.get(`api/${version}/members/${id}`);\n  }\n}\n\nexport default Members;\n","import { isNode } from \"../utils/is-node\";\r\nimport ServiceAbstract from \"./service-abstract\";\r\nimport { components } from \"../types/cs-rest-types/schema\";\r\n\r\ntype TNewVersionType = components[\"schemas\"][\"versions_NewVersionInfo\"];\r\n\r\nclass Versions extends ServiceAbstract {\r\n  async addVersion({\r\n    dataid,\r\n    fileHandler,\r\n    apiVersion = \"v1\",\r\n    // fileName = undefined,\r\n    options = {},\r\n  }: {\r\n    dataid: number;\r\n    fileHandler: File | string;\r\n    apiVersion?: \"v1\" | \"v2\";\r\n    // fileName?: string;\r\n    options?: Record<string, any>;\r\n  }) {\r\n    console.assert(dataid != null, \"dataid cannot be null\");\r\n    console.assert(fileHandler != null, \"fileHandler cannot be null\");\r\n\r\n    const url = `api/${apiVersion}/nodes/${dataid}/versions`;\r\n\r\n    if (isNode() && this.session._isString(fileHandler)) {\r\n      // node.js\r\n      const [fs] = await Promise.all([import(\"fs\"), import(\"path\")]);\r\n      const f = fs.createReadStream(fileHandler);\r\n\r\n      const params = {\r\n        file: f,\r\n        ...options,\r\n      };\r\n\r\n      // console.log(params)\r\n\r\n      return this.session.postForm<TNewVersionType>(url, params);\r\n    } else if (this.session._isFile(fileHandler)) {\r\n      // browser\r\n      // const name = fileName || fileHandler.name;\r\n\r\n      const params = {\r\n        file: fileHandler,\r\n        ...options,\r\n      };\r\n\r\n      return this.session.postForm<TNewVersionType>(url, params);\r\n\r\n      // formData.append('file', fileHandler, name)\r\n      // return this.session.post(url, formData)\r\n    } else {\r\n      throw new Error(\"Invalid file.\");\r\n    }\r\n  }\r\n\r\n  async download({ dataid, version, filePath }) {\r\n    console.assert(dataid != null, \"dataid cannot be null\");\r\n    console.assert(version != null, \"version cannot be null\");\r\n    console.assert(filePath != null, \"filePath cannot be null\");\r\n\r\n    if (isNode()) {\r\n      return this.session\r\n        .get(`api/v1/nodes/${dataid}/versions/${version}/content`, {\r\n          responseType: \"stream\",\r\n        })\r\n        .then(async (response) => {\r\n          const fs = await import(\"fs\");\r\n          const writer = fs.createWriteStream(filePath);\r\n\r\n          response.data.pipe(writer);\r\n\r\n          return new Promise((resolve, reject) => {\r\n            writer.on(\"finish\", resolve);\r\n            writer.on(\"error\", reject);\r\n          });\r\n        });\r\n    } else {\r\n      return Promise.reject(\"Not implemented yet\");\r\n    }\r\n  }\r\n\r\n  async list(dataid: number) {\r\n    const url = `api/v1/nodes/${dataid}/versions`;\r\n    return this.session.get(url);\r\n  }\r\n  async version(dataid, version_number = \"latest\") {\r\n    // latest not supported in v2\r\n    const url = `api/v1/nodes/${dataid}/versions/${version_number}`;\r\n    return this.session.get(url);\r\n  }\r\n\r\n  async promote({ dataid, versionNumber, description = null }) {\r\n    console.assert(dataid != null, \"dataid cannot be null\");\r\n    console.assert(versionNumber != null, \"number_to_keep must be an integer\");\r\n\r\n    const url = `api/v2/nodes/${dataid}/versions/${versionNumber}/promote`;\r\n\r\n    return this.session.postBody(url, {\r\n      ...(!!description && {\r\n        description,\r\n      }),\r\n    });\r\n  }\r\n\r\n  async deleteVersion({ dataid, versionNumber, apiVersion = \"v1\" }) {\r\n    console.assert(dataid != null, \"dataid cannot be null\");\r\n    console.assert(versionNumber != null, \"number_to_keep must be an integer\");\r\n\r\n    const url = `api/${apiVersion}/nodes/${dataid}/versions/${versionNumber}`;\r\n\r\n    // careful with deleteForm or deleteBody\r\n    return this.session.delete(url);\r\n  }\r\n\r\n  async purge({ dataid, number_to_keep = 1 }) {\r\n    console.assert(dataid != null, \"dataid cannot be null\");\r\n    console.assert(!isNaN(number_to_keep), \"number_to_keep must be an integer\");\r\n\r\n    // delete parameters not supported\r\n    // https://stackoverflow.com/questions/51069552/axios-delete-request-with-body-and-headers\r\n    // number_to_keep is ignored\r\n\r\n    const url = `api/v2/nodes/${dataid}/versions`;\r\n\r\n    return this.session.deleteForm(url, {\r\n      number_to_keep,\r\n    });\r\n  }\r\n}\r\n\r\nexport default Versions;\r\n","import ServiceAbstract from \"./service-abstract\";\n\nclass WebReports extends ServiceAbstract {\n  run(dataid, params = {}) {\n    const url = `api/v1/nodes/${dataid}/output`;\n    return this.session.get(url, { params });\n  }\n}\n\nexport default WebReports;\n","import { DataTypesEnum } from \"./utils/data-types-enum\";\r\nimport axiosFactory, { CSRestOptions } from \"./utils/axios-factory\";\r\nimport Auth from \"./handlers/auth\";\r\nimport Nodes from \"./handlers/nodes\";\r\nimport Workflow from \"./handlers/workflow\";\r\nimport RHCore from \"./handlers/rhcore\";\r\nimport Search from \"./handlers/search\";\r\nimport Members from \"./handlers/members\";\r\nimport Versions from \"./handlers/versions\";\r\nimport WebReports from \"./handlers/webreports\";\r\nimport RPCClient from \"./rpc-client/index\";\r\nimport { AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\r\n\r\nexport default class Session {\r\n  protected readonly axios: AxiosInstance;\r\n  protected _nodes: Nodes;\r\n  protected _auth: Auth;\r\n  protected _workflow: any;\r\n  protected _rhcore: RHCore;\r\n  protected _members: Members;\r\n  protected _search: Search;\r\n  protected _webreports: WebReports;\r\n  protected _versions: Versions;\r\n\r\n  public readonly baseUrl: string;\r\n\r\n  constructor(options: CSRestOptions) {\r\n    this.baseUrl = options.baseUrl;\r\n    this.axios = axiosFactory(options);\r\n  }\r\n\r\n  get nodes(): Nodes {\r\n    if (this._nodes == null) {\r\n      this._nodes = new Nodes(this);\r\n    }\r\n\r\n    return this._nodes;\r\n  }\r\n\r\n  get auth(): Auth {\r\n    if (this._auth == null) {\r\n      this._auth = new Auth(this);\r\n    }\r\n\r\n    return this._auth;\r\n  }\r\n\r\n  get workflow(): Workflow {\r\n    if (this._workflow == null) {\r\n      this._workflow = new Workflow(this);\r\n    }\r\n\r\n    return this._workflow;\r\n  }\r\n\r\n  get rhcore(): RHCore {\r\n    if (this._rhcore == null) {\r\n      this._rhcore = new RHCore(this);\r\n    }\r\n\r\n    return this._rhcore;\r\n  }\r\n\r\n  get members(): Members {\r\n    if (this._members == null) {\r\n      this._members = new Members(this);\r\n    }\r\n\r\n    return this._members;\r\n  }\r\n\r\n  get search(): Search {\r\n    if (this._search == null) {\r\n      this._search = new Search(this);\r\n    }\r\n\r\n    return this._search;\r\n  }\r\n\r\n  get webreports(): WebReports {\r\n    if (this._webreports == null) {\r\n      this._webreports = new WebReports(this);\r\n    }\r\n\r\n    return this._webreports;\r\n  }\r\n\r\n  get versions(): Versions {\r\n    if (this._versions == null) {\r\n      this._versions = new Versions(this);\r\n    }\r\n\r\n    return this._versions;\r\n  }\r\n\r\n  get dataTypesEnum() {\r\n    return DataTypesEnum;\r\n  }\r\n\r\n  rpcClient(relativePath = \"/api/v1/rh/rpc/rhnode/\") {\r\n    return new RPCClient(this, relativePath);\r\n  }\r\n\r\n  _isObject(value: unknown): value is Object {\r\n    return value && typeof value === \"object\" && value.constructor === Object;\r\n  }\r\n\r\n  _isString(value: unknown): value is string {\r\n    return typeof value === \"string\" || value instanceof String;\r\n  }\r\n\r\n  _isBoolean(value: unknown): value is boolean {\r\n    return typeof value === \"boolean\";\r\n  }\r\n\r\n  _isFile(value: any): value is File {\r\n    return typeof value?.name === \"string\";\r\n  }\r\n\r\n  putForm(url, params) {\r\n    return this.put(url, params, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n  }\r\n\r\n  postForm<T>(url, params) {\r\n    return this.post<T>(url, params, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      maxBodyLength: Infinity,\r\n    });\r\n  }\r\n\r\n  patchForm(url, params) {\r\n    return this.patch(url, params, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n  }\r\n\r\n  deleteForm(url, params) {\r\n    // FormData does not working on Delete!!\r\n    // See here: https://stackoverflow.com/questions/51069552/axios-delete-request-with-body-and-headers\r\n    // const formData = this.objectToForm(params)\r\n\r\n    return this.delete(url);\r\n  }\r\n\r\n  putBody(url, body) {\r\n    return this.putForm(url, {\r\n      body,\r\n    });\r\n  }\r\n\r\n  postBody<T>(url, body) {\r\n    return this.postForm<T>(url, {\r\n      body,\r\n    });\r\n  }\r\n\r\n  patchBody(url, body) {\r\n    return this.patchForm(url, {\r\n      body,\r\n    });\r\n  }\r\n\r\n  deleteBody(url, body) {\r\n    return this.deleteForm(url, {\r\n      body,\r\n    });\r\n  }\r\n\r\n  get<T = any, R = AxiosResponse<T>>(\r\n    url: string,\r\n    config?: AxiosRequestConfig\r\n  ): Promise<R> {\r\n    return this.axios.get(url, config);\r\n  }\r\n\r\n  post<T = any, R = AxiosResponse<T>>(\r\n    url: string,\r\n    data?: T,\r\n    config?: AxiosRequestConfig\r\n  ): Promise<R> {\r\n    return this.axios.post(url, data, config);\r\n  }\r\n\r\n  put<T = any, R = AxiosResponse<T>>(\r\n    url: string,\r\n    data?: T,\r\n    config?: AxiosRequestConfig\r\n  ): Promise<R> {\r\n    return this.axios.put(url, data, config);\r\n  }\r\n\r\n  patch<T = any, R = AxiosResponse<T>>(\r\n    url: string,\r\n    data?: T,\r\n    config?: AxiosRequestConfig\r\n  ): Promise<R> {\r\n    return this.axios.patch(url, data, config);\r\n  }\r\n\r\n  options<T = any, R = AxiosResponse<T>>(\r\n    url: string,\r\n    config?: AxiosRequestConfig\r\n  ): Promise<R> {\r\n    return this.axios.options(url, config);\r\n  }\r\n\r\n  delete<T = any, R = AxiosResponse<T>>(\r\n    url: string,\r\n    config?: AxiosRequestConfig\r\n  ): Promise<R> {\r\n    return this.axios.delete(url, config);\r\n  }\r\n\r\n  async $get<T = any>(url: string, config?: AxiosRequestConfig): Promise<T> {\r\n    const response = await this.get<T>(url, config);\r\n    return response.data;\r\n  }\r\n}\r\n","import RPCClient from \"./rpc-client\";\r\nimport { RPCError } from \"./rpc-client/error-codes\";\r\nimport Session from \"./Session\";\r\n\r\n// https://medium.com/ovrsea/checking-the-type-of-an-object-in-typescript-the-type-guards-24d98d9119b0\r\nconst isRPCError = (e: RPCError | any): e is RPCError => {\r\n  return (\r\n    (e as RPCError).code !== undefined && (e as RPCError).data !== undefined\r\n  );\r\n};\r\n\r\nexport { isRPCError, RPCError, Session, RPCClient };\r\n"],"names":["DataTypesEnum","RPCError","_Error","message","data","code","_this","isObject","messageObj","call","this","_assertThisInitialized","_inheritsLoose","_wrapNativeSuper","Error","sequence","index","next","RPCClient","session","relativePath","_batchQueue","resetQueue","_proto","prototype","requestObject","method","params","id","jsonrpc","handleResponse","Object","hasOwnProperty","result","err","error","request","Promise","undefined","resolve","postBody","rpc","then","response","e","reject","queue","push","batch","throwOnError","_this2","_response$data$data","map","item","rhnode","dataid","args","rhnodeQueue","SubTypesEnum","ServiceAbstract","_createClass","_session","key","get","Auth","_ServiceAbstract","apply","arguments","auth","isNode","window","Nodes","addablenodetypes","addDocument","_ref","parent_id","fileHandler","_ref$name","name","_ref$description","description","_ref$options","options","url","_isString","fs","f","createReadStream","_extends","type","Document","file","postForm","_isFile","addDocumentMajor","_ref2","_ref2$name","_ref2$description","_ref2$options","advanced_versioning","versions","promote","versionNumber","deleteVersion","addItem","node","_ref3","_ref3$apiVersion","apiVersion","_ref3$params","ancestors","volumeInfo","objType","volumes","addFolder","Folder","addGeneration","original_id","version_number","Generation","nodes","children","download","_ref4","_ref4$apiVersion","filePath","responseType","_interopNamespace","require","writer","createWriteStream","pipe","on","audit","_ref5","_ref5$apiVersion","_ref5$params","WorkflowInitiator","mapId","workflowPropertiesInfo","start","workflow","_this$session$workflo","findWorkflowAttribute","attributeName","entries","form","schema","properties","find","title","setWorkflowAttribute","value","_this$findWorkflowAtt","fieldName","definition","Array","isArray","formUpdate","draftprocessesPut","processId","action","values","initiate","_temp","comment","password","_this3","initiateValues","wantComments","wantAuthentication","authentication_info","forms","process_id","attachmentPkg","data_packages","pkg","sub_type","attachment_folder_id","comments_on","authentication","Workflow","workflowInitiator","draftprocesses","draftProcess","results","draftprocess_id","draftprocessId","draftprocessesUpdate","workflowId","workflow_id","body","putForm","RHCore","scriptNode","Search","search","where","regions","Members","USER","GROUP","userQuery","query","version","limit","where_type","JSON","stringify","member","Versions","addVersion","_ref$apiVersion","console","assert","all","list","_ref4$description","purge","_ref6","_ref6$number_to_keep","number_to_keep","isNaN","deleteForm","WebReports","run","Session","axios","_nodes","_auth","_workflow","_rhcore","_members","_search","_webreports","_versions","baseUrl","instance","create","baseURL","paramsSerializer","indexes","interceptors","use","otcsticket","headers","defaults","common","OTCSTicket","getInstance","username","config","_config$headers$commo","post","ticket","axiosFactory","rpcClient","_isObject","constructor","String","_isBoolean","put","maxBodyLength","Infinity","patchForm","patch","putBody","patchBody","deleteBody","$get"],"mappings":"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"}